{
  "log": {
    "version": "1.2",
    "creator": {
      "name": "Firefox",
      "version": "77.0.1"
    },
    "browser": {
      "name": "Firefox",
      "version": "77.0.1"
    },
    "pages": [
      {
        "startedDateTime": "2020-07-06T13:04:06.683+02:00",
        "id": "page_9",
        "title": "Yahoo France | Actualités, mail et recherche",
        "pageTimings": {
          "onContentLoad": -66100,
          "onLoad": 11710
        }
      }
    ],
    "entries": [
      {
        "pageref": "page_9",
        "startedDateTime": "2020-07-06T13:04:06.683+02:00",
        "request": {
          "bodySize": 0,
          "method": "GET",
          "url": "http://127.0.0.1:8080/uncarbonize/100/0/https%3A%2F%2Ffr.yahoo.com%2F%3Fp%3Dus",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Host",
              "value": "127.0.0.1:8080"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:77.0) Gecko/20100101 Firefox/77.0"
            },
            {
              "name": "Accept",
              "value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Cookie",
              "value": "enwikimwuser-sessionId=b98b31759155513c977d; pv_number=1"
            },
            {
              "name": "Upgrade-Insecure-Requests",
              "value": "1"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            }
          ],
          "cookies": [
            {
              "name": "enwikimwuser-sessionId",
              "value": "b98b31759155513c977d"
            },
            {
              "name": "pv_number",
              "value": "1"
            }
          ],
          "queryString": [],
          "headersSize": 498
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "X-Powered-By",
              "value": "Express"
            },
            {
              "name": "Content-Encoding",
              "value": "gzip"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "content-type",
              "value": "text/html; charset=utf-8"
            },
            {
              "name": "Content-Length",
              "value": "38120"
            },
            {
              "name": "ETag",
              "value": "W/\"94e8-EAPfvYIcsX0wSj28IkDenFD3SYs\""
            },
            {
              "name": "Date",
              "value": "Mon, 06 Jul 2020 11:04:17 GMT"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            }
          ],
          "cookies": [],
          "content": {
            "mimeType": "text/html; charset=utf-8",
            "size": 155098,
            "text": "<!DOCTYPE html>\n<html id=\"atomic\" lang=\"fr-FR\" class=\"atomic ua-wk ua-mac ua-wk537 l-out Pos-r https fp fp-v2 rc1 fp-default mini-uh-on uh-topbar-on viewer-right two-col ntk-wide ltr desktop Desktop bktFPMON2001 bktFRHOT1 failsafe\"><head><base href=\"https://fr.yahoo.com\"/><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"/><title>Yahoo France | Actualités, mail et recherche</title><meta http-equiv=\"x-dns-prefetch-control\" content=\"on\"/><link rel=\"dns-prefetch\" href=\"//s.yimg.com\"/><link rel=\"preconnect\" href=\"//s.yimg.com\"/><link rel=\"dns-prefetch\" href=\"//csc.beap.bc.yahoo.com\"/><link rel=\"preconnect\" href=\"//csc.beap.bc.yahoo.com\"/><link rel=\"dns-prefetch\" href=\"//geo.yahoo.com\"/><link rel=\"preconnect\" href=\"//geo.yahoo.com\"/><link rel=\"dns-prefetch\" href=\"//comet.yahoo.com\"/><link rel=\"preconnect\" href=\"//comet.yahoo.com\"/><link rel=\"dns-prefetch\" href=\"//video-api.yql.yahoo.com\"/><link rel=\"preconnect\" href=\"//video-api.yql.yahoo.com\"/><meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/><meta name=\"description\" content=\"Actualités, sport, people et lifestyle : le meilleur de l'info en un clic.\"/><meta name=\"keywords\" content=\"yahoo, page d’accueil yahoo, page accueil yahoo, yahoo search, yahoo mail, yahoo messenger, yahoo jeux, actualités, finance, sport, divertissement\"/><meta property=\"og:title\" content=\"Yahoo France | Actualités, mail et recherche\"/><meta property=\"og:type\" content=\"website\"/><meta property=\"og:url\" content=\"http://fr.yahoo.com\"/><meta property=\"og:description\" content=\"Actualités, sport, people et lifestyle : le meilleur de l'info en un clic.\"/><meta property=\"og:image\" content=\"https://s.yimg.com/cv/apiv2/social/images/yahoo_default_logo.png\"/><meta property=\"og:site_name\" content=\"Yahoo France | Actualités, mail et recherche\"/><meta property=\"fb:app_id\" content=\"458584288257241\"/><meta name=\"format-detection\" content=\"telephone=no\"/><link rel=\"icon\" sizes=\"any\" mask=\"\" /><meta name=\"theme-color\" content=\"#400090\"/><link rel=\"shortcut icon\" /><link rel=\"canonical\" /><meta property=\"fb:pages\" content=\"138207559575213\"/><meta name=\"referrer\" content=\"unsafe-url\"/><link  rel=\"stylesheet\" type=\"text/css\"/><link  rel=\"stylesheet\" type=\"text/css\"/><link  rel=\"stylesheet\" type=\"text/css\"/><link  rel=\"stylesheet\" type=\"text/css\"/><link  rel=\"stylesheet\" type=\"text/css\"/><link  rel=\"stylesheet\" type=\"text/css\"/><link  rel=\"stylesheet\" type=\"text/css\"/><link  rel=\"stylesheet\" type=\"text/css\"/><link  rel=\"stylesheet\" type=\"text/css\"/><link  rel=\"stylesheet\" type=\"text/css\"/><link  rel=\"stylesheet\" type=\"text/css\"/><link  rel=\"stylesheet\" type=\"text/css\"/><link  rel=\"stylesheet\" type=\"text/css\"/><link  rel=\"stylesheet\" type=\"text/css\"/><link  rel=\"stylesheet\" type=\"text/css\"/><link  rel=\"stylesheet\" type=\"text/css\"/><link  rel=\"stylesheet\" type=\"text/css\"/><link  rel=\"stylesheet\" type=\"text/css\"/><link  rel=\"stylesheet\" type=\"text/css\"/><link  rel=\"stylesheet\" type=\"text/css\"/><link  rel=\"stylesheet\" type=\"text/css\"/><link  rel=\"stylesheet\" type=\"text/css\"/><script type=\"text/javascript\"  defer=\"\"></script><script type=\"text/javascript\"  defer=\"\"></script><script type=\"text/javascript\"  defer=\"\"></script><script type=\"text/javascript\"  defer=\"\"></script><script type=\"text/javascript\"  defer=\"\"></script><link rel=\"search\" type=\"application/opensearchdescription+xml\"  title=\"Yahoo Search\"/><script>\n    var myYahoostartTime = new Date(),\n        afPerfHeadStart=new Date().getTime(),\n        ie;\n\n    \n    document.documentElement.className += ' JsEnabled jsenabled';</script><link rel=\"manifest\" /><meta name=\"oath:guce:consent-host\" content=\"guce.yahoo.com\"/><script type=\"text/javascript\">/*! CMP 3.0.3 Copyright 2018 Oath Holdings, Inc. */!function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"/\",n(n.s=15)}({15:function(e,t,n){\"use strict\";n.r(t),n(16),function(){function e(e){var t,n=\"string\"==typeof e.data,r=e.data;if(n)try{r=JSON.parse(e.data)}catch(r){}r&&r.__cmpCall&&(t=r.__cmpCall,window.__cmp(t.command,t.parameter,(function(r,a){var o={__cmpReturn:{returnValue:r,success:a,callId:t.callId}};e&&e.source&&e.source.postMessage(n?JSON.stringify(o):o,\"*\")})))}window.document.documentMode||n(17),\"function\"==typeof __cmp||(window.__cmp=function(){var e=arguments;if(__cmp.a=__cmp.a||[],!e.length)return __cmp.a;\"ping\"===e[0]?e[2]({gdprAppliesGlobally:!1,cmpLoaded:!1},!0):__cmp.a.push([].slice.apply(e))},function e(){if(document.body&&document.body.firstChild){var t=document.body,n=document.createElement(\"iframe\");n.style.display=\"none\",n.height=n.width=0,n.name=\"__cmpLocator\",t.insertBefore(n,t.firstChild)}else setTimeout(e,5)}(),window.addEventListener?window.addEventListener(\"message\",e,!1):window.attachEvent(\"onmessage\",e))}()},16:function(e,t){!function(){for(var e,t=\"__uspapiLocator\",n=[],r=window;r;){try{if(r.frames[t]){e=r;break}}catch(e){}if(r===window.top)break;r=r.parent}e||(function e(){var n=window.document;if(!window.frames[t])if(n.body){var r=n.createElement(\"iframe\");r.style.cssText=\"display:none\",r.name=t,n.body.appendChild(r)}else setTimeout(e,5)}(),window.__uspapi=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];if(!t.length)return n;n.push(t)},window.addEventListener(\"message\",(function(e){var t=\"string\"==typeof e.data,n={};try{n=t?JSON.parse(e.data):e.data}catch(n){}var r=n.__uspapiCall;r&&window.__uspapi(r.command,r.version,(function(n,a){var o={__uspapiReturn:{returnValue:n,success:a,callId:r.callId}};t&&(o=JSON.stringify(o)),e&&e.source&&e.source.postMessage(o,\"*\")}),r.parameter)}),!1))}()},17:function(e,t,n){\"use strict\";n.r(t);var r=n(9);n.n(r)()()},9:function(e,t,n){\"use strict\";e.exports=function(){for(var e,t=[],n=window;n;){try{if(n.frames.__tcfapiLocator){e=n;break}}catch(e){}if(n===window.top)break;n=n.parent}e||(function e(){var t=window.document,n=!!window.frames.__tcfapiLocator;if(!n)if(t.body){var r=t.createElement(\"iframe\");r.style.cssText=\"display:none\",r.name=\"__tcfapiLocator\",t.body.appendChild(r)}else setTimeout(e,5);return!n}(),window.__tcfapi=function(){for(var e,n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];if(!r.length)return t;if(\"setGdprApplies\"===r[0])3<r.length&&2===parseInt(r[1],10)&&\"boolean\"==typeof r[3]&&(e=r[3],\"function\"==typeof r[2]&&r[2](\"set\",!0));else if(\"ping\"===r[0]){var o={gdprApplies:e,cmpLoaded:!1,cmpStatus:\"stub\"};\"function\"==typeof r[2]&&r[2](o)}else t.push(r)},window.addEventListener(\"message\",(function(e){var t=\"string\"==typeof e.data,n={};try{n=t?JSON.parse(e.data):e.data}catch(e){}var r=n.__tcfapiCall;r&&window.__tcfapi(r.command,r.version,(function(n,a){var o={__tcfapiReturn:{returnValue:n,success:a,callId:r.callId}};t&&(o=JSON.stringify(o)),e&&e.source&&e.source.postMessage(o,\"*\")}),r.parameter)}),!1))}}});</script><script type=\"text/javascript\"  async=\"\"></script><script type=\"text/javascript\">\n            window.cssUrls = [\"https:\\/\\/s.yimg.com\\/os\\/yc\\/css\\/bundle.c60a6d54.css\",\"https:\\/\\/s.yimg.com\\/aaq\\/fp\\/css\\/tdv2-applet-featurebar\\/atomic.ltr.4fdccfb2.css\",\"https:\\/\\/s.yimg.com\\/aaq\\/fp\\/css\\/tdv2-wafer-ntk\\/atomic.desktop.ltr.93092538.css\",\"https:\\/\\/s.yimg.com\\/aaq\\/fp\\/css\\/tdv2-wafer-stream\\/atomic.desktop.ltr.3f9ac49d.css\",\"https:\\/\\/s.yimg.com\\/aaq\\/fp\\/css\\/tdv2-wafer-trending\\/atomic.ltr.23eebfb8.css\",\"https:\\/\\/s.yimg.com\\/aaq\\/fp\\/css\\/tdv2-wafer-weather\\/atomic.ltr.e446583d.css\",\"https:\\/\\/s.yimg.com\\/aaq\\/fp\\/css\\/react-wafer-topics\\/atomic.ltr.7adc07b3.css\",\"https:\\/\\/s.yimg.com\\/aaq\\/fp\\/css\\/tdv2-wafer-poll\\/atomic.ltr.cb5c0726.css\",\"https:\\/\\/s.yimg.com\\/aaq\\/fp\\/css\\/tdv2-wafer-footer\\/atomic.ltr.81873b12.css\",\"https:\\/\\/s.yimg.com\\/aaq\\/fp\\/css\\/tdv2-wafer-header\\/atomic.ltr.e6514a91.css\",\"https:\\/\\/s.yimg.com\\/aaq\\/fp\\/css\\/tdv2-wafer-header\\/custom.desktop.1c7eb152.css\",\"https:\\/\\/s.yimg.com\\/aaq\\/fp\\/css\\/tdv2-wafer-ntk\\/custom.desktop.a69916e0.css\",\"https:\\/\\/s.yimg.com\\/aaq\\/fp\\/css\\/tdv2-wafer-stream\\/custom.desktop.f2c84196.css\",\"https:\\/\\/s.yimg.com\\/aaq\\/fp\\/css\\/tdv2-wafer-weather\\/common.desktop.b3918926.css\",\"https:\\/\\/s.yimg.com\\/aaq\\/fp\\/css\\/tdv2-wafer-user-dialog\\/atomic.ltr.9eb54614.css\",\"https:\\/\\/s.yimg.com\\/aaq\\/fp\\/css\\/tdv2-wafer-storyswarm\\/atomic.ltr.c06b27d3.css\",\"https:\\/\\/s.yimg.com\\/aaq\\/fp\\/css\\/tdv2-wafer-header\\/dialogue.desktop.5bb76716.css\",\"https:\\/\\/s.yimg.com\\/aaq\\/scp\\/css\\/viewer.32b3bc01.css\"];\n            window.comboCssKey = \"\";\n            window.lazyLoadCss = false;\n        </script></head><body class=\" ua-wk ua-mac ua-wk537  l-out Pos-r https fp fp-v2 rc1 fp-default mini-uh-on uh-topbar-on viewer-right two-col ntk-wide ltr  \n  stream-dense noadsbkt\" dir=\"ltr\"><noscript></noscript><div id=\"darla-assets-js-top\"></div><header id=\"Header\"><div id=\"applet_p_50000372\" class=\"headertdv2wafer wafer-rapid-module \" data-applet-guid=\"p_50000372\" data-applet-type=\"headertdv2wafer\" data-applet-params=\"_suid:50000372\" data-i13n=\"auto:true;sec:hd;useViewability:true\" data-i13n-sec=\"hd\" data-ylk=\"rspns:nav;t1:a1;t2:hd;itc:0;\"><div><div><div id=\"header-wrapper\" class=\"Bgc(#fff) Bdbc(t) Bdbs(s) Bdbw(1px) D(tb) Pos(f) Tbl(f) W(100%) Z(4) has-scrolled_Bdc($c-fuji-grey-d) Scrolling_Bdc($c-fuji-grey-d) has-scrolled_Bxsh($headerShadow) Scrolling_Bxsh($headerShadow) \"><div class=\"Bgc(#fff) M(a) Maw(1301px) Miw(1000px) Pb(12px) Pt(22px) Pos(r) TranslateZ(0) Z(6)\"><h1 class=\"Fz(0) Pstart(15px) Pos(a)\"><a id=\"header-logo\" href=\"https://fr.yahoo.com/\" class=\"D(b) Pos(r)\" data-ylk=\"elm:img;elmt:logo;sec:hd;slk:logo\"><img class=\"H(27px)!--sm1024 Mt(9px)!--sm1024 W(90px)!--sm1024\" src=\"https://s.yimg.com/rz/p/yahoo_frontpage_en-US_s_f_p_205x58_frontpage_2x.png\" height=\"58px\" width=\"205px\" alt=\"Yahoo\" title=\"Yahoo\"/></a></h1><div class=\"H(46px) Mend(396px) Mstart(255px) Maw(647px) Pos(r) Mstart(120px)--sm1024 Va(t)\"><div class=\"D(tb) W(100%)\"><form id=\"header-search-form\" action=\"https://fr.search.yahoo.com/search\" class=\"D(tb) H(46px) Pos(r) Va(m) W(100%)\" data-ylk=\"elm:kb-ent;elmt:srch;sec:srch;slk:srchweb;tar:fr.search.yahoo.com\" method=\"get\" target=\"_top\"><label for=\"header-search-input\" class=\"Hidden\">Rechercher</label><input type=\"text\" id=\"header-search-input\" aria-autocomplete=\"list\" aria-expanded=\"false\" aria-label=\"\" placeholder=\"\" autocapitalize=\"off\" autocomplete=\"off\" class=\"Bgc(t) Bd Bdrsbstart(2px)! Bdc(#b0b0b0) Bdendw(0) Bdrs(0) Bdrststart(2px)! Bxsh(n) Bxz(bb) D(b) Fz(18px) H(inh) M(0) O(0) Px(10px) W(100%) Bdc($c-fuji-blue-1-c):f Bdc(#949494):h\" name=\"p\"/><div class=\"D(tbc) H(100%) Ta(c) Va(t) W(90px)\"><button id=\"header-desktop-search-button\" class=\"Bgc(#5701ed) submit-btn Bd(n) Bdrsbend(2px) Bdrstend(2px) D(b) H(100%) M(0) P(0) rapid-noclick-resp W(100%)\" data-ylk=\"elm:btn;elmt:srch;itc:0;rspns:nav;sec:srch;slk:srchweb;t1:a1;t2:srch;tar:fr.search.yahoo.com;tar_uri:/search\" type=\"submit\" aria-label=\"Rechercher\"><svg class=\"Cur(p)\" width=\"24\" style=\"stroke-width:0;fill:#fff;stroke:#fff;vertical-align:bottom\" height=\"24\" viewBox=\"0 0 24 24\" data-icon=\"search\"><path d=\"M9 3C5.686 3 3 5.686 3 9c0 3.313 2.686 6 6 6s6-2.687 6-6c0-3.314-2.686-6-6-6m13.713 19.713c-.387.388-1.016.388-1.404 0l-7.404-7.404C12.55 16.364 10.85 17 9 17c-4.418 0-8-3.582-8-8 0-4.42 3.582-8 8-8s8 3.58 8 8c0 1.85-.634 3.55-1.69 4.905l7.403 7.404c.39.386.39 1.015 0 1.403\"></path></svg></button></div><input type=\"hidden\" class=\"V(h)\" name=\"fr\" value=\"yfp-search-sb\" data-fr=\"yfp-search-sb\" data-submit-only=\"\"/><input type=\"hidden\" class=\"V(h)\" name=\"fr\" value=\"yfp-search-sa\" data-fr=\"yfp-search-sa\" data-assist-only=\"\"/><input type=\"hidden\" class=\"V(h)\" name=\"fr\" value=\"yfp-search-tn-default\" data-fr=\"yfp-search-tn-default\" data-submit-default-only=\"\"/><input type=\"hidden\" class=\"V(h)\" name=\"fr\" value=\"yfp-search-hw\" data-fr=\"yfp-search-hw\" data-submit-handwriting-only=\"\"/><input type=\"hidden\" class=\"V(h)\" name=\"fr2\" value=\"fp-hotsearch\" data-fr2=\"fp-hotsearch\" data-submit-default-only=\"\"/></form></div></div><UL id=\"Skip-links\" class=\"Pos(a) Start(255px) Start(120px)--sm1024\"><li><a href=\"#header-nav-bar\" class=\"Bg(#0078ff) C(#fff) D(ib) Op(1):f Ov(v):f P(5px):f W(a):f Op(0) Ov(h) Pos(a) Whs(nw) W(0)\">Accéder directement à la navigation</a></li><li><a href=\"#Aside\" class=\"Bg(#0078ff) C(#fff) D(ib) Op(1):f Ov(v):f P(5px):f W(a):f Op(0) Ov(h) Pos(a) Whs(nw) W(0)\">Accéder directement au contenu associé</a></li></ul><div class=\"menu-section\"><UL class=\"End(48px) List(n) Mt(0) Pos(a) T(22px) header-menu wafer-tabs tabs\" data-wf-boundary=\"menu-section\" data-wf-active-class=\"active\" data-wf-collapsable=\"true\" data-wf-handle-hover=\"true\" data-wf-handle-focus=\"true\" data-wf-tabs-allowdefault=\"true\" data-wf-target=\"header-menu\"><li id=\"header-profile-menu\" class=\"D(ib) H(46px) Mx(14px) Va(t) tab\"><a id=\"header-signin-link\" class=\"Bgc(#fff) Bdc(#6001d2) Bdrs(3px) Bds(s) Bdw(2px) C(#4d00ae) D(ib) Ell Fz(13px) Fw(b) H(19px) Lh(19px) Mend(5px) Mt(10px) Miw(66px) Px(6px) Py(2px) Ta(c) Td(n) active_Bgc(#6001d2) active_C(#fff)\" href=\"https://login.yahoo.com/config/login?.src=fpctx&amp;.intl=fr&amp;.lang=fr-FR&amp;.done=https://fr.yahoo.com\" data-ylk=\"elm:btn;elmt:lgn;outcm:lgn;t3:usr\"><span>Connexion</span></a></li><li class=\"D(ib) H(46px) Mstart(14px) Mt(5px) Va(t) tab\"><a id=\"header-mail-button\" class=\"C(#4d00ae) D(b) H(22px) Lh(22px) Py(7px) Pos(r) Td(n)\" data-ylk=\"t1:a1;t2:hd;slk:mail;elm:btn;itc:0\" href=\"https://mail.yahoo.com/?.intl=fr&amp;.lang=fr-FR&amp;.partner=none&amp;.src=fp\" title=\"Mail\"><svg class=\"Pos(a) T(4px) Cur(p)\" width=\"30\" style=\"fill:#6001d2;stroke:#6001d2;stroke-width:0;vertical-align:bottom\" height=\"30\" viewBox=\"0 0 512 512\" data-icon=\"NavMail\"><path d=\"M460.586 91.31H51.504c-10.738 0-19.46 8.72-19.46 19.477v40.088l224 104.03 224-104.03v-40.088c0-10.757-8.702-19.478-19.458-19.478M32.046 193.426V402.96c0 10.758 8.72 19.48 19.458 19.48h409.082c10.756 0 19.46-8.722 19.46-19.48V193.428l-224 102.327-224-102.327z\"></path></svg><span class=\"D(ib) Fz(14px) Fw(b) Lh(24px) Pstart(38px)\">Mail</span></a><div id=\"header-mail-panel\" class=\"Bgc(#fff) Bdc(#d6d6da) Bdrs(6px) Bds(s) Bdw(1px) Bxsh($menuShadow) Bxz(bb) Fz(14px) List(n) Mt(10px) Mah(0) Mih(57px) Op(0) Px(24px) Py(20px) Pos(a) End(0) Ta(c) Trs($menuTransition) V(h) W(382px) active_Mah(60px) active_Op(1) active_V(v)\" aria-live=\"polite\"><a class=\"C(#0078ff) Fw(b) Td(n)\" href=\"https://login.yahoo.com/config/login?.src=fpctx&amp;.intl=fr&amp;.lang=fr-FR&amp;.done=https://fr.yahoo.com\" data-action-outcome=\"lgn\" data-ylk=\"t1:a1;t2:hd;slk:mail;elm:btn;itc:0\">Connexion</a> pour consulter vos mails.</div></li></ul></div></div><div class=\"Pb(10px) Pstart(22px) Pos(r) HideBottomBar_Mt($bottomBarHideMargin) modal-open_Mt($bottomBarHideMargin) HideBottomBar_Op(0) modal-open_Op(0) TranslateZ(0) Trs($navigationBarTransition)\" id=\"header-nav-bar-wrapper\" role=\"navigation\"><UL class=\"Miw(1000px) Mx(a) My(0) Maw(1278px) Ov(h) Pt(8px) Whs(nw)\" id=\"header-nav-bar\"><li class=\"D(ib) Mstart(21px) Mend(17px) Mstart(11px)--sm1024\"><a href=\"https://mail.yahoo.com/?.intl=fr&amp;.lang=fr-FR&amp;.partner=none&amp;.src=fp\" class=\"C(#4d00ae) Fz(14px) Fw(b) Lh(2.1) Td(n) Td(u):f Td(u):h Pos(r)\" data-ylk=\"elm:itm;elmt:pty;itc:0;rspns:nav;sec:nav;t1:a1;t2:hd;t3:tb;cpos:0;slk:Mail;t5:MAIL\"><svg class=\"Mstart(-21px) Mend(6px) Mstart(-11px)--sm1024 Cur(p)\" width=\"28\" style=\"fill:#6001d2;stroke:#6001d2;stroke-width:0;vertical-align:bottom\" height=\"28\" viewBox=\"0 0 512 512\" data-icon=\"NavMail\"><path d=\"M460.586 91.31H51.504c-10.738 0-19.46 8.72-19.46 19.477v40.088l224 104.03 224-104.03v-40.088c0-10.757-8.702-19.478-19.458-19.478M32.046 193.426V402.96c0 10.758 8.72 19.48 19.458 19.48h409.082c10.756 0 19.46-8.722 19.46-19.48V193.428l-224 102.327-224-102.327z\"></path></svg><b id=\"navbar-mail-dot\" class=\"wafer-bind Pos(a) Bdrs(11px) W(8px) H(8px) T(-7px) Start(-4px) Bdw(2px) Bdc(#fff) Bds(s) Bg($fujiGradient)\" data-wf-state-data-mail-count=\"[state.mailCount]\" data-mail-count=\"0\"></b>Mail<span id=\"navbar-mail-count\" class=\"wafer-bind Fw(n) Mstart(3px)\" data-wf-state-data-mail-count=\"[state.mailCount]\" data-mail-count=\"0\">(<span class=\"wafer-text Fz(14px) Mx(2px)\" data-wf-state-text=\"[state.mailCount]\"></span>)</span></a></li><li class=\"D(ib) Mstart(21px) Mend(17px) Mstart(11px)--sm1024\"><a href=\"https://fr.finance.yahoo.com/\" class=\"C(#4d00ae) Fz(14px) Fw(b) Lh(2.1) Td(n) Td(u):f Td(u):h\" data-ylk=\"elm:itm;elmt:pty;itc:0;rspns:nav;sec:nav;t1:a1;t2:hd;t3:tb;cpos:4;slk:Finance;t5:FINANCE\">Finance</a></li><li class=\"D(ib) Mstart(21px) Mend(17px) Mstart(11px)--sm1024\"><a href=\"https://fr.news.yahoo.com/auto\" class=\"C(#4d00ae) Fz(14px) Fw(b) Lh(2.1) Td(n) Td(u):f Td(u):h\" data-ylk=\"elm:itm;elmt:pty;itc:0;rspns:nav;sec:nav;t1:a1;t2:hd;t3:tb;cpos:8;slk:Auto;t5:Auto\">Auto</a></li></ul><script>!function(){var a,o,l,d,i,t,c=0;function e(e){var s,n=o.documentElement,t=n.classList.contains(d);n.classList.contains(i)||((s=e.scrollY)<a&&t&&(n.classList.remove(d),n.classList.add(l)),!n.classList.contains(l)&&a<s&&(c<s&&!t?(n.classList.add(d),n.classList.add(l)):s<c&&t&&(n.classList.remove(d),n.classList.add(l))),c=s)}function s(){t.wafer&&t.wafer.on&&d&&i&&(document.getElementById(\"header-nav-bar-wrapper\").addEventListener(\"transitionend\",function(e){setTimeout(function(){document.documentElement.classList.remove(l)},200)}),t.wafer.on(\"scroll\",e))}function n(e,s,n){t=e,o=s,l=\"header-anim\",d=(n=n||{\"collapseThreshold\":44,\"hideClass\":\"HideBottomBar\",\"modalOpenClass\":\"modal-open\"}).hideClass||\"\",i=n.modalOpenClass||\"\",a=n.collapseThreshold||0}\"undefined\"!=typeof module?(module.exports.defineGlobals=n,module.exports.handleScroll=e,module.exports.initScrollHandler=s):(n(window,document),t.addEventListener(\"load\",s))}();</script></div><script>Array.prototype.forEach||(Array.prototype.forEach=function(t,e){var s,i;if(null==this)throw new TypeError(\" this is null or not defined\");var a=Object(this),n=a.length>>>0;if(\"function\"!=typeof t)throw new TypeError(t+\" is not a function\");for(1<arguments.length&&(s=e),i=0;i<n;){var o;i in a&&(o=a[i],t.call(s,o,i,a)),i++}}),Array.prototype.filter||(Array.prototype.filter=function(t){\"use strict\";if(null==this)throw new TypeError;var e=Object(this),s=e.length>>>0;if(\"function\"!=typeof t)throw new TypeError;for(var i=[],a=2<=arguments.length?arguments[1]:void 0,n=0;n<s;n++)if(n in e){var o=e[n];t.call(a,o,n,e)&&i.push(o)}return i}),Array.prototype.map||(Array.prototype.map=function(t,e){var s,i,a;if(null==this)throw new TypeError(\" this is null or not defined\");var n=Object(this),o=n.length>>>0;if(\"function\"!=typeof t)throw new TypeError(t+\" is not a function\");for(1<arguments.length&&(s=e),i=new Array(o),a=0;a<o;){var r,c;a in n&&(r=n[a],c=t.call(s,r,a,n),i[a]=c),a++}return i}),String.prototype.includes||(String.prototype.includes=function(t,e){\"use strict\";return\"number\"!=typeof e&&(e=0),!(e+t.length>this.length)&&-1!==this.indexOf(t,e)});var assistJS=function(h,u){var g=function(){if(\"Microsoft Internet Explorer\"!==h.navigator.appName)return!1;var t=new RegExp(\"MSIE ([0-9]{1,}[.0-9]{0,})\").exec(h.navigator.userAgent);return t&&t[1]&&parseFloat(t[1])}();function t(t,e){function s(){}var i;t.prototype=Object.create?Object.create(e.prototype):(i=e.prototype,s.prototype=i,new s),t.prototype.constructor=t}function r(t){return\"function\"==typeof t.trim?t.trim():t.replace(/^\\s+|\\s+$/gm,\"\")}function e(t){if(g&&g<9&&void 0!==t.createTextRange){var e=t.createTextRange();e.collapse(!1),e.select()}else\"number\"==typeof t.selectionStart&&(t.selectionStart=t.selectionEnd=t.value.length)}function a(t){\"focus\"in t&&t.focus()}function c(t){return t.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\"\\\\\\\\$&\")}function s(){this.config={}}function i(){this.itemList=[],this.selectedItem=!1}function n(t){this.saView=t,this.currentStatus=!1,this.callBackIdx=0,this.cbTable={},this.triggered=!1}function o(t,e){this.saModel=t,this.saView=e}function l(){this.config={searchBoxId:\"yschsp\",clearButtonId:\"sbq-clear\",fr2:\"sa-gp-search\",saBase:\"//search.yahoo.com/sugg/gossip/gossip-us-ura/\",ylcParam:{_r:2,gprid:\"\",n_rslt:0,n_sugg:0,pos:0,pqstr:\"\",pqstrl:0},gossipParam:{l:1,bm:3,output:\"sd1\",appid:\"search.yahoo.com\",nresults:10},max:255,clrLog:{},boldTag:\"<b>{s}</b>\",annotation:{},cssClass:{container:\"sa-sbx-container\",trayContainer:\"sa lowlight\",tray:\"sa-tray\",traySub:\"sa-tray sub-assist no-wrap\",ul:\"sa-tray-list-container\",liHighlight:\"list-item-hover\",li:\"\",span:\"\",text:\"\",aria:\"sa-aria-live-region\",actionContainer:\"sa-fd-actn-cont\",relatedSearches:\"related-title\",trendingNow:\"trending-title\"},text:{relatedSearches:\"Related Searches\",trendingNow:\"Trending Now\",ariaShown:\"new suggestions shown\",ariaClosed:\"Suggestion box closed\"},customEvent:!1,suppressEmptyQuery:!1,enableAnnotation:!1,enableIpos:!0,subAssist:!0,subTrayDelta:5,trayPadding:12,debug:!1,objectName:\"SA\",anykey:!1,clearBeaconing:!1,enableYlc:!0,autofocus:!1,highlight:{pattern:\"\",exact:!1},minQueryLength:0,enableTabRender:!0}}return h.YAHOO=h.YAHOO||{},s.prototype={set:function(t,e,s){t.setAttribute(e,s)},get:function(t,e){return t.getAttribute(e)},merge:function t(e,s){for(var i in s)\"object\"==typeof s[i]&&\"object\"==typeof e[i]?t(e[i],s[i]):e[i]=s[i]},extend:t,buildUrl:function(t,e){var s=[];for(var i in e)e.hasOwnProperty(i)&&s.push(encodeURIComponent(i)+\"=\"+encodeURIComponent(e[i]));return 0<s.length&&(t=t+(-1===t.indexOf(\"?\")?\"?\":\"&\")+s.join(\"&\")),t},stopPropagation:function(t){t.returnValue=!1,t.cancelBubble=!0,t.preventDefault&&t.preventDefault(),t.stopPropagation&&t.stopPropagation(),t.stopImmediatePropagation&&t.stopImmediatePropagation()},setFocus:function(t){e(t),a(t)},cursorEnd:e,select:function(t,e,s){if(g&&g<9&&void 0!==t.createTextRange){var i=t.createTextRange();i.moveStart(\"character\",e),i.moveEnd(\"character\",s),i.select()}else t.selectionStart=e,t.selectionEnd=s,a(t)},htmlEncode:function(t){return t.replace(/[\\u00A0-\\u9999<>\\&]/gim,function(t){return\"&#\"+t.charCodeAt(0)+\";\"})},ae:function(t,e,s,i){if(i=i||!1,t.addEventListener)t.addEventListener(e,s,i);else{if(!t.attachEvent)return!1;t.attachEvent(\"on\"+e,s)}},de:function(t,e,s){if(t.removeEventListener)t.removeEventListener(e,s);else{if(!t.detachEvent)return!1;t.detachEvent(\"on\"+e,s)}},ts:function(){return Math.round((new Date).getTime()/1e3)},bold:function(t,e,s,i){var a,n,o=(i.pattern?i.pattern:\"\")+\"(&[^;\\\\s]*)?(%needles)\";return(a=i.exact?[c(s)]:s.split(/[\\s|,]+/).filter(function(t){return\"\"!==t}).sort(function(t,e){return e.length-t.length}).map(function(t){return c(t)})).length?(o=o.replace(\"%needles\",a.join(\"|\")),e=e.replace(new RegExp(o,\"gi\"),(n=t,function(t,e,s){return e&&!/\\s/.test(s)?t:n.replace(/\\{s\\}/g,s)}))):e},debug:function(t){this.config.debug&&h.console&&h.console.log&&h.console.log(t)}},t(i,s),i.prototype.init=function(t,e){var s=this;if(this.saModel=e,this.config=t,this.clearButton=this.clearButton||u.getElementById(this.config.clearButtonId),this.searchbox=this.searchbox||u.getElementById(this.config.searchBoxId),!this.searchbox)return!1;this.config.gossipParam.pq=this.searchbox.value;for(var i=this.searchbox;i&&!this.formTag;)i.tagName&&\"form\"===i.tagName.toLowerCase()&&(this.formTag=i),i=i.parentNode;return!!this.formTag&&(this.container=u.createElement(\"div\"),this.container.className=this.config.cssClass.container,this.trayContainer=u.createElement(\"div\"),this.trayContainer.className=this.config.cssClass.trayContainer,this.container.appendChild(this.trayContainer),this.searchbox.parentNode.insertBefore(this.container,this.searchbox.nextSibling),this.searchbox.setAttribute(\"role\",\"combobox\"),this.searchbox.setAttribute(\"aria-autocomplete\",\"both\"),this.ae(h,\"load\",function(){s.aria=u.createElement(\"div\"),s.aria.className=s.config.cssClass.aria,s.set(s.aria,\"aria-live\",\"polite\"),s.aria.style.position=\"absolute\",s.aria.style.left=\"-9999px\",u.body.appendChild(s.aria)}),!0)},i.prototype.getWidth=function(t,e){var s,i={p:t,t:this.config.boldTag.replace(\"{s}\",this.htmlEncode(t)),idx:0},a=u.createElement(\"div\");a.className=this.config.cssClass.container;var n=u.createElement(\"div\");n.className=this.config.cssClass.trayContainer,a.appendChild(n);var o=u.createElement(\"div\");o.className=this.config.cssClass.traySub,o.style.left=\"-9999px\",n.appendChild(o);var r=u.createElement(\"ul\");r.className=this.config.cssClass.ul,o.appendChild(r);var c=this.createItem(i);e&&((s=u.createElement(\"span\")).innerHTML=e,c.suggestionSpan.appendChild(s)),r.appendChild(c.li),this.searchbox.parentNode.insertBefore(a,this.searchbox.nextSibling);var l=c.suggestionSpan.clientWidth+this.config.subTrayDelta;return a.outerHTML=\"\",l},i.prototype.display=function(t){var e=t.data,i=t.sqpos,s=t.hiddenNeedle,c=this,a={};this.hide(),this.selectedItem=!1,this.tray=u.createElement(\"div\"),this.set(this.tray,\"type\",\"normal\"),this.tray.className=this.config.cssClass.tray,i&&this.config.subAssist&&(this.tray.className=this.config.cssClass.traySub,this.tray.style.left=this.getWidth(s)+\"px\"),this.ul=u.createElement(\"ul\"),this.ul.className=this.config.cssClass.ul,this.set(this.ul,\"role\",\"listbox\"),this.tray.appendChild(this.ul),this.itemList=[],this.config.ylcParam.n_sugg=c.saModel.ylc.n_sugg,e.forEach(function(r){var t;if(r.idx=c.itemList.length,4===r.m&&c.config.text.trendingNow&&!a.trending){var e=u.createElement(\"span\");e.className=c.config.cssClass.trendingNow,e.innerHTML=c.config.text.trendingNow,c.ul.appendChild(e),a.trending=!0}var s=c.createItem(r);!i&&c.config.enableAnnotation&&r.m&&c.config.annotation[r.m]&&r.fd&&(t=c.getItemAnnotation(r,s.suggestionSpan))&&s.suggestionSpan.appendChild(t),c.ul.appendChild(s.li),c.itemList.push(s.li),c.ae(s.li,\"mouseenter\",function(t){c.resetHighlight(),s.li.className=c.config.cssClass.li+\" \"+c.config.cssClass.liHighlight,c.selectedItem=r.idx}),c.ae(s.li,\"mouseleave\",function(t){s.li.className=c.config.cssClass.li}),c.ae(s.li,\"click\",function(t){var e,s,i,a,n=c.searchbox.value,o=t.target||t.srcElement;c.saModel.ylc.pos=r.idx+1,c.saModel.ylc.pqstr=n,c.saModel.ylc.pqstrl=n.length,c.saModel.ylc.use_case=\"\",c.formTag.fr2&&(c.formTag.fr2.value=c.config.fr2),c.searchbox.value=r.p,o.tagName&&\"a\"===o.tagName.toLowerCase()&&(c.searchbox.value=c.get(o,\"data\"),c.saModel.ylc.use_case=o.innerHTML),c.hide(),c.saModel.addYlc(c.saModel.clickTarget),c.config.customEvent?(c.saModel.addYlk(o),e=c.searchbox,s=\"assistSelection\",i={data:r},\"function\"==typeof h.CustomEvent?(a=new h.CustomEvent(s,{detail:i}),e.dispatchEvent(a)):\"function\"==typeof u.createEvent?((a=u.createEvent(\"CustomEvent\")).initCustomEvent(s,!1,!1,i),e.dispatchEvent(a)):(u.attachEvent,document.documentElement[s]=i)):c.suggestionClick(t,r)})}),this.aria&&(this.set(this.aria,\"aria-expanded\",\"true\"),this.aria.innerHTML=\"<p>\"+c.itemList.length+\" \"+this.config.text.ariaShown+\"</p>\"),this.show()},i.prototype.suggestionClick=function(t,e){this.formTag.submit()},i.prototype.show=function(){this.shown=!0,this.resetHighlight(),this.trayContainer.appendChild(this.tray)},i.prototype.hide=function(){this.aria&&(this.set(this.aria,\"aria-expanded\",\"false\"),this.aria.innerHTML=\"<p>\"+this.config.text.ariaClosed+\"</p>\"),this.shown=!1,this.resetHighlight(),this.trayContainer.innerHTML=\"\"},i.prototype.resetHightlight=i.prototype.resetHighlight=function(){!1!==this.selectedItem&&this.itemList.length&&(this.itemList[this.selectedItem].className=this.config.cssClass.li)},i.prototype.tab=function(){if(!this.shown||!this.itemList.length)return!1;if(!1!==this.selectedItem)this.searchbox.value=this.get(this.itemList[this.selectedItem],\"data\"),this.saModel.fetch();else{if(this.searchbox.value===this.get(this.itemList[0],\"data\"))return this.saModel.unset(),!1;this.searchbox.value=this.get(this.itemList[0],\"data\"),this.saModel.fetch()}return!0},i.prototype.moveUpDown=function(t){return!(!this.shown||!this.itemList.length)&&(this.resetHighlight(),t?!1===this.selectedItem||this.selectedItem<=0?this.selectedItem=this.itemList.length-1:this.selectedItem--:!1===this.selectedItem||this.selectedItem>=this.itemList.length-1?this.selectedItem=0:this.selectedItem++,this.itemList[this.selectedItem].className=this.config.cssClass.li+\" \"+this.config.cssClass.liHighlight,this.searchbox.value=this.get(this.itemList[this.selectedItem],\"data\"),!0)},i.prototype.createItem=function(t){var e=u.createElement(\"li\"),s=this;if(e.className=this.config.cssClass.li,this.set(e,\"pos\",t.idx),this.set(e,\"role\",\"option\"),this.config.formatResult){var i=this.config.ylcVal;i&&(i=i.replace(\"cposV\",t.idx),s.config.ylcParam&&(i=i.replace(\"t9Val\",s.config.ylcParam.n_sugg)),this.set(e,\"data-ylk\",i)),this.set(e,\"data-position\",t.idx)}s.set(e,\"data\",t.p);var a=u.createElement(\"span\");a.className=s.config.cssClass.span,a.style.display=\"block\",e.appendChild(a);var n=u.createElement(\"span\");return n.className=s.config.cssClass.text,n.innerHTML=t.t,a.appendChild(n),{li:e,suggestionSpan:a}},i.prototype.getItemAnnotation=function(t){var e,s,i,a=this.config.annotation[t.m]||{},n=this.config.cssClass,o=t.fd,r=\"\",c=\"\",l=this.searchbox.clientWidth-2*this.config.trayPadding;if(a.subtitle&&o.subtitle){if(c=a.subtitle.replace(\"{subtitle}\",this.htmlEncode(o.subtitle)),!(this.getWidth(t.p,c)<l))return e;r+=c}if(a.actions&&o.actions&&o.actions.length){for(c=\"\",i=0;i<o.actions.length;i++)if(s=o.actions[i],c&&a.actionsSeparator&&(c+=a.actionsSeparator),c+=a.actions.replace(\"{text}\",this.htmlEncode(s.text)).replace(\"{res}\",this.htmlEncode(s.res)),l<this.getWidth(t.p,r+'<span class=\"'+n.actionContainer+'\">'+c+\"</span>\")){c=\"\";break}c&&(r+='<span class=\"'+n.actionContainer+'\">'+c+\"</span>\")}return r&&((e=u.createElement(\"span\")).innerHTML=r),e},t(n,s),n.prototype.unset=function(){this.triggered=!1,this.saView.hide()},n.prototype.jsonp=function(t,e){var s={command:this.saView.searchbox.value,t_stmp:this.ts(),callback:\"YAHOO.\"+this.config.objectName+\".cb.\"+t};this.merge(s,this.config.gossipParam),e&&this.merge(s,e);var i=this.buildUrl(this.config.saBase,s),a=u.getElementsByTagName(\"head\")[0],n=u.createElement(\"script\");this.set(n,\"type\",\"text/javascript\"),this.set(n,\"src\",i),a.appendChild(n),this.ae(n,\"load\",function(){a.removeChild(n)})},n.prototype.read=function(e){var s,i=this,a=[],n=e.sqpos,o=e.q=e.q||\"\",r=\"\";e&&\"object\"==typeof e.r&&0<e.r.length?(i.config.subAssist&&n&&(o=e.q.substr(n),r=e.q.substr(0,n),e.r.forEach(function(t){i.saView.getWidth(t.k)>i.saView.searchbox.clientWidth&&(n=0,o=e.q,r=\"\")})),e.r.forEach(function(t){s=i.config.subAssist&&n?t.k.substr(n):t.k,a.push({p:t.k,t:i.bold(i.config.boldTag,i.htmlEncode(s),i.htmlEncode(o),i.config.highlight),fd:t.fd,m:t.m})}),this.ylc.n_sugg=e.r.length,this.ylc.pos=0,this.saView.display({data:a,sqpos:n,hiddenNeedle:r})):(this.ylc.n_sugg=0,this.ylc.pos=0,this.saView.hide()),e&&e.l&&(this.ylc.gprid=e.l.gprid)},n.prototype.fetch=function(){var t,e=this.saView.searchbox,s=this,i=null,a=s.lastValue===s.saView.searchbox.value;if(s.config.suppressEmptyQuery&&\"\"==r(e.value))return s.unset(),!0;if(s.saView.shown&&a)return!0;if(this.config.enableIpos&&!a&&void 0!==s.lastValue&&((t=this.getCursorPosition())===e.value.length&&(t=null),null!==t&&(i={ipos:t})),s.lastValue=s.saView.searchbox.value,this.config.minQueryLength&&this.saView.searchbox.value.length<this.config.minQueryLength)return this.unset(),!1;if(this.config.max&&this.saView.searchbox.value.length>this.config.max)return this.unset(),!0;this.triggered=!0,this.callBackIdx++;var n=\"sacb\"+this.callBackIdx;for(var o in s.cbTable)s.cbTable.hasOwnProperty(o)&&(s.cbTable[o]=function(){});this.cbTable[n]=function(t){s.read(t||{}),s.cbTable[n]=function(){}},this.jsonp(n,i)},n.prototype.getCursorPosition=function(){var t,e=this.saView.searchbox,s=null;return\"number\"==typeof e.selectionStart?s=e.selectionStart:u.selection&&(e.focus(),(t=u.selection.createRange()).moveStart(\"character\",-u.activeElement.value.length),s=t.text.length),s},n.prototype.addYlc=function(t){var e=encodeURIComponent(this.saView.searchbox.value);this.ylc.query=e,this.ylc.qstrl=e.length,this.ylc.t_stmp=this.ts(),this.config.enableYlc&&this.ULT?this.saView.formTag.action=this.ULT.y64_token(\"ylc\",t,this.ylc):this.debug(\"YLC logging is disabled\")},n.prototype.addYlk=function(t){var e=this,s=[];if([\"gprid\",\"query\",\"pqstr\"].forEach(function(t){e.ylc[t]&&s.push(t+\":\"+e.ylc[t])}),e.config.ylcVal=e.config.ylcVal+\";\"+s.join(\";\"),t){var i=e.get(t,\"data-ylk\")+\";\"+s.join(\";\");e.set(t,\"data-ylk\",i)}},n.prototype.init=function(t){return this.config=t,this.ULT=h.YAHOO.ULT,this.ULT||(this.debug(\"ULT library is missing. Disabling ylc logging\"),this.config.enableYlc=!1),this.ylc={},this.merge(this.ylc,this.config.ylcParam),this.clickTarget=this.config.clkLink?this.config.clkLink:this.saView.formTag.action,this.submitTarget=this.saView.formTag.action,!0},t(o,s),o.prototype.init=function(t){var l=this;l.lastValue=null,this.config=t,this.config.autofocus&&this.setFocus(this.saView.searchbox),!g||9<=g?this.ae(this.saView.searchbox,\"input\",function(t){l.saModel.fetch()}):8===g&&this.ae(this.saView.searchbox,\"propertychange\",function(t){\"value\"===t.propertyName&&!1===l.saView.selectedItem&&l.saModel.fetch()}),l.config.anykey&&this.ae(u,\"keydown\",function(t){var e=u.activeElement;if(!e.tagName||\"input\"!==e.tagName.toLowerCase()&&\"textarea\"!==e.tagName.toLowerCase())return 27===t.keyCode&&!l.saView.shown&&l.saView.searchbox.value.length?(l.select(l.saView.searchbox,0,l.saView.searchbox.value.length),void l.stopPropagation(t)):void(t.keyCode<=40||t.ctrlKey||t.metaKey||(l.saView.searchbox.value=r(l.saView.searchbox.value),\"\"!==l.saView.searchbox.value&&(l.saView.searchbox.value+=\" \"),l.saModel.triggered=!0,l.setFocus(l.saView.searchbox)))}),this.ae(this.saView.searchbox,\"keydown\",function(t){switch(t.keyCode){case 40:l.saView.moveUpDown(!1),l.stopPropagation(t);break;case 38:l.saView.moveUpDown(!0),l.stopPropagation(t);break;case 27:if(!l.saView.shown)return;return l.cursorEnd(l.saView.searchbox),l.saView.searchbox.blur(),l.saModel.unset(),l.saView.resetHighlight(),l.saView.selectedItem=!1,l.stopPropagation(t),!1;case 9:if(l.saView.searchbox.selectionEnd==l.saView.searchbox.value.length&&l.saView.searchbox.selectionStart==l.saView.searchbox.value.length){if(!l.config.enableTabRender)return l.saModel.unset(),!1;if(l.saView.tab())return l.stopPropagation(t),!1}else l.saView.searchbox.selectionEnd=l.saView.searchbox.selectionStart=l.saView.searchbox.value.length,l.stopPropagation(t);break;case 39:l.saView.searchbox.selectionEnd==l.saView.searchbox.value.length&&l.saView.searchbox.selectionStart==l.saView.searchbox.value.length&&l.saView.tab();break;default:l.saView.resetHighlight(),l.saView.selectedItem=!1}});function e(t){if(g&&g<=8&&u.selection){var e,s,i=l.saView.searchbox,a=i.value.replace(/\\r\\n/g,\"\\n\"),n=u.selection.createRange(),o=i.value.length,r=i.createTextRange();r.moveToBookmark(n.getBookmark());var c=i.createTextRange();c.collapse(!1),-1<r.compareEndPoints(\"StartToEnd\",c)?e=s=o:(e=-r.moveStart(\"character\",-o),e+=a.slice(0,e).split(\"\\n\").length-1,-1<r.compareEndPoints(\"EndToEnd\",c)?s=o:(s=-r.moveEnd(\"character\",-o),s+=a.slice(0,s).split(\"\\n\").length-1)),i.selectionStart=e,i.selectionEnd=s}l.lastValue!==l.saView.searchbox.value&&!1===l.saView.selectedItem&&l.saModel.fetch()}this.ae(this.saView.searchbox,\"focus\",function(t){l.saModel.triggered||l.saModel.fetch(),g&&9===g&&!l.ie9_attached&&(l.ae(u,\"selectionchange\",e),l.ie9_attached=!0)}),this.ae(this.saView.searchbox,\"blur\",function(t){g&&9===g&&l.ie9_attached&&(l.de(u,\"selectionchange\",e),l.ie9_attached=!1)}),this.ae(this.saView.searchbox,\"click\",function(t){l.saModel.triggered||l.saModel.fetch()});function s(t){if(l.saView.shown){for(var e=t.target?t.target:t.srcElement;e;){if(e===l.saView.formTag)return;e=e.parentNode}l.config.touchOriented&&l.stopPropagation(t),l.saModel.unset()}}return\"ontouchstart\"in h?(this.config.touchOriented=!0,this.ae(u.body,\"touchstart\",s,!0)):this.ae(u,\"click\",s),this.ae(this.saView.formTag,\"submit\",function(t){l.saModel.addYlc(l.saModel.submitTarget)}),this.saView.clearButton&&this.ae(this.saView.clearButton,\"click\",function(t){if(l.saView.searchbox.value=\"\",l.saModel.triggered=!1,l.setFocus(l.saView.searchbox),l.config.enableYlc&&l.config.clearBeaconing&&l.saModel.ULT){var e={_r:2,actn:\"clk\",pos:1,sec:\"clearsearch\",slk:\"clear\",t1:\"hdr\",t2:\"searchbox\",t3:\"clear\"};l.merge(e,l.config.clrLog),l.saModel.ULT.beacon_click(e)}}),!0},t(l,s),l.prototype.saModelClass=n,l.prototype.saViewClass=i,l.prototype.saControlClass=o,l.prototype.init=function(t){return!(g&&g<8)&&(\"object\"==typeof t&&this.merge(this.config,t),this.saView=new this.saViewClass,this.saModel=new this.saModelClass(this.saView),this.saControl=new this.saControlClass(this.saModel,this.saView),this.cb=this.saModel.cbTable,this.config.customEvent&&8===g&&(u.documentElement.assistSelection=null),this.ready=this.saView.init(this.config,this.saModel)&&this.saModel.init(this.config)&&this.saControl.init(this.config),!!this.ready&&(h.YAHOO[this.config.objectName]=this,void(h.performance&&\"function\"==typeof h.performance.now&&(this.latency=h.performance.now()))))},l};\"undefined\"!=typeof module&&(module.exports={assistJS:assistJS}),\"undefined\"!=typeof window&&(window.YAHOO=window.YAHOO||{},window.YAHOO.SAClass=assistJS(window,document));var init=function(t){window.YAHOO&&window.YAHOO.SAClass&&(window.YAHOO.SA=new window.YAHOO.SAClass,window.YAHOO.SA.init(t))};!function(){var p,s,a,c=\"data-submit-only\",d=\"data-submit-default-only\",l=\"data-submit-handwriting-only\",i=\"data-assist-only\",u=\"data-trending-only\",f=/\\S/,g=\"-m\",h=\".modal-open\",y=\"navigationStart\",S=\"domContentLoadedEventStart\",r=\"performance\";function e(e){var t=this;t.config=e||{},t.perf={},t.searchForm=s.querySelector(\"#header-search-form\"),t.searchButton=s.querySelector(\"#header-search-button\"),t.desktopSearchBtn=s.querySelector(\"#header-desktop-search-button\"),t.trendingFrcode=s.querySelector(\"input[\"+u+\"]\"),t.arrowKeysEngaged=!1,t.searchForm&&(t.searchInput=t.searchForm.querySelector(\"#header-search-input\")),t.searchInput&&(t.restoreInitialState(),t.attachEventListeners(),t.beaconReadiness())}function t(){p.YAHOO&&p.YAHOO.SAClass&&!p.YAHOO.SA&&(p.YAHOO.SA=new p.YAHOO.SAClass,p.YAHOO.SA.init(a),p.YAHOO.SA_ADAPTER=new e(a.adapterConfig))}function n(e,t,n){p=e,s=t,a=n||window.YAHOO&&window.YAHOO.SAInitConfig||{\"adapterConfig\":{\"arrowKeyTracking\":true,\"bucket\":\"900\",\"focusOnButtonClick\":true,\"i13nForm\":{\"elm\":\"kb-ent\",\"elmt\":\"srch\",\"itc\":\"0\",\"rspns\":\"nav\",\"sec\":\"srch\",\"slk\":\"srchweb\",\"t1\":\"a1\",\"t2\":\"hd\",\"tar\":\"search.yahoo.com\"},\"i13nSuggestion\":{\"cpos\":\"cposV\",\"elm\":\"itm\",\"elmt\":\"srch\",\"itc\":\"0\",\"rspns\":\"nav\",\"sec\":\"srch\",\"slk\":\"srchast\",\"t1\":\"a1\",\"t2\":\"srch\",\"t3\":\"tray\",\"t9\":\"10\",\"gprid\":\"\",\"query\":\"\",\"pqstr\":\"\",\"tar\":\"search.yahoo.com\"},\"searchablePlaceholder\":false,\"searchOpenClassName\":\"search-open\"},\"autofocus\":true,\"boldTag\":\"<b class=\\\"Fw(n)\\\">{s}</b>\",\"clearButtonId\":\"header-clear-search\",\"cssClass\":{\"container\":\"header-search-assist\",\"li\":\"Bd(n) Lh(1.1) List(n) Pos(r) Ta(l)\",\"liHighlight\":\"Bgc(#c6d7ff)\",\"span\":\"C(#000) Ff(ss) Fz(18px) Fw(b) Mend(40px) Pb(5px) Pend(3px) Pstart(10px) Pt(5px) Wow(bw)\",\"tray\":\"Bgc(#fff) Pos(a) Start(0) End(90px) Z(1)\",\"trayContainer\":\"\",\"ul\":\"Bdc($c-fuji-grey-d) Bdts(n) Bds(s) Bdw(1px) M(0) P(0)\"},\"customEvent\":true,\"enableTabRender\":false,\"formatResult\":true,\"gossipParam\":{\"appid\":\"fp\"},\"highlight\":{\"exact\":true,\"pattern\":\"^\"},\"initializeImmediately\":false,\"minQueryLength\":1,\"saBase\":\"https://fr.search.yahoo.com/sugg/gossip/gossip-fr-ura/\",\"searchBoxId\":\"header-search-input\",\"subAssist\":false,\"ylcVal\":\"cpos:cposV;elm:itm;elmt:srch;itc:0;rspns:nav;sec:srch;slk:srchast;t1:a1;t2:srch;t3:tray;t9:10;gprid:;query:;pqstr:;tar:search.yahoo.com\"}}e.prototype={attachEventListeners:function(){var t=this;t.searchInput.addEventListener(\"keypress\",function(e){t.perf.key||(t.perf.key=Date.now()),13===e.keyCode&&(e.preventDefault(),t.handleFormSubmission.call(t,e))}),t.config.arrowKeyTracking&&t.searchInput.addEventListener(\"keyup\",function(e){38!==e.keyCode&&40!==e.keyCode||(t.arrowKeysEngaged=!0)}),t.searchInput.addEventListener(\"click\",function(e){t.perf.focusClick||(t.perf.focusClick=Date.now())}),t.desktopSearchBtn&&t.desktopSearchBtn.addEventListener(\"click\",function(e){e.preventDefault(),t.handleFormSubmission.call(t,e)}),t.searchInput.addEventListener(\"assistSelection\",function(e){t.handleAssistSelection.call(t,e)}),t.searchButton&&t.config.focusOnButtonClick&&t.searchButton.addEventListener(\"click\",function(e){t.handleSearchOpen.call(t,e)})},beaconClick:function(e,t){e=e||{};function n(){a.sendBeacon(\"/p.gif?beaconType=srch&source=\"+e.slk+\"&rapid=\"+o+\"&darla=\"+i+\"&ns_ready=\"+s.ns_ready+\"&dcl_ready=\"+s.dcl_ready+\"&ns_focus=\"+d+\"&ns_key=\"+l+\"&ns_search=\"+u+\"&dcl_search=\"+f),t&&t.apply(a,[].concat(Array.prototype.slice.call(arguments)))}var a=this,r=p.YAHOO&&p.YAHOO.i13n&&p.YAHOO.i13n.rapidInstance||p.rapidInstance,o=r?1:0,i=p._adLT&&1<p._adLT.length?1:0,s=a.perf,c=Date.now(),d=a.getPerfAttrDiff(y,s.focusClick),l=a.getPerfAttrDiff(y,s.key),u=a.getPerfAttrDiff(y,c),f=a.getPerfAttrDiff(S,c);if(r){var g={pp:{A_utm:JSON.stringify({darla:i,dcl_ready:s.dcl_ready,dcl_search:f,ns_focus:d,ns_key:l,ns_ready:s.ns_ready,ns_search:u})}};r.beaconClick(e.sec,e.slk,e._p,e,\"srch\",n,g)}else n()},beaconReadiness:function(){var e=this,t=e.perf;t.ready=Date.now(),t.ns_ready=e.getPerfAttrDiff(y,t.ready),t.dcl_ready=e.getPerfAttrDiff(S,t.ready),e.sendBeacon(\"/p.gif?beaconType=saready&ns_ready=\"+t.ns_ready+\"&dcl_ready=\"+t.dcl_ready);var n=p.YAHOO&&p.YAHOO.i13n&&p.YAHOO.i13n.rapidInstance||p.rapidInstance;n&&n.beaconEvent(\"saready\",{_E:\"pageperf\",A_utm:JSON.stringify({dcl_ready:t.dcl_ready,ns_ready:t.ns_ready}),etag:r,etrg:\"backgroundPost\",sec:e.config.i13nForm.sec,usergenf:0},r)},getItemI13n:function(e,t){var n={};try{n=JSON.parse(JSON.stringify(this.config.i13nSuggestion||{}))}catch(e){}return n._p=e,n.cpos=e,n.pqstr=t.pqstr,n.query=t.query,n.gprid=t.gprid,n},getPerfAttrDiff:function(e,t){var n,a=p.performance||p.webkitPerformance||p.msPerformance||p.mozPerformance||p.Performance,r=0;return a&&a.timing&&(n=a.timing[e]),n&&t&&(r=t-n),r},getTermSugNode:function(e){return e&&this.searchForm.querySelector(' li[data=\"'+e+'\"]')},handleAssistSelection:function(e){var t=this,n=t.searchForm.querySelector(\"input[\"+i+\"]\"),a=t.searchInput.hasAttribute(\"data-fr-override-by-handwriting\"),r={};a?t.toggleInputState(l,!1):(t.toggleInputState(i,!1),s.querySelector(h)&&n&&(n.value=n.value+g)),t.toggleInputState(c,!0),!a&&t.trendingFrcode&&p.YAHOO&&p.YAHOO.SA&&p.YAHOO.SA.saModel.ylc&&0===p.YAHOO.SA.saModel.ylc.pqstrl&&(t.toggleInputState(i,!0),t.toggleInputState(u,!1),s.querySelector(h)&&t.trendingFrcode.value&&(t.trendingFrcode.value=t.trendingFrcode.value+g));var o=(e.detail&&e.detail.data&&e.detail.data.idx||0)+1;p.YAHOO&&p.YAHOO.SA&&p.YAHOO.SA.saModel.ylc&&(r=p.YAHOO.SA.saModel.ylc),t.beaconClick(t.getItemI13n(o,r),t.submitForm)},handleFormSubmission:function(e){var t=this,n=t.searchForm.querySelector(\"input[\"+c+\"]\"),a=t.searchInput.hasAttribute(\"data-fr-override-by-handwriting\"),r=t.searchInput.value,o=t.searchInput.placeholder,i=t.getTermSugNode(r);if(t.arrowKeysEngaged&&i&&r)return t.handleAssistSelection({detail:{data:{idx:i.getAttribute(\"data-position\"),p:r}}});s.querySelector(h)&&n&&(n.value=n.value+g),a?(t.toggleInputState(l,!1),t.toggleInputState(c,!0)):t.config.searchablePlaceholder&&!r&&o&&(t.searchInput.value=o,t.toggleInputState(c,!0),t.toggleInputState(d,!1)),f.test(t.searchInput.value)&&t.beaconClick(t.config.i13nForm,t.submitForm)},handleSearchOpen:function(e){var t=this;t.searchInput.value=\"\",t.config.searchOpenClassName&&s.body.className.indexOf(t.config.searchOpenClassName)<0&&(s.body.className+=\" \"+t.config.searchOpenClassName),t.searchInput.focus()},restoreInitialState:function(){var e=this;e.toggleInputState(i,!0),e.toggleInputState(u,!0),e.toggleInputState(c,!1),e.toggleInputState(d,!0),e.toggleInputState(l,!0)},sendBeacon:function(e){e&&(this.config.bucket&&(e+=\"&bucket=\"+this.config.bucket),p.navigator&&\"function\"==typeof p.navigator.sendBeacon&&p.navigator.sendBeacon(e)||((new Image).src=e))},submitForm:function(){this.searchForm.submit()},toggleInputState:function(e,t){var n,a=this.searchForm.querySelectorAll(\"input[\"+e+\"]\"),r=\"disabled\";for(n=0;n<a.length;n++)t?a[n].setAttribute(r,\"\"):a[n].removeAttribute(r)}},\"undefined\"!=typeof module?(module.exports.AssistJsAdapter=e,module.exports.defineGlobals=n,module.exports.initAssistJs=t):(n(window,document),a.initializeImmediately?t():s.addEventListener(\"DOMContentLoaded\",t))}();</script><div><style>.yns-panel{overflow:hidden;font-size:14px}.yns-panel-loading{background:url(https://s.yimg.com/ok/u/assets/img/spinner-24x24-anim.gif) no-repeat center center;opacity:.5;z-index:1;min-height:58px}.yns-panel-padding-btm{padding-bottom:40px}.yns-hide{display:none}.yns-panel-footer-action{background-color:#fff;border-top:solid 1px #f1f1f5;padding:10px 0;text-align:center;position:absolute;left:0;right:0;bottom:0}.yns-navigate-center{color:#000;line-height:20px;text-decoration:none}.yns-navigate-center:focus,.yns-navigate-center:hover{color:#0078ff;line-height:20px;text-decoration:none}.yns-panel-header{padding:10px 0 10px 16px}.yns-panel-header-title{color:#26282a;font-weight:700;line-height:17px}.yns-panel-error{padding:20px 0;text-align:center}.yns-indicator{background-color:#188fff;width:11px;height:11px;border:solid 1.5px #fff;display:inline-block;border-radius:50%}.yns-promo-title{color:#000}.yns-promo{display:none}.display-push-promos .yns-promo{display:block}.yns-promo.yns-container .yns-content{padding-right:115px}.yns-promo.yns-container .yns-promo-ctr{background-color:#0f69ff;border-radius:2px;border:none;color:#fff;cursor:pointer;font-size:13px;height:35px;max-width:111px;min-width:96px}.yns-promo.yns-container .yns-promo-button{position:absolute;top:4px;right:4px}.yns-container.yns-empty{padding:72px 0;position:relative}.display-push-promos .yns-empty{border-top:solid 1px #f1f1f5}.yns-container.yns-empty:hover{background-color:#fff}.yns-empty .yns-content{position:absolute;padding:0;text-align:center;width:100%}</style><script>/* version: 1.1.7 */\nwindow.NotificationClient = (function () {\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n/* global XMLHttpRequest */\n/* Provides read, update and create operations */\nvar ERROR = 'Error';\nvar GET = 'GET';\n\nvar NotificationRequest = function () {\n    function NotificationRequest(config) {\n        classCallCheck(this, NotificationRequest);\n\n        this._config = config;\n    }\n\n    /**\n    * _getRequestUrl\n    * Parses the request url, appends any path, and generates the params\n    * @param {object} requestConfig - Configs for the request - Object required\n    * @return {string} request url\n    */\n\n\n    createClass(NotificationRequest, [{\n        key: '_getRequestUrl',\n        value: function _getRequestUrl(requestConfig) {\n            // providing an override for request based URL udpate\n            var url = requestConfig.url || this._config.service.url;\n            var isRMP = requestConfig.isRMP || this._config.service.isRMP;\n            if (!url) {\n                return;\n            }\n\n            var temp = url.split('?');\n            var urlParts = {\n                path: temp[0],\n                queryParams: temp[1] ? temp[1].split('&') : []\n            };\n\n            // determine existing matrix params\n            temp = urlParts.path.split(';');\n            urlParts.path = temp[0];\n            urlParts.matrixParams = temp.slice(1);\n\n            var queryParams = requestConfig.queryParams,\n                matrixParams = requestConfig.matrixParams;\n\n            // add additional matrix params\n\n            if (matrixParams && !isRMP) {\n                Object.keys(matrixParams).forEach(function (key) {\n                    urlParts.matrixParams.push(encodeURIComponent(key) + '=' + encodeURIComponent(matrixParams[key] || ''));\n                });\n            }\n\n            // add additional query params\n            if (queryParams) {\n                Object.keys(queryParams).forEach(function (key) {\n                    urlParts.queryParams.push(encodeURIComponent(key) + '=' + encodeURIComponent(queryParams[key] || ''));\n                });\n            }\n\n            // construct the final url\n            var requestUrl = urlParts.path;\n            if (urlParts.matrixParams.length) {\n                requestUrl += ';' + urlParts.matrixParams.join(';');\n            }\n            if (urlParts.queryParams.length) {\n                requestUrl += '?' + urlParts.queryParams.join('&');\n            }\n\n            return requestUrl;\n        }\n\n        /**\n        * _getRequestBody\n        * Stringifies the request body\n        * @param {object} body - The body object\n        * @return {string} stringified body\n        */\n\n    }, {\n        key: '_getRequestBody',\n        value: function _getRequestBody(body) {\n            return body && JSON.stringify(body) || '';\n        }\n\n        /**\n        * _parseRequestResult\n        * Parses the api response\n        * @param {object} response - The response object\n        * @return {object} response\n        */\n\n    }, {\n        key: '_parseRequestResult',\n        value: function _parseRequestResult(response) {\n            var isRMP = this._config.service.isRMP;\n            if (typeof response === 'string') {\n                try {\n                    response = JSON.parse(response);\n                } catch (e) {\n                    response = {};\n                }\n            }\n            response = response || {};\n            return {\n                css: isRMP ? response.assets && response.assets.css : response.css,\n                count: isRMP ? response.data && response.data.count : response.count,\n                markup: response.html,\n                newCount: isRMP ? response.data && response.data.newCount : response.newCount\n            };\n        }\n\n        /**\n        * read\n        * Makes the read call\n        * @param {object} requestConfig - The requestConfig object\n        * @param {Function} callback - The callback function\n        * @return {void}\n        */\n\n    }, {\n        key: 'read',\n        value: function read(requestConfig, callback) {\n            this._attemptRequest(GET, requestConfig, callback);\n        }\n\n        /**\n        * update\n        * Makes the update call\n        * @param {object} requestConfig - The requestConfig object\n        * @param {Function} callback - The callback function\n        * @return {void}\n        */\n\n    }, {\n        key: 'update',\n        value: function update(requestConfig, callback) {\n            this._attemptRequest('PUT', requestConfig, callback);\n        }\n\n        /**\n        * create\n        * Makes the create call\n        * @param {object} requestConfig - The requestConfig object\n        * @param {Function} callback - The callback function\n        * @return {void}\n        */\n\n    }, {\n        key: 'create',\n        value: function create(requestConfig, callback) {\n            this._attemptRequest('POST', requestConfig, callback);\n        }\n\n        /**\n        * _attemptRequest\n        * Attempts the XHR call\n        * @param {string} method - GET or POST method\n        * @param {object} requestConfig - The requestConfig object\n        * @param {Function} callback - The callback function\n        * @return {void}\n        */\n\n    }, {\n        key: '_attemptRequest',\n        value: function _attemptRequest(method, requestConfig, callback) {\n            var attemptCount = this._config.service.attemptCount;\n            if (!requestConfig) {\n                requestConfig = {};\n            }\n\n            var url = this._getRequestUrl(requestConfig);\n            var requestBody = this._getRequestBody(requestConfig.body);\n            var requestParams = {\n                body: requestBody,\n                method: method,\n                url: url\n            };\n            this._sendRequest(requestParams, attemptCount, callback);\n        }\n\n        /**\n        * _sendRequest\n        * Attempts the XHR for specified number of times in case of error\n        * @param {object} requestParams - The requestParams object\n        * @param {number} attemptCount - GET or POST method\n        * @param {Function} callback - The callback function\n        * @return {void}\n        */\n\n    }, {\n        key: '_sendRequest',\n        value: function _sendRequest(requestParams, attemptCount, callback) {\n            var self = this;\n            requestParams = requestParams || {};\n            var serviceConfig = self._config.service;\n            var attemptDelay = serviceConfig.attemptDelay * 1000;\n            var _requestParams = requestParams,\n                url = _requestParams.url,\n                body = _requestParams.body;\n\n\n            var request = new XMLHttpRequest();\n\n            request.open(requestParams.method, url);\n            request.responseType = serviceConfig.responseType;\n            request.timeout = serviceConfig.timeout;\n\n            var handleRequestError = function handleRequestError() {\n                if (attemptCount > 0) {\n                    attemptCount--;\n                    setTimeout(function () {\n                        self._sendRequest(requestParams, attemptCount, callback);\n                    }, attemptDelay);\n                } else {\n                    callback && callback(new Error(ERROR + ': ' + request.status + ' ' + request.statusText), null);\n                }\n            };\n\n            request.onload = function requestOnLoad() {\n                if (request.status === 200) {\n                    var response = self._parseRequestResult(request.response || request.responseText);\n                    callback && callback(null, response, requestParams);\n                } else {\n                    handleRequestError();\n                }\n            };\n\n            request.onerror = handleRequestError;\n\n            // Make the appropriate call\n            if (requestParams.method === GET) {\n                request.send();\n            } else {\n                request.send(body);\n            }\n        }\n    }]);\n    return NotificationRequest;\n}();\n\nvar SPACE = ' ';\n\n/**\n* addClass\n* Adds class to given node, if not already added\n* @param {object} node current DOM element\n* @param {string} className - the class to be added\n* @return {void}\n*/\nfunction addClass(node, className) {\n    if (node && !hasClass(node, className)) {\n        var desiredClasses = node.className + SPACE + className;\n        node.className = desiredClasses;\n    }\n}\n\n/**\n* hasClass\n* Checks if given node has specified className\n* @param {object} node current DOM element\n* @param {string} className - className\n* @return {boolean} whether node has the specified class\n*/\nfunction hasClass(node, className) {\n    var classes = node && node.className && node.className.split(SPACE);\n    return !!classes && classes.indexOf(className) !== -1;\n}\n\n/**\n* removeClass\n* Removes class from given node\n* @param {object} node current DOM element\n* @param {string} className - className\n* @return {void}\n*/\nfunction removeClass(node, className) {\n    if (!node) {\n        return;\n    }\n    var classes = node.className && node.className.split(SPACE);\n    if (!classes) {\n        return;\n    }\n    var index = classes.indexOf(className);\n    if (index >= 0) {\n        classes.splice(index, 1);\n    }\n    node.className = classes.join(SPACE);\n}\n\n/**\n* objectAssign\n* Updates existing and adds new keys - mutates the orig object (shallow)\n* @param {object} orig Original object\n* @param {object} updates Updated object\n* @return {void}\n*/\nfunction objectAssign(orig, updates) {\n    if (!orig) {\n        return;\n    }\n\n    if (!updates) {\n        return orig;\n    }\n\n    for (var key in updates) {\n        if (updates.hasOwnProperty(key)) {\n            orig[key] = updates[key];\n        }\n    }\n}\n\nvar NotificationStore = function () {\n    function NotificationStore(config, request) {\n        classCallCheck(this, NotificationStore);\n\n        var self = this;\n        self._config = config;\n        self._markup = '';\n        self._newCount;\n        self._count;\n        self._request = request;\n    }\n\n    /**\n    * _replaceAllNotifications\n    * Renews the notification array\n    * @param {array} response service reponse\n    * @return {void}\n    */\n\n\n    createClass(NotificationStore, [{\n        key: '_replaceAllNotifications',\n        value: function _replaceAllNotifications(response) {\n            // since we refresh the panel everytime\n            this._markup = response.markup || '';\n            this._newCount = response.newCount && parseInt(response.newCount, 10) || 0;\n            this._count = response.count && parseInt(response.count, 10) || 0;\n        }\n\n        /**\n        * resetCount\n        * Reset the new count to 0\n        * @return {void}\n        */\n\n    }, {\n        key: 'resetNewCount',\n        value: function resetNewCount() {\n            // make a reset call if any\n            if (this._newCount !== 0 && this._config.service.resetUrl) {\n                var requestConfig = {\n                    url: this._config.service.resetUrl\n                };\n                this._request.read(requestConfig, function handleUnReadReset(err, response) {\n                    if (err) {\n                        return;\n                    }\n                });\n            }\n            this._newCount = 0;\n        }\n\n        /**\n        * _requestNotifications\n        * Makes a request to the api, renews the notification store is data is returned\n        * @param {object} requestOverride - matrix params to over ride the reqeust\n        * @param {Function} callback - The callback function\n        * @return {void}\n        */\n\n    }, {\n        key: '_requestNotifications',\n        value: function _requestNotifications(requestOverride, callback) {\n            var self = this;\n            var panelConfig = self._config.panel;\n            var matrixParams = {\n                count: panelConfig.maxCount,\n                imageTag: panelConfig.imageTag\n            };\n            if (!requestOverride) {\n                requestOverride = {};\n            }\n            objectAssign(matrixParams, requestOverride.matrixParams);\n            var requestConfig = {\n                matrixParams: matrixParams\n            };\n\n            var _updateStore = function _updateStore(err, response) {\n                if (!err && response) {\n                    self._replaceAllNotifications(response);\n                }\n                response = response || {};\n                callback && callback(err, response);\n            };\n            self._request.read(requestConfig, _updateStore);\n        }\n\n        /**\n        * getNotifications\n        * Returns the specified number or batch size notifications, or less (for collapsed panel)\n        * @return {object} notification markup and count\n        */\n\n    }, {\n        key: 'getNotifications',\n        value: function getNotifications() {\n            return {\n                count: this._count,\n                markup: this._markup,\n                newCount: this._newCount\n            };\n        }\n\n        /**\n        * fetchNotifications\n        * Makes the API call to get notification data\n        * @param {object} requestOverride - matrix params to over ride the reqeust\n        * @param {Function} callback - The callback function\n        * @return {void}        \n        */\n\n    }, {\n        key: 'fetchNotifications',\n        value: function fetchNotifications(requestOverride, callback) {\n            this._requestNotifications(requestOverride, callback);\n        }\n    }]);\n    return NotificationStore;\n}();\n\nvar constants = {\n    panelLoading: 'yns-panel-loading',\n    panelNodeId: 'yns-panel',\n    panelNodeClass: 'yns-panel',\n    panelHideElement: 'yns-hide',\n    panelError: 'yns-panel-error',\n    panelPaddingBtm: 'yns-panel-padding-btm'\n};\n\nvar panelTemplate = '<div class=\"yns-panel-header{hideHeaderClass}\">' + '<span class=\"yns-panel-header-title\">' + '{headerMsg}' + '</span>' + '</div>' + '<div class=\"yns-panel-data\">' + '<ul class=\"yns-notifications {paddingClass}\">' + '{promoMarkup}' + '{notifMarkup}' + '</ul>' + '</div>' + '<div class=\"yns-panel-footer-action {hideClass}\">' + '<a class=\"yns-navigate-center\" ' + 'href=\"{notifCenterLink}\" ' + 'data-ylk=\"sec:hd;subsec:notifications-viewall;slk:{notificationCenterNavMsg};\"' + '>' + '{notificationCenterNavMsg}' + '</a>' + '</div>';\n\nvar panelEmptyTemplate = '<li class=\"yns-container yns-empty\">' + '<div class=\"yns-content\">' + '{emptyPanelMsg}' + '</div>' + '</li>';\n\nvar panelErrorTemplate = '<div class=\"yns-panel-error\">' + '<span> {errorMsg} </span>' + '</div>';\n\nvar panelParentTemplate = '<div class=\"yns-panel\" id=\"yns-panel\"></div>';\n\nvar notifOnboardPromoTemplate = '<li class=\"yns-container yns-promo\">' + '<div class=\"yns-link\">' + '<img class=\"yns-img\" src=\"https://s.yimg.com/cv/apiv2/notifications/default-notif-img.png-168x168.png\" />' + '<div class=\"yns-content\">' + '<span class=\"yns-promo-title yns-title\">' + '{notifOnboardMsg}' + '</span>' + '<span class=\"yns-promo-button\">' + '<button class=\"yns-promo-ctr js-push-subscribe\" ' + 'data-subscription-topic=\"{subscriptionTopic}\" ' + 'data-ylk=\"sec:hd;subsec:notifications-promo;slk:Notify Me;\" ' + 'data-subscription-ylk=\"sec:hd;subsec:notifications-promo;\" ' + '>' + '{notifOnboardBtnLabel}' + '</button>' + '</span>' + '</div>' + '</div>' + '</li>';\n\n/* global document, window */\n\nvar EXPANDED_PANEL = 'expanded_panel';\nvar ERROR_PANEL = 'error_panel';\n\nvar NotificationView = function () {\n    function NotificationView(config, store) {\n        classCallCheck(this, NotificationView);\n\n        var self = this;\n        self._config = config;\n        self._panelNode = null;\n        self._store = store;\n    }\n\n    /**\n    * _renderPanel\n    * Renders the notification panel\n    * @param {string} template - Notification panel template\n    * @param {object} panelData - Notification panel data\n    * @return {object} notification panel display markup\n    */\n\n\n    createClass(NotificationView, [{\n        key: '_generatePanelMarkup',\n        value: function _generatePanelMarkup(template, panelData) {\n            var config = this._config;\n            var isNotifPermissionGranted = void 0;\n            var isClientPromoEligible = void 0;\n            if (typeof window !== 'undefined') {\n                isNotifPermissionGranted = window.Notification && window.Notification.permission === 'granted';\n                isClientPromoEligible = hasClass(document.body, config.promos.eligibleBodyClass);\n            }\n            var shouldShowNotifOnboardPromo = config.promos.enableNotifOnboard && !isNotifPermissionGranted && isClientPromoEligible;\n            var promoMarkup = shouldShowNotifOnboardPromo ? notifOnboardPromoTemplate : '';\n            if (promoMarkup) {\n                promoMarkup = promoMarkup.replace('{notifOnboardBtnLabel}', config.promos.notifOnboardBtnLabel).replace('{notifOnboardMsg}', config.promos.notifOnboardMsg).replace('{subscriptionTopic}', config.promos.subscriptionTopic);\n            }\n            var hasAdditionalNotifs = panelData.newCount > config.panel.maxCount;\n            var newCount = hasAdditionalNotifs ? panelData.newCount : '';\n            var notifCenterPath = config.panel.notificationCenterPath;\n            var notifCenterLinkClass = notifCenterPath ? '' : constants.panelHideElement;\n            var panelHeaderDisplayClass = config.panel.headerMsg ? '' : ' ' + constants.panelHideElement;\n            var paddingClass = notifCenterPath ? constants.panelPaddingBtm : '';\n            var notifMarkup = void 0;\n            if (panelData.count) {\n                notifMarkup = panelData.markup;\n            } else {\n                var panelEmptyMarkup = panelEmptyTemplate;\n                notifMarkup = panelEmptyMarkup.replace('{emptyPanelMsg}', config.panel.emptyPanelMsg);\n            }\n\n            template = template.replace('{notifMarkup}', notifMarkup).replace('{promoMarkup}', promoMarkup).replace('{hideClass}', notifCenterLinkClass).replace('{notifCenterLink}', notifCenterPath).replace('{paddingClass}', paddingClass).replace('{headerMsg}', config.panel.headerMsg).replace('{hideHeaderClass}', panelHeaderDisplayClass).replace(/{notificationCenterNavMsg}/g, config.panel.notificationCenterNavMsg).replace(/{newCount}/g, newCount);\n\n            return template;\n        }\n\n        /**\n        * render\n        * Renders the panel based on type - collapsed, expanded, toast\n        * @param {string} templateType - template type to be used\n        * @param {Function} callback - The callback function\n        * @return {void}\n        */\n\n    }, {\n        key: 'render',\n        value: function render(templateType, callback) {\n            var self = this;\n            if (!self._panelNode) {\n                callback && callback(new Error('No panel parent'));\n                return;\n            }\n\n            var template = void 0;\n            var parent = self._panelNode;\n            var panelMarkup = void 0;\n            var panelData = void 0;\n\n            switch (templateType) {\n                case EXPANDED_PANEL:\n                    template = panelTemplate || '';\n                    panelData = self._store.getNotifications();\n                    panelMarkup = self._generatePanelMarkup(template, panelData);\n                    parent.innerHTML = panelMarkup;\n                    break;\n                case ERROR_PANEL:\n                    template = panelErrorTemplate || '';\n                    panelMarkup = template.replace('{errorMsg}', self._config.panel.errorMsg);\n                    parent.innerHTML = panelMarkup;\n                    break;\n                default:\n                    break;\n            }\n            callback && callback();\n        }\n\n        /**\n        * createPanelParentNode\n        * Create the panel DOM structure\n        * @param {object} panelParentNode - Panel's parent node - from consumer\n        * @return {void}\n        */\n\n    }, {\n        key: 'createPanelParentNode',\n        value: function createPanelParentNode(panelParentNode) {\n            if (!panelParentNode) {\n                return;\n            }\n\n            panelParentNode.innerHTML = panelParentTemplate;\n            // Store the panel node\n            this._panelNode = document.getElementById(constants.panelNodeId);\n        }\n\n        /**\n        * updateBadgeNode\n        * Updates the badge node if needed\n        * @param {object} badgeNode  badge HTML node\n        * @return {void}\n        */\n\n    }, {\n        key: 'updateBadgeNode',\n        value: function updateBadgeNode(badgeNode) {\n            if (badgeNode) {\n                var _store$getNotificatio = this._store.getNotifications(),\n                    newCount = _store$getNotificatio.newCount;\n\n                var maxBadgeCount = this._config.badge.maxCount;\n                if (newCount) {\n                    var badgeCount = newCount > maxBadgeCount ? maxBadgeCount + '+' : newCount;\n                    badgeNode.innerHTML = badgeCount;\n                } else {\n                    badgeNode.innerHTML = '';\n                }\n            }\n        }\n\n        /**\n        * addStyles\n        * Add panel css returned by service to page once\n        * @param {object} styles css style blob\n        * @return {void}\n        */\n\n    }, {\n        key: 'addStyles',\n        value: function addStyles(styles) {\n            if (styles) {\n                if (typeof window !== 'undefined') {\n                    var styleTag = document.getElementById(this._config.panel.styleTagId);\n                    if (!styleTag) {\n                        styleTag = document.createElement('style');\n                        styleTag.type = 'text/css';\n                        styleTag.id = this._config.panel.styleTagId;\n                        styleTag.innerText = styles;\n                        document.head.appendChild(styleTag);\n                    }\n                }\n            }\n        }\n    }]);\n    return NotificationView;\n}();\n\n/* global document */\n/* Updates the notification store when needed\n Controls the notification view */\n\nvar EXPANDED_PANEL$1 = 'expanded_panel';\nvar ERROR_PANEL$1 = 'error_panel';\n\nvar PanelController = function () {\n    function PanelController(config, store, view) {\n        classCallCheck(this, PanelController);\n\n        var self = this;\n        self._store = store;\n        self._view = view;\n        self._config = config;\n        var panelConfig = self._config.panel;\n        self._panelParentNode = document.querySelector(panelConfig.parentSelector);\n        self._badgeNode = self._config.badge.selector && document.querySelector(self._config.badge.selector);\n        self._indicatorNode = panelConfig.indicatorSelector && document.querySelector(panelConfig.indicatorSelector);\n    }\n\n    /**\n    * createPanelParentNode\n    * Creates the base node for panel\n    * @return {void}\n    */\n\n\n    createClass(PanelController, [{\n        key: 'createPanelParentNode',\n        value: function createPanelParentNode() {\n            this._view.createPanelParentNode(this._panelParentNode);\n            this._notifPanelNode = document.getElementById(constants.panelNodeId);\n        }\n\n        /**\n        * refreshPanelNode\n        * Shows the expanded panel - fetches data from store, calls view to render, attached delegates\n        * @param {object} requestOverride - matrix params to over ride the reqeust\n        * @param {Function} callback - The callback function\n        * @return {void}\n        */\n\n    }, {\n        key: 'refreshPanelNode',\n        value: function refreshPanelNode(requestOverride, callback) {\n            var self = this;\n\n            addClass(self._notifPanelNode, constants.panelLoading);\n\n            self._store.fetchNotifications(requestOverride, function handleExpandedFetch(err, response) {\n                if (err) {\n                    if (!self._notifPanelNode.innerHTML) {\n                        self._view.render(ERROR_PANEL$1);\n                        addClass(self._notifPanelNode, constants.panelLoading);\n                    }\n                } else {\n                    self._view.render(EXPANDED_PANEL$1);\n                    self._view.updateBadgeNode(self._badgeNode);\n                    self._showBadge();\n                    self._showIndicator();\n                    self._view.addStyles(response.css);\n                }\n                removeClass(self._notifPanelNode, constants.panelLoading);\n\n                callback && callback(err, response);\n            });\n        }\n\n        /**\n        * resetBadge\n        * Reset the badge count\n        * @return {void}\n        */\n\n    }, {\n        key: 'resetBadge',\n        value: function resetBadge() {\n            var self = this;\n            self._store.resetNewCount();\n            self._view.updateBadgeNode(self._badgeNode);\n            addClass(self._badgeNode, self._config.badge.hideClass);\n        }\n\n        /**\n        * _showIndicator\n        * Add class to indicator node\n        * @return {void}\n        */\n\n    }, {\n        key: '_showIndicator',\n        value: function _showIndicator() {\n            if (!this._indicatorNode) {\n                return;\n            }\n\n            var _store$getNotificatio = this._store.getNotifications(),\n                newCount = _store$getNotificatio.newCount;\n\n            if (newCount) {\n                addClass(this._indicatorNode, this._config.panel.indicatorClass);\n            } else {\n                removeClass(this._indicatorNode, this._config.panel.indicatorClass);\n            }\n        }\n\n        /**\n        * _showBadge\n        * Show/hide the badge count\n        * @return {void}\n        */\n\n    }, {\n        key: '_showBadge',\n        value: function _showBadge() {\n            var self = this;\n\n            var _self$_store$getNotif = self._store.getNotifications(),\n                newCount = _self$_store$getNotif.newCount;\n\n            if (newCount) {\n                removeClass(self._badgeNode, self._config.badge.hideClass);\n            } else {\n                addClass(self._badgeNode, self._config.badge.hideClass);\n            }\n        }\n    }]);\n    return PanelController;\n}();\n\nvar config = {\n    promos: {\n        eligibleBodyClass: 'display-push-promos',\n        enableNotifOnboard: true,\n        notifOnboardBtnLabel: 'Notify Me',\n        notifOnboardMsg: 'Get Notifications for Your Favorite Topics',\n        subscriptionTopic: 'gondor_homerun_news'\n    },\n    badge: {\n        hideClass: '',\n        maxCount: 5,\n        selector: ''\n    },\n    panel: {\n        emptyPanelMsg: 'You have no new notifications.',\n        errorMsg: '',\n        headerMsg: 'Notifications',\n        imageTag: 'img:40x40|2|80',\n        indicatorClass: 'yns-indicator',\n        indicatorSelector: null,\n        maxCount: 6,\n        notificationCenterNavMsg: 'View all {newCount} notifications',\n        notificationCenterPath: '',\n        styleTagId: 'notificationStyles',\n        parentSelector: null // required\n    },\n    service: {\n        attemptCount: 2,\n        attemptDelay: 1,\n        url: null, // required\n        resetUrl: null,\n        isRMP: false,\n        responseType: 'json',\n        timeout: 1500\n    }\n};\n\nvar Main = function () {\n    function Main(config$$1) {\n        classCallCheck(this, Main);\n\n        var self = this;\n        self.config = self._parseConfig(config$$1);\n\n        var validConfigs = self._validateRequiredConfigs();\n        // silently return if required configs are missing\n        if (!validConfigs) {\n            return;\n        }\n\n        self._request = new NotificationRequest(self.config);\n        self._store = new NotificationStore(self.config, self._request);\n        self._view = new NotificationView(self.config, self._store);\n\n        self._panelController = new PanelController(self.config, self._store, self._view);\n        self._panelController.createPanelParentNode();\n\n        // Once all the internal modules are init, create helper method reference.\n        self._assignHelperMethods();\n    }\n\n    /**\n    * _parseConfig\n    * Parses the provided config and updates default. The configs are expected to be max one level deep\n    * @param {object} config - The config object\n    * @return {object} request configuration\n    */\n\n\n    createClass(Main, [{\n        key: '_parseConfig',\n        value: function _parseConfig(config$$1) {\n            var defaultConfig = {};\n            objectAssign(defaultConfig, config);\n\n            for (var key in defaultConfig) {\n                if (defaultConfig.hasOwnProperty(key)) {\n                    var orig = defaultConfig[key];\n                    var extn = config$$1[key];\n                    if ((typeof orig === 'undefined' ? 'undefined' : _typeof(orig)) === 'object') {\n                        objectAssign(orig, extn);\n                    } else {\n                        defaultConfig[key] = config$$1[key];\n                    }\n                }\n            }\n            return defaultConfig;\n        }\n\n        /**\n        * _validateRequiredConfigs\n        * Validates if required configs are being passed by consumer\n        * @return {boolean} validity of configs\n        */\n\n    }, {\n        key: '_validateRequiredConfigs',\n        value: function _validateRequiredConfigs() {\n            var _config = this.config;\n\n            return !!(_config.panel.parentSelector && _config.service.url);\n        }\n\n        /**\n        * _assignHelperMethods\n        * This function creates helper methods that refer to internal functions, binds correct context\n        * @return {void}\n        */\n\n    }, {\n        key: '_assignHelperMethods',\n        value: function _assignHelperMethods() {\n            var self = this;\n            self.helpers = {\n                refreshPanelNode: self._panelController.refreshPanelNode.bind(self._panelController),\n                resetBadge: self._panelController.resetBadge.bind(self._panelController),\n                resetIndicator: function resetIndicator() {\n                    removeClass(self._panelController._indicatorNode, self.config.panel.indicatorClass);\n                }\n            };\n        }\n    }]);\n    return Main;\n}();\n\nreturn Main;\n\n}());\n//# sourceMappingURL=notificationClient.min.js.map\n!function(){var a,o,i,n=\"lnct\";function t(e,n){var t=this;t.config=e||{},t.accordion=o.querySelector(e.accordionSelector),t.countBadge=o.querySelector(e.countBadgeSelector),t.notificationButton=o.querySelector(e.notificationButtonSelector),t.profileButton=o.querySelector(e.profileButtonSelector),t.notificationClient=n,t.visibilityMetaTag=\"\",a.wafer&&a.wafer.ready(function(){t.visibilityMetaTag=a.wafer.features.visibilityMeta.hidden||\"\"});function i(e){t.visibilityMetaTag&&o[t.visibilityMetaTag]||t.refreshPanel.call(t,e)}t.attachEventListeners(),i(t.handleBackgroundRefresh),e.pollingInterval&&setInterval(i,1e3*e.pollingInterval,t.handleBackgroundRefresh)}function e(){if(a.NotificationClient){var e=new window.NotificationClient(i);e&&e.helpers&&new t(i.adapter,e)}}function r(e,n,t){a=e,o=n,i=t||{\"adapter\":{\"accordionSelector\":\"#profile-notification-accordion\",\"countBadgeSelector\":\"#header-notification-badge\",\"initializeImmediately\":false,\"lang\":\"fr-FR\",\"loadInHpViewer\":false,\"notificationButtonSelector\":\"#header-notification-button\",\"pollingInterval\":300,\"profileButtonSelector\":\"#header-profile-button\",\"rapidModuleId\":\"applet_p_50000372\",\"region\":\"FR\"},\"badge\":{\"hideClass\":\"D(n)\",\"selector\":\"#header-notification-badge\"},\"panel\":{\"emptyPanelMsg\":\"Pas de nouvelle notification.\",\"errorMsg\":\"Réessayez plus tard.\",\"headerMsg\":\"Notifications\",\"indicatorSelector\":\"#header-notification-indicator\",\"maxCount\":6,\"notificationCenterNavMsg\":\"\",\"notificationCenterPath\":\"/\",\"parentSelector\":\"#header-notification-panel\"},\"promos\":{\"eligibleBodyClass\":\"display-push-promos\",\"enableNotifOnboard\":true,\"notifOnboardBtnLabel\":\"Recevoir des notifications\",\"notifOnboardMsg\":\"Recevez des notifications concernant vos sujets favoris\",\"subscriptionTopic\":\"gondor_homerun_news\"},\"service\":{\"url\":\"/tdv2_fp/api/resource/NotificationHistory.getHistory\"}}}t.prototype={attachEventListeners:function(){var e=this;e.profileButton&&e.profileButton.addEventListener(\"click\",function(){e.refreshPanel.call(e)}),e.accordion&&e.accordion.addEventListener(\"click\",function(){e.handlePanelOpen.call(e)}),e.notificationButton&&(e.notificationButton.addEventListener(\"mouseenter\",function(){e.handlePanelOpen.call(e)}),e.notificationButton.addEventListener(\"focus\",function(){e.handlePanelOpen.call(e)}))},getConsumptionTime:function(){return a.localStorage&&a.localStorage.getItem(n)},handleBackgroundRefresh:function(e,n){var t=this,i=a.YAHOO&&a.YAHOO.i13n&&a.YAHOO.i13n.rapidInstance||a.rapidInstance;if(i&&t.countBadge&&t.countBadge.className.indexOf(\"D(n)\")<0){var o={_links:[{cat:t.countBadge.innerText,elm:\"btn\",slk:\"notification\",subsec:\"notification-badge\"}],sec:\"hd\"};i.beaconLinkViews([o],0,{pp:{usergenf:0}})}},handlePanelOpen:function(){var e=this,n=a.YAHOO&&a.YAHOO.i13n&&a.YAHOO.i13n.rapidInstance||a.rapidInstance;e.stampConsumptionTime(),e.notificationClient.helpers.resetBadge(),e.notificationClient.helpers.resetIndicator(),n&&n.isModuleTracked(e.config.rapidModuleId)&&n.refreshModule(e.config.rapidModuleId)},stampConsumptionTime:function(){var e=\"\"+Math.floor((new Date).getTime()/1e3);return a.localStorage&&a.localStorage.setItem(n,e),e},refreshPanel:function(t){var i=this,e=i.getConsumptionTime()||i.stampConsumptionTime(),n=i.config.region,o=i.config.lang,a=i.config.loadInHpViewer,r={lastUpdate:e};n&&o&&(r.lang=o,r.region=n),a&&(r.loadInHpViewer=a),i.notificationClient.helpers.refreshPanelNode({matrixParams:r},function(e,n){t&&t.call(i,e,n)})}},\"undefined\"!=typeof module?(module.exports.NotificationClientAdapter=t,module.exports.defineGlobals=r,module.exports.initNotificationClient=e):(r(window,document),i.adapter&&i.adapter.initializeImmediately?e():o.addEventListener(\"DOMContentLoaded\",e))}();</script></div></div><div class=\"fixed-space H(127px) modal-open_H(90px) modal-open_Mb($bottomBarHideMargin)\"></div></div></div></div></header><div id=\"my-adsHPSPON-base\"><div id=\"my-adsHPSPON\" class=\"Ta-c Mt-10 Mb-20 Pos-r Ta(c) Mb(20px) Pos(r)\"><div class=\"Mx-a\"></div></div></div><div id=\"Masterwrap\"><div id=\"Page\" class=\"twelve-col\"><div id=\"Billboard-ad\"><div id=\"my-adsMAST-base\"><div id=\"my-adsMAST\" class=\"D-n\"><div id=\"my-adsMAST-iframe\"></div></div></div><div id=\"ad-north-base\" class=\"Stage Whs-nw Bfc D-n Pt-20 Pb-10\"><div id=\"ad-north\" class=\"BillboardAd\"></div></div></div><div id=\"feat-bar\"><div id=\"applet_p_50000287\" class=\"fbtdv2 wafer-rapid-module \" data-applet-guid=\"p_50000287\" data-applet-type=\"fbtdv2\" data-applet-params=\"_suid:50000287\" data-i13n=\"auto:true;sec:featurebar;useViewability:true\" data-i13n-sec=\"featurebar\"><div class=\"App-Bd\"><div class=\"App-Main\" data-region=\"main\"><div class=\"js-applet-view-container-main\"><div class=\"static-fallback-msg\"></div></div></div></div></div></div><main id=\"Main\" role=\"main\" tabindex=\"-1\"><div id=\"Banner\"></div><div id=\"my-adsLDRB\" class=\"D-n\"><div id=\"my-adsLDRB-iframe\"><script>\ndocument.documentElement.className += \" \";\n</script></div></div><div id=\"applet_p_50000291\" class=\"fbtdv2 wafer-rapid-module \" data-applet-guid=\"p_50000291\" data-applet-type=\"fbtdv2\" data-applet-params=\"_suid:50000291\" data-i13n=\"auto:true;sec:featurebar;useViewability:true\" data-i13n-sec=\"featurebar\"><div class=\"App-Bd\"><div class=\"App-Main\" data-region=\"main\"><div class=\"js-applet-view-container-main\"><div class=\"static-fallback-msg\"></div></div></div></div></div><div id=\"applet_p_50000313\" class=\"ntktdv2 wafer-rapid-module \" data-applet-guid=\"p_50000313\" data-applet-type=\"ntktdv2\" data-applet-params=\"_suid:50000313\" data-i13n=\"auto:true;sec:strm;useViewability:true\" data-i13n-sec=\"strm\"><div><div class=\"tdv2-wafer-ntk-desktop js-stream-item-wrap Pos(r)\" data-yaft-module=\"stream_item_1\"><div class=\"ntk-lead Pos(r) webkit-alias ntk-link-filter Z(2)\" data-type=\"1\"><div class=\" Pos(r) ntk-wrap Z(1)\"><div class=\"Bgr(nr) W(61%)! Bgp(c) Bgz(cv) Ov(h) Op(0.9):h Ov(v):h Bdrststart(2px) Bdrsbstart(2px)\"><a class=\"Op(0.9):f Ov(v):f O(n):f D(b) C(#fff) Td(n) ntk-link js-content-viewer rapidnofollow wafer-caas\" href=\"/news/sept-%C3%A0-huit-reportage-saint-tropez-ind%C3%A9cent-internautes-182944570.html\" data-ylk=\"elm:img;bpos:1;cnt_tpc:Need To Know;cpos:1;grpt:roundup;itc:0;pkgt:need_to_know;pos:1;subsec:needtoknow;ccode:ntk_single_feed__fr-FR__frontpage__default__default__desktop__ga__noSplit;ct:story;expb:0;g:b01722e3-5c6d-3d49-962a-71889bc0ad46;slk:Ce reportage de Sept à Huit a scandalisé les internautes;cposy:1;ss_cid:b01722e3-5c6d-3d49-962a-71889bc0ad46;aid:9eec5e9e-e386-3888-b8b0-4930163f9d88;\" data-uuid=\"b01722e3-5c6d-3d49-962a-71889bc0ad46\" data-wf-caas-uuid=\"b01722e3-5c6d-3d49-962a-71889bc0ad46\" data-wf-caas-prefetch=\"1\"><img class=\"W(100%) Mih(215px) Mih(277px)--miw1200\" src=\"https://s.yimg.com/uu/api/res/1.2/Etfh.sXwjl2QvtUqZbHAXg--~B/Zmk9c3RyaW07aD0zODg7cT05NTt3PTcyMDthcHBpZD15dGFjaHlvbg--/https://s.yimg.com/os/creatr-uploaded-images/2020-07/223d7230-bf07-11ea-bddf-4c116a864c50.cf.jpg\" alt=\"\"/><div class=\"Pos(a) Ov(h) Start(3/5) Mstart(5px) T(0) B(0) End(0) Z(2) Bdrstend(2px) Bdrsbend(2px) ntk-img-path\"><div class=\"Pos(a) Start(0) Z(2) T(0) End(0) B(0) D(n) Bgr(nr) Bgp(end_c) Bgz(cv) ntk-img-crop\" style=\"background-image:url(https://s.yimg.com/uu/api/res/1.2/Etfh.sXwjl2QvtUqZbHAXg--~B/Zmk9c3RyaW07aD0zODg7cT05NTt3PTcyMDthcHBpZD15dGFjaHlvbg--/https://s.yimg.com/os/creatr-uploaded-images/2020-07/223d7230-bf07-11ea-bddf-4c116a864c50.cf.jpg)\"></div></div><div class=\"Pos(a) End(0) T(0) B(0) W(2/5) Z(2) ntk-content\"><div class=\"Mstart(7px) P(20px) P(35px)!--miw1200\"><h2 class=\"js-stream-item-title Fz(23px) Fz(18px)--md1100 Td(u):h js-stream-content-link:f_Td(u) LineClamp(4,5.3em) Mb(13px) Lh(1.15)\" id=\"ntk-title\">Ce reportage de Sept à Huit a scandalisé les internautes</h2><p class=\"LineClamp(4,5.3em) LineClamp(3,4em)--md1250 Lh(1.35) Mx(0) Mt(0) Mb(5px)\">Le nouveau numéro de Sept à Huit, diffusé ce dimanche, a provoqué la colère des internautes. En cause ? Un reportage sur le luxe de Saint-Tropez.</p><span class=\"Fw(b) Td(u):h\">\"Ça me dégoûte\"&nbsp;»</span></div></div></a></div><div class=\"Pos(a) Pstart(27px) Pstart(42px)!--miw1200 Pb(11px) Pb(27px)!--miw1200 B(0) End(0) Fz(11px) C(#fff) W(2/5) Z(2) Bxz(bb) ntk-footer\" data-cmntnum=\"315\"><a href=\"/news/sept-%C3%A0-huit-reportage-saint-tropez-ind%C3%A9cent-internautes-182944570.html?bcmt=1\" class=\"js-content-viewer rapidnofollow js-stream-comments-button Fw(b) C(#fff) C(#0078ff):h C(#0078ff):f Td(n)\" data-ylk=\"itc:0;elm:btn;slk:cmmt;bpos:1;cnt_tpc:Need To Know;cpos:1;grpt:roundup;itc:0;pkgt:need_to_know;pos:1;subsec:needtoknow;ccode:ntk_single_feed__fr-FR__frontpage__default__default__desktop__ga__noSplit;ct:story;expb:0;g:b01722e3-5c6d-3d49-962a-71889bc0ad46;slk:Ce reportage de Sept à Huit a scandalisé les internautes;cposy:1;ss_cid:b01722e3-5c6d-3d49-962a-71889bc0ad46;aid:9eec5e9e-e386-3888-b8b0-4930163f9d88;\" data-uuid=\"b01722e3-5c6d-3d49-962a-71889bc0ad46\" aria-describedby=\"ntk-title\"><svg class=\"Mend(6px) js-stream-comments-button:h_Fill(#0078ff) Cur(p)\" width=\"21\" style=\"vertical-align:middle;fill:#fff;stroke:#fff;stroke-width:0\" height=\"21\" viewBox=\"0 0 16 16\" data-icon=\"comments\"><path d=\"M14.002 10c0 .735-.625 1.333-1.395 1.333h-8.58l-2.028 1.892-.002-9.892C1.998 2.598 2.623 2 3.392 2h9.215c.77 0 1.395.598 1.395 1.333V10zM3.392.667C1.887.667.667 1.86.667 3.334v11.333c0 .265.157.505.4.61.085.038.176.056.266.056.165 0 .328-.062.453-.18l2.765-2.486h8.058c1.505 0 2.726-1.194 2.726-2.667V3.333c0-1.473-1.22-2.667-2.726-2.667H3.393zm7.947 4H4.68c-.367 0-.666.298-.666.667S4.314 6 4.682 6h6.657c.367 0 .665-.298.665-.666s-.298-.667-.666-.667zM4.68 7.333c-.367 0-.666.298-.666.667s.298.667.666.667h6.657c.367 0 .665-.3.665-.667s-.298-.667-.666-.667H4.68z\"></path></svg><span>315&nbsp;personnes en train de réagir</span></a></div></div></div><div class=\"ntk-filmstrip Ov(h) Mb(5px) Z(1)\"><UL class=\"Whs(nw) Mt(9px) Mend(-9px) Lts(-3em)\"><li class=\"ntk-item W(1/5) Whs(n) Va(t) D(ib) Lts(0) Bdend(none) Pos(r)\" data-type=\"1\"><div class=\"Pos(r) ntk-wrap Z(1)\"><a class=\"Pos(r) D(b) Mend(9px) C($c-fuji-blue-4-b) C(#0078ff):h C(#0078ff):f O(n):f Op(0.9):h Op(0.9):f Td(n) W(a) ntk-footer-link js-content-viewer rapidnofollow wafer-caas\" href=\"/news/bayonne-chauffeur-bus-%C3%A9tat-mort-090009541.html\" data-ylk=\"elm:rhdln;bpos:1;cnt_tpc:Need To Know;cpos:1;grpt:roundup;itc:0;pkgt:need_to_know;pos:2;subsec:needtoknow;ccode:ntk_single_feed__fr-FR__frontpage__default__default__desktop__ga__noSplit;ct:story;expb:0;g:f8f9dc0f-5e54-3d50-b69f-a608fc933a3c;slk:Agressé, un chauffeur de bus en état de mort cérébrale;cposy:2;ss_cid:b01722e3-5c6d-3d49-962a-71889bc0ad46;aid:4211231c-13b0-34a2-8b2c-a52428bb5e6a;\" data-uuid=\"f8f9dc0f-5e54-3d50-b69f-a608fc933a3c\" data-wf-caas-uuid=\"f8f9dc0f-5e54-3d50-b69f-a608fc933a3c\" data-wf-caas-prefetch=\"1\"><img class=\"W(100%) Mih(56px) Mih(73px)!--miw1200 Bdrs(2px)\" src=\"https://s.yimg.com/uu/api/res/1.2/u5_0Cqum3nsg0fHXXUbabg--~B/Zmk9c3RyaW07aD0xNjA7cT04MDt3PTM0MDthcHBpZD15dGFjaHlvbg--/https://s.yimg.com/os/creatr-uploaded-images/2020-07/1a073fb0-bf6b-11ea-bf7f-5bed266388d9.cf.jpg\" alt=\"\"/><h3 class=\"Mx(0) Mb(0) Mt(4px) Fz(12px) LineClamp(2,2.6em) LineClamp(3,4em)!--md1100 T(70%) js-stream-content-link:f_Td(n) Start(2px) Td(u):h\">Agressé, un chauffeur de bus en état de mort cérébrale</h3></a></div></li><li class=\"ntk-item W(1/5) Whs(n) Va(t) D(ib) Lts(0) Bdend(none) Pos(r)\" data-type=\"1\"><div class=\"Pos(r) ntk-wrap Z(1)\"><a class=\"Pos(r) D(b) Mend(9px) C($c-fuji-blue-4-b) C(#0078ff):h C(#0078ff):f O(n):f Op(0.9):h Op(0.9):f Td(n) W(a) ntk-footer-link js-content-viewer rapidnofollow wafer-caas\" href=\"/news/prot%C3%A9ger-covid-indien-porte-masque-220734733.html\" data-ylk=\"elm:rhdln;bpos:1;cnt_tpc:Need To Know;cpos:1;grpt:roundup;itc:0;pkgt:need_to_know;pos:4;subsec:needtoknow;ccode:ntk_single_feed__fr-FR__frontpage__default__default__desktop__ga__noSplit;ct:story;expb:0;g:6a024684-ccb5-394d-ba60-d2736ad9e137;slk:Covid-19 : pour se protéger, il porte un masque... en or;cposy:4;ss_cid:b01722e3-5c6d-3d49-962a-71889bc0ad46;aid:d3876682-9371-3aa9-819a-0c83cfc6e12b;\" data-uuid=\"6a024684-ccb5-394d-ba60-d2736ad9e137\" data-wf-caas-uuid=\"6a024684-ccb5-394d-ba60-d2736ad9e137\" data-wf-caas-prefetch=\"1\"><img class=\"W(100%) Mih(56px) Mih(73px)!--miw1200 Bdrs(2px)\" src=\"https://s.yimg.com/uu/api/res/1.2/2lcdhwypbdDkG6gJ9WHLBA--~B/Zmk9c3RyaW07aD0xNjA7cT04MDt3PTM0MDthcHBpZD15dGFjaHlvbg--/https://s.yimg.com/os/creatr-uploaded-images/2020-07/c56ada80-bf73-11ea-a6fb-00254fa87025.cf.jpg\" alt=\"\"/><h3 class=\"Mx(0) Mb(0) Mt(4px) Fz(12px) LineClamp(2,2.6em) LineClamp(3,4em)!--md1100 T(70%) js-stream-content-link:f_Td(n) Start(2px) Td(u):h\">Covid-19 : pour se protéger, il porte un masque... en or</h3></a></div></li><li class=\"ntk-item W(1/5) Whs(n) Va(t) D(ib) Lts(0) Bdend(none) Pos(r)\" data-type=\"1\"><div class=\"Pos(r) ntk-wrap Z(1)\"><a class=\"Pos(r) D(b) Mend(9px) C($c-fuji-blue-4-b) C(#0078ff):h C(#0078ff):f O(n):f Op(0.9):h Op(0.9):f Td(n) W(a) ntk-footer-link js-content-viewer rapidnofollow wafer-caas\" href=\"/news/besan%C3%A7on-ne-paye-course-taxi-d%C3%A9pose-devant-commissariat-182900396.html\" data-ylk=\"elm:rhdln;bpos:1;cnt_tpc:Need To Know;cpos:1;grpt:roundup;itc:0;pkgt:need_to_know;pos:6;subsec:needtoknow;ccode:ntk_single_feed__fr-FR__frontpage__default__default__desktop__ga__noSplit;ct:story;expb:0;g:b11a95ad-35c0-3c37-be08-0460960c3e95;slk:Il n'aurait pas dû refuser de payer son taxi;cposy:6;ss_cid:b01722e3-5c6d-3d49-962a-71889bc0ad46;aid:f4270fbb-76e2-3a48-a4fd-282d298e2866;\" data-uuid=\"b11a95ad-35c0-3c37-be08-0460960c3e95\" data-wf-caas-uuid=\"b11a95ad-35c0-3c37-be08-0460960c3e95\" data-wf-caas-prefetch=\"1\"><img class=\"W(100%) Mih(56px) Mih(73px)!--miw1200 Bdrs(2px)\" src=\"https://s.yimg.com/uu/api/res/1.2/Y8tc1.miOyKAnCNpazUvZA--~B/Zmk9c3RyaW07aD0xNjA7cT04MDt3PTM0MDthcHBpZD15dGFjaHlvbg--/https://s.yimg.com/os/creatr-uploaded-images/2020-07/0f445e00-bf02-11ea-bfff-a2b722f24cdd.cf.jpg\" alt=\"\"/><h3 class=\"Mx(0) Mb(0) Mt(4px) Fz(12px) LineClamp(2,2.6em) LineClamp(3,4em)!--md1100 T(70%) js-stream-content-link:f_Td(n) Start(2px) Td(u):h\">Il n'aurait pas dû refuser de payer son taxi</h3></a></div></li></ul></div></div></div></div><div id=\"applet_p_50000314\" class=\"alternatenewsstream wafer-rapid-module Py(10px) \" data-applet-guid=\"p_50000314\" data-applet-type=\"alternatenewsstream\" data-applet-params=\"_suid:50000314\" data-i13n=\"auto:true;sec:strm;useViewability:true\" data-i13n-sec=\"strm\"><div><UL class=\"List(n) P(0) stream-items\" data-test-locator=\"stream-items\"><li class=\"stream-item js-stream-content Pos(r) Bgc(#fff)\" data-type=\"1\" data-uuid=\"8cf1ba87-d441-3f54-a818-23601e6132cb\" data-cpos=\"1\" data-wikis=\"Emmanuel_Macron,Bernard_Tapie,Brigitte_Macron,Nicolas_Sarkozy\" data-property=\"News\" data-i13n-cfg=\"{&quot;bpos&quot;:1,&quot;categoryLabel&quot;:&quot;News&quot;,&quot;cpos&quot;:1,&quot;cposy&quot;:1}\" data-test-locator=\"stream-item\" data-yaft-module=\"stream_item_1\"><div class=\"Mih(140px)\"><div class=\"userintent-hidestrmitem_D(n) Py(12px) Pos(r) Cf\"><div class=\"Fl(start) Pos(r) Mend(25px) Maw(220px) W(26%)\"><div class=\"H(0) T(0px) Bdrs(2px) Start(0) Pos(r)\" style=\"padding-bottom:55.91%\" data-test-locator=\"stream-item-image\"><a href=\"https://fr.news.yahoo.com/emmanuel-macron-%C3%A9tonnant-avertissement-bernard-095850298.html\" data-ylk=\"itc:0;elm:img;elmt:ct;imgt:ss;bpos:1;cpos:1;cposy:1;rspns:nav;sec:strm;t1:a3;t2:strm;t3:ct;ccode:main_single_feed__fr-FR__frontpage__default__default__desktop__ga__noSplit;ct:story;g:8cf1ba87-d441-3f54-a818-23601e6132cb;grpt:singlestory;pkgt:orphan_img;pos:1;cnt_tpc:News;slk:Emmanuel Macron : le violent avertissement que Bernard Tapie lui a donné avant le confinement\" aria-hidden=\"true\" class=\"\" tabindex=\"-1\"><img class=\"W(100%) Bdrs(2px)\" src=\"https://s.yimg.com/uu/api/res/1.2/p.j5h0UJK836M8KbmF4xcQ--~B/Zmk9c3RyaW07aD0yNDY7cT04MDt3PTQ0MDthcHBpZD15dGFjaHlvbg--/https://media.zenfs.com/fr/voici.fr/3003eea0a2f2d091a3bb698eb69d4413.cf.jpg\" alt=\"\"/></a></div></div><div class=\"Pend(45px)\"><div class=\"Fz(16px) Fw(b) Tt(c) D(ib) Mb(4px) Mend(9px) C($cat-news)\" data-test-locator=\"stream-item-category-label\">Actualités</div><div class=\"C($streamItemGray) Fz(12px) D(ib) Mb(4px)\" id=\"stream-item-publisher_1\" data-test-locator=\"stream-item-publisher\">Voici.fr</div><h3 class=\"LineClamp(2,2.6em) Mb(4px) Mb(0)--md1160 Mt(0) Lh(1.3) Fz(19px) stream-item-title\" data-test-locator=\"stream-item-title\"><a class=\"D(b) Td(n) Td(n):f C($c-fuji-blue-4-b) C($streamHoverClass):h\" data-uuid=\"8cf1ba87-d441-3f54-a818-23601e6132cb\" href=\"https://fr.news.yahoo.com/emmanuel-macron-%C3%A9tonnant-avertissement-bernard-095850298.html\" data-ylk=\"itc:0;elm:hdln;elmt:ct;bpos:1;cpos:1;cposy:1;rspns:nav;sec:strm;t1:a3;t2:strm;t3:ct;ccode:main_single_feed__fr-FR__frontpage__default__default__desktop__ga__noSplit;ct:story;g:8cf1ba87-d441-3f54-a818-23601e6132cb;grpt:singlestory;pkgt:orphan_img;pos:1;cnt_tpc:News;slk:Emmanuel Macron : le violent avertissement que Bernard Tapie lui a donné avant le confinement\" data-hosted-type=\"HOSTED\" data-wf-caas-prefetch=\"0\" data-wf-caas-uuid=\"8cf1ba87-d441-3f54-a818-23601e6132cb\" data-story-label=\"Actualités\"><span id=\"stream_item_title_1\">Emmanuel Macron : le violent avertissement que Bernard Tapie lui a donné avant le confinement</span><u class=\"StretchedBox\"></u></a></h3><p class=\"LineClamp(2,38px) Fz(14px) Lh(18px) C($streamSummaryClass) M(0) Bxz(bb) Mb(15px)\" data-test-locator=\"stream-item-summary\">En mars dernier, avant de prendre la décision de confiner les Français, Emmanuel Macron a demandé l'avis de personnes extérieures au gouvernement. Parmi elles, Bernard Tapie, qui a adressé un avertissement violent au président pour la suite de son mandat.</p></div><div class=\"comment-count Pos(a) T(12px) W(36px) End(0) Ta(c)\"><a class=\" Td(n) Td(n):f comment-count:h_C($streamHoverClass) D(ib)\" href=\"https://fr.news.yahoo.com/emmanuel-macron-%C3%A9tonnant-avertissement-bernard-095850298.html\" data-ylk=\"itc:0;elm:btn;bpos:1;cpos:1;cposy:1;rspns:nav;sec:strm;t1:a3;t2:strm;t3:ct;ccode:main_single_feed__fr-FR__frontpage__default__default__desktop__ga__noSplit;ct:story;g:8cf1ba87-d441-3f54-a818-23601e6132cb;grpt:singlestory;pkgt:orphan_img;pos:1;cnt_tpc:News;slk:cmmt\" data-test-locator=\"comments-link\" data-uuid=\"8cf1ba87-d441-3f54-a818-23601e6132cb\" aria-describedby=\"stream_item_title_1\"><span class=\"D(b) C(#6e7780) comment-count:h_C($streamHoverClass) Fz(11px) Ta(c) Fw(b) Pb(3px) comment-count-anim\"><span aria-hidden=\"true\">23</span><span class=\"Hidden\">23&nbsp;réactions</span></span><svg class=\"comment-count:h_Fill($streamHoverClass) Pe(n) Cur(p)\" width=\"20\" style=\"fill:#6E7780;stroke:#6E7780;stroke-width:0;vertical-align:bottom\" height=\"20\" viewBox=\"0 0 16 16\" data-icon=\"comments\"><path d=\"M14.002 10c0 .735-.625 1.333-1.395 1.333h-8.58l-2.028 1.892-.002-9.892C1.998 2.598 2.623 2 3.392 2h9.215c.77 0 1.395.598 1.395 1.333V10zM3.392.667C1.887.667.667 1.86.667 3.334v11.333c0 .265.157.505.4.61.085.038.176.056.266.056.165 0 .328-.062.453-.18l2.765-2.486h8.058c1.505 0 2.726-1.194 2.726-2.667V3.333c0-1.473-1.22-2.667-2.726-2.667H3.393zm7.947 4H4.68c-.367 0-.666.298-.666.667S4.314 6 4.682 6h6.657c.367 0 .665-.298.665-.666s-.298-.667-.666-.667zM4.68 7.333c-.367 0-.666.298-.666.667s.298.667.666.667h6.657c.367 0 .665-.3.665-.667s-.298-.667-.666-.667H4.68z\"></path></svg></a></div></div><div class=\"drawer-fetch-boundary Pos(r)\"><div data-bucket=\"900\" data-cfg=\"{&quot;adMeta&quot;:{&quot;enableDrawerFeedback&quot;:false},&quot;i13n&quot;:{&quot;bpos&quot;:1,&quot;categoryLabel&quot;:&quot;News&quot;,&quot;cpos&quot;:1,&quot;cposy&quot;:1},&quot;useNCP&quot;:false,&quot;tachyonParams&quot;:{&quot;query&quot;:{&quot;where&quot;:{&quot;lang&quot;:&quot;fr-FR&quot;,&quot;region&quot;:&quot;FR&quot;}}},&quot;xhrPathPrefix&quot;:&quot;/tdv2_fp/remote&quot;}\" data-wf-boundary=\"drawer-fetch-boundary\" data-wf-retry-count=\"1\" data-wf-target=\".drawer-fetch-target\" data-wf-trigger=\"onLoad\" data-wf-url=\"/tdv2_fp/remote?m_mode=json&amp;m_id=tdv2-wafer-stream&amp;ctrl=StreamRelated\" class=\"stream-drawer Trsde(0.3s) Trsdu(0.7s) Trstf(eio) Trsp(max-height) Mah(0px) show-drawer_Mah(280px) Ov(h) stream-related-drawer\"><div class=\"drawer-fetch-target\"></div></div><div class=\"adfeedback-dialog\"></div></div></div></li><li class=\"stream-item js-stream-content Pos(r) Bgc(#fff)\" data-type=\"1\" data-uuid=\"78782e86-a282-37d8-9346-b20137b5911f\" data-cpos=\"9\" data-wikis=\"Sylvie_Tellier,17e_arrondissement_de_Paris,Miss_France,Signe_de_vie\" data-property=\"News\" data-i13n-cfg=\"{&quot;bpos&quot;:1,&quot;categoryLabel&quot;:&quot;News&quot;,&quot;cpos&quot;:9,&quot;cposy&quot;:9}\" data-test-locator=\"stream-item\" data-yaft-module=\"stream_item_9\"><div class=\"Mih(140px)\"><div class=\"userintent-hidestrmitem_D(n) Py(12px) Pos(r) Cf\"><div class=\"Fl(start) Pos(r) Mend(25px) Maw(220px) W(26%)\"><div class=\"H(0) T(0px) Bdrs(2px) Start(0) Pos(r)\" style=\"padding-bottom:55.91%\" data-test-locator=\"stream-item-image\"><a href=\"https://fr.news.yahoo.com/miss-france-choqu%C3%A9e-saine-sauve-115828042.html\" data-ylk=\"itc:0;elm:img;elmt:ct;imgt:ss;bpos:1;cpos:9;cposy:9;rspns:nav;sec:strm;t1:a3;t2:strm;t3:ct;ccode:main_single_feed__fr-FR__frontpage__default__default__desktop__ga__noSplit;ct:story;g:78782e86-a282-37d8-9346-b20137b5911f;grpt:singlestory;pkgt:orphan_img;pos:1;cnt_tpc:News;slk:Miss France &quot;choquée&quot; mais &quot;saine et sauve&quot; après l'incendie mortel de son immeuble à Paris\" aria-hidden=\"true\" class=\"\" tabindex=\"-1\"><img class=\"W(100%) Bdrs(2px) wafer-img\" src=\"https://s.yimg.com/g/images/spaceball.gif\" data-wf-src=\"https://s.yimg.com/uu/api/res/1.2/N4QxgGAHqxkZ_tObH46vlg--~B/Zmk9c3RyaW07aD0yNDY7cT04MDt3PTQ0MDthcHBpZD15dGFjaHlvbg--/https://media.zenfs.com/fr/TeleLoisirs.fr/dd990957d53a9eaf2bbe10db4a93d992.cf.jpg\" alt=\"\"/></a></div></div><div class=\"Pend(45px)\"><div class=\"Fz(16px) Fw(b) Tt(c) D(ib) Mb(4px) Mend(9px) C($cat-news)\" data-test-locator=\"stream-item-category-label\">Actualités</div><div class=\"C($streamItemGray) Fz(12px) D(ib) Mb(4px)\" id=\"stream-item-publisher_9\" data-test-locator=\"stream-item-publisher\">Télé-Loisirs.fr</div><h3 class=\"LineClamp(2,2.6em) Mb(4px) Mb(0)--md1160 Mt(0) Lh(1.3) Fz(19px) stream-item-title\" data-test-locator=\"stream-item-title\"><a class=\"D(b) Td(n) Td(n):f C($c-fuji-blue-4-b) C($streamHoverClass):h\" data-uuid=\"78782e86-a282-37d8-9346-b20137b5911f\" href=\"https://fr.news.yahoo.com/miss-france-choqu%C3%A9e-saine-sauve-115828042.html\" data-ylk=\"itc:0;elm:hdln;elmt:ct;bpos:1;cpos:9;cposy:9;rspns:nav;sec:strm;t1:a3;t2:strm;t3:ct;ccode:main_single_feed__fr-FR__frontpage__default__default__desktop__ga__noSplit;ct:story;g:78782e86-a282-37d8-9346-b20137b5911f;grpt:singlestory;pkgt:orphan_img;pos:1;cnt_tpc:News;slk:Miss France &quot;choquée&quot; mais &quot;saine et sauve&quot; après l'incendie mortel de son immeuble à Paris\" data-hosted-type=\"HOSTED\" data-wf-caas-prefetch=\"0\" data-wf-caas-uuid=\"78782e86-a282-37d8-9346-b20137b5911f\" data-story-label=\"Actualités\"><span id=\"stream_item_title_9\">Miss France \"choquée\" mais \"saine et sauve\" après l'incendie mortel de son immeuble à Paris</span><u class=\"StretchedBox\"></u></a></h3><p class=\"LineClamp(2,38px) Fz(14px) Lh(18px) C($streamSummaryClass) M(0) Bxz(bb) Mb(15px)\" data-test-locator=\"stream-item-summary\">L'incendie qui a tué une personne et en a blessé une douzaine d'autres sur l'avenue des Ternes à Paris aurait pu coûter la vie à Clémence Botino. Miss France réside en effet dans l'immeuble qui a brûlé. Si elle est \"évidemment choquée\", la reine de beauté va très bien, a tenu à rassurer Sylvie Tellier.</p></div><div class=\"comment-count Pos(a) T(12px) W(36px) End(0) Ta(c)\"><a class=\" Td(n) Td(n):f comment-count:h_C($streamHoverClass) D(ib)\" href=\"https://fr.news.yahoo.com/miss-france-choqu%C3%A9e-saine-sauve-115828042.html\" data-ylk=\"itc:0;elm:btn;bpos:1;cpos:9;cposy:9;rspns:nav;sec:strm;t1:a3;t2:strm;t3:ct;ccode:main_single_feed__fr-FR__frontpage__default__default__desktop__ga__noSplit;ct:story;g:78782e86-a282-37d8-9346-b20137b5911f;grpt:singlestory;pkgt:orphan_img;pos:1;cnt_tpc:News;slk:cmmt\" data-test-locator=\"comments-link\" data-uuid=\"78782e86-a282-37d8-9346-b20137b5911f\" aria-describedby=\"stream_item_title_9\"><span class=\"D(b) C(#6e7780) comment-count:h_C($streamHoverClass) Fz(11px) Ta(c) Fw(b) Pb(3px) comment-count-anim\"><span aria-hidden=\"true\">35</span><span class=\"Hidden\">35&nbsp;réactions</span></span><svg class=\"comment-count:h_Fill($streamHoverClass) Pe(n) Cur(p)\" width=\"20\" style=\"fill:#6E7780;stroke:#6E7780;stroke-width:0;vertical-align:bottom\" height=\"20\" viewBox=\"0 0 16 16\" data-icon=\"comments\"><path d=\"M14.002 10c0 .735-.625 1.333-1.395 1.333h-8.58l-2.028 1.892-.002-9.892C1.998 2.598 2.623 2 3.392 2h9.215c.77 0 1.395.598 1.395 1.333V10zM3.392.667C1.887.667.667 1.86.667 3.334v11.333c0 .265.157.505.4.61.085.038.176.056.266.056.165 0 .328-.062.453-.18l2.765-2.486h8.058c1.505 0 2.726-1.194 2.726-2.667V3.333c0-1.473-1.22-2.667-2.726-2.667H3.393zm7.947 4H4.68c-.367 0-.666.298-.666.667S4.314 6 4.682 6h6.657c.367 0 .665-.298.665-.666s-.298-.667-.666-.667zM4.68 7.333c-.367 0-.666.298-.666.667s.298.667.666.667h6.657c.367 0 .665-.3.665-.667s-.298-.667-.666-.667H4.68z\"></path></svg></a></div></div><div class=\"drawer-fetch-boundary Pos(r)\"><div data-bucket=\"900\" data-cfg=\"{&quot;adMeta&quot;:{&quot;enableDrawerFeedback&quot;:false},&quot;i13n&quot;:{&quot;bpos&quot;:1,&quot;categoryLabel&quot;:&quot;News&quot;,&quot;cpos&quot;:9,&quot;cposy&quot;:9},&quot;useNCP&quot;:false,&quot;tachyonParams&quot;:{&quot;query&quot;:{&quot;where&quot;:{&quot;lang&quot;:&quot;fr-FR&quot;,&quot;region&quot;:&quot;FR&quot;}}},&quot;xhrPathPrefix&quot;:&quot;/tdv2_fp/remote&quot;}\" data-wf-boundary=\"drawer-fetch-boundary\" data-wf-retry-count=\"1\" data-wf-target=\".drawer-fetch-target\" data-wf-trigger=\"onLoad\" data-wf-url=\"/tdv2_fp/remote?m_mode=json&amp;m_id=tdv2-wafer-stream&amp;ctrl=StreamRelated\" class=\"stream-drawer Trsde(0.3s) Trsdu(0.7s) Trstf(eio) Trsp(max-height) Mah(0px) show-drawer_Mah(280px) Ov(h) stream-related-drawer\"><div class=\"drawer-fetch-target\"></div></div><div class=\"adfeedback-dialog\"></div></div></div></li><li class=\"stream-item js-stream-content Pos(r) Bgc(#fff)\" data-type=\"1\" data-uuid=\"fb637837-a7df-3db2-adf9-4723bc8a7b8e\" data-cpos=\"17\" data-wikis=\"BFM_TV,Stains,Fresque\" data-property=\"News\" data-i13n-cfg=\"{&quot;bpos&quot;:1,&quot;categoryLabel&quot;:&quot;News&quot;,&quot;cpos&quot;:17,&quot;cposy&quot;:17}\" data-test-locator=\"stream-item\" data-yaft-module=\"stream_item_17\"><div class=\"Mih(140px)\"><div class=\"userintent-hidestrmitem_D(n) Py(12px) Pos(r) Cf\"><div class=\"Fl(start) Pos(r) Mend(25px) Maw(220px) W(26%)\"><div class=\"H(0) T(0px) Bdrs(2px) Start(0) Pos(r)\" style=\"padding-bottom:55.91%\" data-test-locator=\"stream-item-image\"><a href=\"https://fr.news.yahoo.com/%C3%A0-stains-fresque-contre-violences-074137617.html\" data-ylk=\"itc:0;elm:img;elmt:ct;imgt:ss;bpos:1;cpos:17;cposy:17;rspns:nav;sec:strm;t1:a3;t2:strm;t3:ct;ccode:main_single_feed__fr-FR__frontpage__default__default__desktop__ga__noSplit;ct:story;g:fb637837-a7df-3db2-adf9-4723bc8a7b8e;grpt:singlestory;pkgt:orphan_img;pos:1;cnt_tpc:News;slk:À Stains, la fresque contre les violences policières recouverte de graffitis\" aria-hidden=\"true\" class=\"\" tabindex=\"-1\"><img class=\"W(100%) Bdrs(2px) wafer-img\" src=\"https://s.yimg.com/g/images/spaceball.gif\" data-wf-src=\"https://s.yimg.com/uu/api/res/1.2/dcJw5UaV9E28J3orHra7ZQ--~B/Zmk9c3RyaW07aD0yNDY7cT04MDt3PTQ0MDthcHBpZD15dGFjaHlvbg--/https://media.zenfs.com/fr-fr/huffingtonpost/332b6132dc47ecb8a2c062246531a93b.cf.jpg\" alt=\"\"/></a></div></div><div class=\"Pend(45px)\"><div class=\"Fz(16px) Fw(b) Tt(c) D(ib) Mb(4px) Mend(9px) C($cat-news)\" data-test-locator=\"stream-item-category-label\">Actualités</div><div class=\"C($streamItemGray) Fz(12px) D(ib) Mb(4px)\" id=\"stream-item-publisher_17\" data-test-locator=\"stream-item-publisher\">Le HuffPost</div><h3 class=\"LineClamp(2,2.6em) Mb(4px) Mb(0)--md1160 Mt(0) Lh(1.3) Fz(19px) stream-item-title\" data-test-locator=\"stream-item-title\"><a class=\"D(b) Td(n) Td(n):f C($c-fuji-blue-4-b) C($streamHoverClass):h\" data-uuid=\"fb637837-a7df-3db2-adf9-4723bc8a7b8e\" href=\"https://fr.news.yahoo.com/%C3%A0-stains-fresque-contre-violences-074137617.html\" data-ylk=\"itc:0;elm:hdln;elmt:ct;bpos:1;cpos:17;cposy:17;rspns:nav;sec:strm;t1:a3;t2:strm;t3:ct;ccode:main_single_feed__fr-FR__frontpage__default__default__desktop__ga__noSplit;ct:story;g:fb637837-a7df-3db2-adf9-4723bc8a7b8e;grpt:singlestory;pkgt:orphan_img;pos:1;cnt_tpc:News;slk:À Stains, la fresque contre les violences policières recouverte de graffitis\" data-hosted-type=\"HOSTED\" data-wf-caas-prefetch=\"0\" data-wf-caas-uuid=\"fb637837-a7df-3db2-adf9-4723bc8a7b8e\" data-story-label=\"Actualités\"><span id=\"stream_item_title_17\">À Stains, la fresque contre les violences policières recouverte de graffitis</span><u class=\"StretchedBox\"></u></a></h3><p class=\"LineClamp(2,38px) Fz(14px) Lh(18px) C($streamSummaryClass) M(0) Bxz(bb) Mb(15px)\" data-test-locator=\"stream-item-summary\">VIOLENCES POLICIÈRES - La fresque “contre le racisme et les violences policières” peinte à Stains (Seine-Saint-Denis), représentant les visages de George Floyd et d’Adama Traoré, a été taguée dans la nuit du samedi 4 au dimanche 5 juillet, a appris l’AFP auprès d’une source préfectorale. Des constatations ont été réalisées dimanche matin par la police, selon cette même source.</p></div><div class=\"comment-count Pos(a) T(12px) W(36px) End(0) Ta(c)\"><a class=\" Td(n) Td(n):f comment-count:h_C($streamHoverClass) D(ib)\" href=\"https://fr.news.yahoo.com/%C3%A0-stains-fresque-contre-violences-074137617.html\" data-ylk=\"itc:0;elm:btn;bpos:1;cpos:17;cposy:17;rspns:nav;sec:strm;t1:a3;t2:strm;t3:ct;ccode:main_single_feed__fr-FR__frontpage__default__default__desktop__ga__noSplit;ct:story;g:fb637837-a7df-3db2-adf9-4723bc8a7b8e;grpt:singlestory;pkgt:orphan_img;pos:1;cnt_tpc:News;slk:cmmt\" data-test-locator=\"comments-link\" data-uuid=\"fb637837-a7df-3db2-adf9-4723bc8a7b8e\" aria-describedby=\"stream_item_title_17\"><span class=\"D(b) C(#6e7780) comment-count:h_C($streamHoverClass) Fz(11px) Ta(c) Fw(b) Pb(3px) comment-count-anim\"><span aria-hidden=\"true\">295</span><span class=\"Hidden\">295&nbsp;réactions</span></span><svg class=\"comment-count:h_Fill($streamHoverClass) Pe(n) Cur(p)\" width=\"20\" style=\"fill:#6E7780;stroke:#6E7780;stroke-width:0;vertical-align:bottom\" height=\"20\" viewBox=\"0 0 16 16\" data-icon=\"comments\"><path d=\"M14.002 10c0 .735-.625 1.333-1.395 1.333h-8.58l-2.028 1.892-.002-9.892C1.998 2.598 2.623 2 3.392 2h9.215c.77 0 1.395.598 1.395 1.333V10zM3.392.667C1.887.667.667 1.86.667 3.334v11.333c0 .265.157.505.4.61.085.038.176.056.266.056.165 0 .328-.062.453-.18l2.765-2.486h8.058c1.505 0 2.726-1.194 2.726-2.667V3.333c0-1.473-1.22-2.667-2.726-2.667H3.393zm7.947 4H4.68c-.367 0-.666.298-.666.667S4.314 6 4.682 6h6.657c.367 0 .665-.298.665-.666s-.298-.667-.666-.667zM4.68 7.333c-.367 0-.666.298-.666.667s.298.667.666.667h6.657c.367 0 .665-.3.665-.667s-.298-.667-.666-.667H4.68z\"></path></svg></a></div></div><div class=\"drawer-fetch-boundary Pos(r)\"><div data-bucket=\"900\" data-cfg=\"{&quot;adMeta&quot;:{&quot;enableDrawerFeedback&quot;:false},&quot;i13n&quot;:{&quot;bpos&quot;:1,&quot;categoryLabel&quot;:&quot;News&quot;,&quot;cpos&quot;:17,&quot;cposy&quot;:17},&quot;useNCP&quot;:false,&quot;tachyonParams&quot;:{&quot;query&quot;:{&quot;where&quot;:{&quot;lang&quot;:&quot;fr-FR&quot;,&quot;region&quot;:&quot;FR&quot;}}},&quot;xhrPathPrefix&quot;:&quot;/tdv2_fp/remote&quot;}\" data-wf-boundary=\"drawer-fetch-boundary\" data-wf-retry-count=\"1\" data-wf-target=\".drawer-fetch-target\" data-wf-trigger=\"onLoad\" data-wf-url=\"/tdv2_fp/remote?m_mode=json&amp;m_id=tdv2-wafer-stream&amp;ctrl=StreamRelated\" class=\"stream-drawer Trsde(0.3s) Trsdu(0.7s) Trstf(eio) Trsp(max-height) Mah(0px) show-drawer_Mah(280px) Ov(h) stream-related-drawer\"><div class=\"drawer-fetch-target\"></div></div><div class=\"adfeedback-dialog\"></div></div></div></li></ul></div></div></main><aside id=\"Aside\" role=\"complementary\" tabindex=\"-1\"><div class=\"aside-sticky\"><div class=\"aside-sticky-col\"><div id=\"applet_p_50000352\" class=\"trendingtdv2wafer Mb(30px) \" data-applet-guid=\"p_50000352\" data-applet-type=\"trendingtdv2wafer\" data-applet-params=\"_suid:50000352\" data-i13n=\"auto:true;sec:tc-ts\" data-i13n-sec=\"tc-ts\"><div><div data-category=\"Tendances du jour\" class=\"trending-container\"><h2 class=\"D(b) Ell Ov(v) Fz(15px)\" data-title=\"Tendances du jour\"><span class=\"trending-title Cur(p) D(ib) W(50%)\" data-category=\"Tendances du jour\">Tendances du jour</span></h2><UL class=\"Pos(r) List(n) Mt(10px)\"><li class=\"trending-list\"><UL class=\"List(n) M(0) Mstart(-8px) ua-ie8_W(100%) ua-ie7_W(100%) blur_V(h) blur_Op(0) selected_Op(1)\"><li class=\"trending-item Pt(7px) D(ib) Bxz(bb) W(50%) ua-ie7_Pend(5px) Cl(start) Fl(start)\" data-test-locator=\"tnitem\"><a class=\"Td(n):h Td(n) Ell D(ib) C($c-fuji-blue-4-b)\" href=\"https://fr.search.yahoo.com/search?p=Audrey%20Pulvar&amp;fr=fp-tts&amp;fr2=ps\" data-ylk=\"bpos:1;cat:trendin;ccode:;cpos:1;g:;itc:0;kt:org;req_t:1594032900;rspns:nav;sec:tc-ts;slk:Audrey Pulvar;t1:a4;t2:tc-ts;t3:ct;uuid:\" title=\"Audrey Pulvar\" style=\"-webkit-font-smoothing:auto\"><span class=\"D(ib) W(1.3em) Ta(e) C(#000)\">1. </span><span class=\"Mstart(2px) C(#0078ff):h C(#000767) Fw(b) Fz(13px)\"> Audrey Pulvar</span></a></li><li class=\"trending-item Pt(7px) D(ib) Bxz(bb) W(50%) ua-ie7_Pend(5px) Cl(start) Fl(start)\" data-test-locator=\"tnitem\"><a class=\"Td(n):h Td(n) Ell D(ib) C($c-fuji-blue-4-b)\" href=\"https://fr.search.yahoo.com/search?p=Robot%20piscine&amp;fr=fp-tts&amp;fr2=ps\" data-ylk=\"bpos:1;cat:trendin;ccode:;cpos:5;g:;itc:0;kt:org;req_t:1594032900;rspns:nav;sec:tc-ts;slk:Robot piscine;t1:a4;t2:tc-ts;t3:ct;uuid:\" title=\"Robot piscine\" style=\"-webkit-font-smoothing:auto\"><span class=\"D(ib) W(1.3em) Ta(e) C(#000)\">5. </span><span class=\"Mstart(2px) C(#0078ff):h C(#000767) Fw(b) Fz(13px)\"> Robot piscine</span></a></li><li class=\"trending-item Pt(7px) D(ib) Bxz(bb) W(50%) ua-ie7_Pend(5px)\" data-test-locator=\"tnitem\"><a class=\"Td(n):h Td(n) Ell D(ib) C($c-fuji-blue-4-b)\" href=\"https://fr.search.yahoo.com/search?p=Kanye%20West&amp;fr=fp-tts&amp;fr2=ps\" data-ylk=\"bpos:1;cat:trendin;ccode:;cpos:9;g:;itc:0;kt:org;req_t:1594032900;rspns:nav;sec:tc-ts;slk:Kanye West;t1:a4;t2:tc-ts;t3:ct;uuid:\" title=\"Kanye West\" style=\"-webkit-font-smoothing:auto\"><span class=\"D(ib) W(1.3em) Ta(e) C(#000)\">9. </span><span class=\"Mstart(2px) C(#0078ff):h C(#000767) Fw(b) Fz(13px)\"> Kanye West</span></a></li></ul></li></ul></div></div></div><div id=\"my-adsFPAD-base\"><div id=\"my-adsFPAD\" class=\"Ta-c Mt-10 Mb-20 Pos-r sda-DAPF\"><script>\n                            rtFpadAdStart = window.performance && window.performance.now && window.performance.now();\n                        </script><div class=\"Mx-a\"><div id=\"my-adsFPAD-fallback\"><a href=\"https://overview.mail.yahoo.com/?lang=fr-FR\"><img src=\"https://s.yimg.com/cv/apiv2/default/20191018/FR_FR_Yellow_300x250.png\" border=\"0\"/>&nbsp;</a></div></div></div></div><div id=\"my-adsLREC-base\" style=\"\"><div id=\"my-adsLREC\" class=\"Ta-c Mt-10 Mb-20 Pos-r D-n\"><div id=\"my-adsLREC-iframe\"></div></div></div><div id=\"my-adsMON\" class=\"Ta-c Mt-10 Mb-20 Pos-r D-n\"><div class=\"Mx-a Ta-c\" id=\"my-adsMON-iframe\"></div></div><div id=\"applet_p_50000353\" class=\"weatherPreviewtdv2 wafer-rapid-module \" data-applet-guid=\"p_50000353\" data-applet-type=\"weatherPreviewtdv2\" data-applet-params=\"_suid:50000353\" data-i13n=\"auto:true;sec:weather;useViewability:true\" data-i13n-sec=\"weather\"><div class=\"App-Bd\"><div class=\"App-Main\" data-region=\"main\"><div class=\"js-applet-view-container-main\"><div class=\"static-fallback-msg\"></div></div></div></div></div><div data-applet-defer=\"batch:default\" id=\"applet_p_50000401\" class=\"topicstream wafer-rapid-module Mb(30px) \" data-applet-guid=\"p_50000401\" data-applet-type=\"topicstream\" data-applet-params=\"_suid:50000401\" data-i13n=\"auto:true;sec:card-topic\" data-i13n-sec=\"card-topic\"><div class=\"App-Hd\" data-region=\"header\"><div class=\"js-applet-view-container-header\"><h2 class=\"App-Title\"></h2></div></div><div class=\"App-Bd\"><div class=\"App-Main\" data-region=\"main\"><div class=\"js-applet-view-container-main\"><div class=\"App-loading\"></div></div></div></div></div><div id=\"applet_p_50000431\" class=\"poll Mb(30px) wafer-rapid-module \" data-applet-guid=\"p_50000431\" data-applet-type=\"poll\" data-applet-params=\"_suid:50000431\" data-i13n=\"auto:true;sec:fp-poll\" data-i13n-sec=\"fp-poll\"><div class=\"App-Bd\"><div class=\"App-Main\" data-region=\"main\"><div class=\"js-applet-view-container-main\"><div class=\"static-fallback-msg\"></div></div></div></div></div><div id=\"my-noadsLREC2\" class=\"Ta-c Mt-10 Mb-20 Pos-r D-n\"><div class=\"Mx-a Ta-c\" id=\"my-adsLREC2-iframe\"></div></div><div id=\"my-adsFOOT\" class=\"\"><div class=\"Mx-a Ta-c\" id=\"my-adsFOOT-iframe\"></div></div><div id=\"applet_p_50000405\" class=\"footertdv2wafer  wafer-rapid-module \" data-applet-guid=\"p_50000405\" data-applet-type=\"footertdv2wafer\" data-applet-params=\"_suid:50000405\" data-i13n=\"auto:true;sec:app-footerv2\" data-i13n-sec=\"app-footerv2\"><div><div id=\"footer-wrapper\" role=\"contentinfo\"><UL class=\"Lh(22px) Fz(13px) Ta(c)\"><li class=\"D(ib) Mend(6px)\"><a class=\"Tt(c) C(#6e7780) C(#0078ff):h\" data-ylk=\"t1:a4;t2:ft;t3:lst;sec:ft;elm:link;itc:0;rspns:nav\" href=\"https://www.verizonmedia.com/policies/ie/fr/verizonmedia/terms/otos/index.html\">CGU (MàJ)</a></li><li class=\"D(ib) Mend(6px)\"><a class=\"Tt(c) C(#6e7780) C(#0078ff):h\" data-ylk=\"t1:a4;t2:ft;t3:lst;sec:ft;elm:link;itc:0;rspns:nav\" href=\"https://safety.yahoo.com/FR/\">Sécurité</a></li></ul></div></div></div><div id=\"Footer\" class=\"Row Pstart-20 Pend-10 Pos-r\" role=\"contentinfo\"></div></div></div></aside></div></div><div class=\"wafer-template\" data-wf-template-id=\"content-viewer-template\" data-wf-template-on=\"stateChange\" data-wf-template-allow-rerender=\"1\" data-wf-template-target=\"#content-viewer\" data-wf-state-statetrigger=\"[state.showViewer]\"></div><div id=\"viewer\" class=\"Pos(r) Z(2) W(100%) Bgc(#fff) Pt(40px) V(h) Op(0) H(0) Ov(h) modal-open_H(a) modal-open_Op(1) modal-open_V(v) Trs($pageTransition) Cur(p)\" aria-hidden=\"true\"><div id=\"content-viewer\" class=\"Mx(a) W(1050px) Bxz(bb) Px(40px) Pt(25px) Bxsh($viewerShadow) Bdrs(6px) Cur(d)\"></div></div><template id=\"content-viewer-template\" type=\"wafer\" class=\"D(n)\"><div data-test-locator=\"homepage-viewer\" id=\"homepage-viewer\" class=\"viewer-wrapper Pb(20px) Pos(r) H(100%) D(f) Flw(w) Jc(sb) Ai(fs)\"><button id=\"closebtn\" class=\"Bdrs(20px) Bgc(#2d1152) C(#fff) Fw(b) Fz(17px) H(37px) Mstart(990px) P(1px 7px 2px 7px) Pos(f) W(37px) End(20px)--maw1064 Z(10) O(n) modal-closing_D(n)\"><svg class=\"Cur(p) Fill(#fff) Stk(#fff) Stkw(2) Va(b)\" height=\"19\" style=\"-mox-transform:translateX(-1px);\" viewBox=\"-1 -1 50 50\" width=\"19\"><path d=\"M37.98 34.827l-9.9-9.9 9.9-9.898c.78-.782.78-2.05 0-2.83-.78-.78-2.047-.78-2.828 0l-9.9 9.9-9.898-9.9c-.78-.78-2.048-.78-2.828 0-.78.78-.78 2.047 0 2.828l9.9 9.9-9.9 9.898c-.78.78-.78 2.047 0 2.828.78.78 2.047.78 2.828 0l9.9-9.9 9.898 9.9c.78.78 2.048.78 2.828 0 .782-.78.782-2.047 0-2.827z\"></path></svg><b class=\"Td(n) Hidden\">Close this content, you can also use the Escape key at anytime</b></button><div class=\"Flx($flexFullWidth) Mih(94px) Mb(35px)\"><div id=\"viewer-LDRB\" class=\"Flx($flexFullWidth) Ta(c)\"><div id=\"viewer-LDRB-iframe\"></div></div><div id=\"viewer-MAST\" class=\"Flx($flexFullWidth) Ta(c)\"><div id=\"viewer-MAST-iframe\"></div></div></div><div id=\"content-articles-wrapper\" class=\"content-col-wrapper Mih(750px) W($modalWidth)\"><div class=\"content-col\"><div class=\"wafer-caas Mb(40px)\" data-comments-id=\"mainArticleIdComments\" data-wf-caas-timeout=\"1000\" data-wf-caas-trigger=\"stateChange\" data-wf-caas-wrapper=\"content-articles-wrapper\" data-wf-state-caas-category-label=\"[state.viewerMainArticleCategoryLabel]\" data-wf-state-caas-collapsed=\"[state.viewerMainArticleCollapsed]\" data-wf-state-caas-uuid=\"[state.viewerMainArticleId]\" data-yaft-module=\"homepage-viewer-main-article\" id=\"mainArticle\"><div class=\"H(740px) W(100%) Bg(#fff) Bxz(bb)\"><div class=\"Bg(#e6e6e6) Pos(r) W(100%) H(100%)\"><div class=\"Pos(a) Bg(#fff) Start(0) T(0) W(100%) H(15px)\"></div><div class=\"Pos(a) Bg(#fff) T(25px) End(0) W(100%) H(15px)\"></div><div class=\"Pos(a) Bg(#fff) Start(20%) T(65px) W(50%) H(30px)\"></div><div class=\"Pos(a) Bg(#fff) T(65px) End(0) W(100%) H(15px)\"></div><div class=\"Pos(a) Bg(#fff) H(30px) W(80%) End(0%)\"></div><div class=\"Pos(a) Bg(#fff) T(90px) End(0) W(100%) H(15px)\"></div><div class=\"Pos(a) Bg(#fff) T(305px) End(0) W(100%) H(20px)\"></div><div class=\"Pos(a) Bg(#fff) Start(0) T(335px) W(100%) H(15px)\"></div></div></div></div><div id=\"mainArticleIdComments\" class=\"Mb(40px)\"></div><div class=\"cluster0_D(n)\"><div class=\"wafer-caas Mb(40px) Mih(200px) Bdtw(1px) Bdtc(#b2b2b2) Bdts(s) Pt(50px)\" id=\"clusterArticle1\" data-comments-id=\"clusterArticleId1Comments\" data-wf-caas-dependency=\"#mainArticle\" data-wf-caas-trigger=\"viewport\" data-wf-caas-wrapper=\"content-articles-wrapper\" data-wf-state-caas-uuid=\"[state.viewerClusterArticleId1]\"><div class=\"H(740px) W(100%) Bg(#fff) Bxz(bb)\"><div class=\"Bg(#e6e6e6) Pos(r) W(100%) H(100%)\"><div class=\"Pos(a) Bg(#fff) Start(0) T(0) W(100%) H(15px)\"></div><div class=\"Pos(a) Bg(#fff) T(25px) End(0) W(100%) H(15px)\"></div><div class=\"Pos(a) Bg(#fff) Start(20%) T(65px) W(50%) H(30px)\"></div><div class=\"Pos(a) Bg(#fff) T(65px) End(0) W(100%) H(15px)\"></div><div class=\"Pos(a) Bg(#fff) H(30px) W(80%) End(0%)\"></div><div class=\"Pos(a) Bg(#fff) T(90px) End(0) W(100%) H(15px)\"></div><div class=\"Pos(a) Bg(#fff) T(305px) End(0) W(100%) H(20px)\"></div><div class=\"Pos(a) Bg(#fff) Start(0) T(335px) W(100%) H(15px)\"></div></div></div></div><div id=\"clusterArticleId1Comments\" class=\"Mb(40px)\"></div><div class=\"wafer-caas Mb(40px) Mih(200px) Bdtw(1px) Bdtc(#b2b2b2) Bdts(s) Pt(50px)\" id=\"clusterArticle2\" data-comments-id=\"clusterArticleId2Comments\" data-wf-caas-dependency=\"#mainArticle\" data-wf-caas-trigger=\"viewport\" data-wf-caas-wrapper=\"content-articles-wrapper\" data-wf-state-caas-uuid=\"[state.viewerClusterArticleId2]\"><div class=\"H(740px) W(100%) Bg(#fff) Bxz(bb)\"><div class=\"Bg(#e6e6e6) Pos(r) W(100%) H(100%)\"><div class=\"Pos(a) Bg(#fff) Start(0) T(0) W(100%) H(15px)\"></div><div class=\"Pos(a) Bg(#fff) T(25px) End(0) W(100%) H(15px)\"></div><div class=\"Pos(a) Bg(#fff) Start(20%) T(65px) W(50%) H(30px)\"></div><div class=\"Pos(a) Bg(#fff) T(65px) End(0) W(100%) H(15px)\"></div><div class=\"Pos(a) Bg(#fff) H(30px) W(80%) End(0%)\"></div><div class=\"Pos(a) Bg(#fff) T(90px) End(0) W(100%) H(15px)\"></div><div class=\"Pos(a) Bg(#fff) T(305px) End(0) W(100%) H(20px)\"></div><div class=\"Pos(a) Bg(#fff) Start(0) T(335px) W(100%) H(15px)\"></div></div></div></div><div id=\"clusterArticleId2Comments\" class=\"Mb(40px)\"></div><div class=\"wafer-caas D(n) cluster3_D(b) cluster4_D(b) cluster5_D(b) Mb(40px) Mih(200px) Bdtw(1px) Bdtc(#b2b2b2) Bdts(s) Pt(50px)\" id=\"clusterArticle3\" data-comments-id=\"clusterArticleId3Comments\" data-wf-caas-dependency=\"#mainArticle\" data-wf-caas-trigger=\"viewport\" data-wf-caas-wrapper=\"content-articles-wrapper\" data-wf-state-caas-uuid=\"[state.viewerClusterArticleId3]\"></div><div id=\"clusterArticleId3Comments\" class=\"D(n) cluster3_D(b) cluster4_D(b) cluster5_D(b) Mb(40px)\"></div><div class=\"wafer-caas D(n) cluster4_D(b) cluster5_D(b) Mb(40px) Mih(200px) Bdtw(1px) Bdtc(#b2b2b2) Bdts(s) Pt(50px)\" id=\"clusterArticle4\" data-comments-id=\"clusterArticleId4Comments\" data-wf-caas-dependency=\"#mainArticle\" data-wf-caas-trigger=\"viewport\" data-wf-caas-wrapper=\"content-articles-wrapper\" data-wf-state-caas-uuid=\"[state.viewerClusterArticleId4]\"></div><div id=\"clusterArticleId4Comments\" class=\"D(n) cluster4_D(b) cluster5_D(b) Mb(40px)\"></div><div class=\"wafer-caas D(n) cluster5_D(b) Mb(40px) Mih(200px) Bdtw(1px) Bdtc(#b2b2b2) Bdts(s) Pt(50px)\" id=\"clusterArticle5\" data-comments-id=\"clusterArticleId5Comments\" data-wf-caas-dependency=\"#mainArticle\" data-wf-caas-trigger=\"viewport\" data-wf-caas-wrapper=\"content-articles-wrapper\" data-wf-state-caas-uuid=\"[state.viewerClusterArticleId5]\"></div><div id=\"clusterArticleId5Comments\" class=\"D(n) cluster5_D(b) Mb(40px)\"></div></div></div></div><div id=\"viewer-aside\" class=\"Pos(r) W(300px)\"><div class=\"aside-sticky W(300px) Pos(s)--maw1064 B(a)--maw1064\"><div class=\"Mih(254px)\"><div id=\"viewer-LREC\"><div id=\"viewer-LREC-iframe\"></div></div><div id=\"viewer-MON\"><div id=\"viewer-MON-iframe\"></div></div></div><div id=\"modal-sidekick-0\" class=\"wafer-caas wafer-rapid-module\" data-wf-caas-cache-strategy=\"networkFirst\" data-wf-caas-load-assets=\"1\" data-wf-caas-second-node=\"modal-sidekick-1\" data-wf-caas-trigger=\"stateChange\" data-wf-caas-type=\"sidekick\" data-wf-state-caas-url=\"[state.sidekick]\" data-yaft-module=\"homepage-viewer-sidekick\">&nbsp;</div><div id=\"viewer-LREC2\"><div id=\"viewer-LREC2-iframe\"></div></div><div id=\"modal-sidekick-1\" class=\"wafer-rapid-module\">&nbsp;</div><div id=\"viewer-LREC3\"><div id=\"viewer-LREC3-iframe\"></div></div><div id=\"viewer-MON2\"><div id=\"viewer-MON2-iframe\"></div></div></div></div><div id=\"viewer-LDRB2\" class=\"Flx($flexFullWidth) Ta(c)\"><div id=\"viewer-LDRB2-iframe\"></div></div><div id=\"viewer-FSRVY\" class=\"D(ib)\"><div id=\"viewer-FSRVY-iframe\"></div></div></div></template><input type=\"hidden\" id=\"afhistorystate\"/><script id=\"wafer-video-config\" type=\"application/json\">            {\"playerScript\":\"https:\\/\\/s.yimg.com\\/rx\\/builds\\/7.86.909.1590008200\\/fr-fr\\/videoplayer-nextgen-desktop-min.js\",\"config\":{\"CMS\":{\"env\":\"prod\",\"suppressAdContext\":false},\"comscoreC4\":\"US fp\",\"device\":\"desktop\",\"expBucket\":\"FPMON2001,FRHOT1\",\"lang\":\"fr-FR\",\"pageSpaceId\":\"2023392333\",\"preload\":true,\"region\":\"FR\",\"site\":\"frontpage\",\"stopBufferingOnPause\":true,\"rapidConfig\":{\"pageParams\":{\"_rid\":\"fs55xZqC\",\"pt\":\"home\",\"site\":\"fp\"}},\"YVAP\":{\"accountId\":\"111\"}},\"viewportOffset\":{\"offsetY\":90}}            </script><script type=\"text/javascript\" ></script><script type=\"text/javascript\">\n        var rapidPageConfig = {\n            rapidEarlyConfig : {\"compr_type\":\"deflate\",\"tracked_mods\":[\"Footer\",\"IntlSelector\"],\"spaceid\":2023392333,\"click_timeout\":300,\"track_right_click\":true,\"apv\":true,\"apv_time\":0,\"async_all_clicks\":true,\"compr_on\":true,\"yql_host\":\"udc.yahoo.com\",\"yql_path\":\"\\/v2\\/public\\/yql\",\"test_id\":\"FPMON2001,FRHOT1\",\"client_only\":0,\"pageview_on_init\":true,\"perf_navigationtime\":0,\"addmodules_timeout\":500,\"extendbcookie\":false,\"keys\":{\"_rid\":\"fs55xZqC\",\"mrkt\":\"fr\",\"pt\":\"home\",\"site\":\"fp\",\"ver\":\"megastrm\",\"uh_vw\":0,\"colo\":\"gq1\",\"navtype\":\"server\",\"abk\":\"\"},\"dwell_on\":true,\"viewability\":true,\"tracked_mods_viewability\":{\"applet_p_50000372\":\"hd\",\"applet_p_50000291\":\"featurebar\",\"applet_p_50000287\":\"featurebar\",\"applet_p_50000313\":\"strm\",\"applet_p_50000314\":\"strm\",\"applet_p_50000352\":\"tc-ts\",\"applet_p_50000431\":\"fp-poll\",\"applet_p_50000353\":\"app-wea\",\"applet_p_50000349\":\"storyswarm\",\"applet_p_50000405\":\"ft\",\"applet_p_50000401\":\"card-topic\"}},\n            rapidConfig: {\"compr_type\":\"deflate\",\"tracked_mods\":[\"Footer\",\"IntlSelector\"],\"spaceid\":2023392333,\"click_timeout\":300,\"track_right_click\":true,\"apv\":true,\"apv_time\":0,\"async_all_clicks\":true,\"compr_on\":true,\"yql_host\":\"udc.yahoo.com\",\"yql_path\":\"\\/v2\\/public\\/yql\",\"test_id\":\"FPMON2001,FRHOT1\",\"client_only\":0,\"pageview_on_init\":false,\"perf_navigationtime\":0,\"addmodules_timeout\":500,\"extendbcookie\":false,\"keys\":{\"_rid\":\"fs55xZqC\",\"mrkt\":\"fr\",\"pt\":\"home\",\"site\":\"fp\",\"ver\":\"megastrm\",\"uh_vw\":0,\"colo\":\"gq1\",\"navtype\":\"server\",\"abk\":\"\"},\"dwell_on\":true,\"viewability\":true,\"tracked_mods_viewability\":{\"applet_p_50000372\":\"hd\",\"applet_p_50000291\":\"featurebar\",\"applet_p_50000287\":\"featurebar\",\"applet_p_50000313\":\"strm\",\"applet_p_50000314\":\"strm\",\"applet_p_50000352\":\"tc-ts\",\"applet_p_50000431\":\"fp-poll\",\"applet_p_50000353\":\"app-wea\",\"applet_p_50000349\":\"storyswarm\",\"applet_p_50000405\":\"ft\",\"applet_p_50000401\":\"card-topic\"}},\n            rapidSingleInstance: 1\n        };\n                var avpRapidCallBack = function(apvObj) {\n            try {\n                var spaceid=YAHOO && YAHOO.i13n && YAHOO.i13n.SPACEID;\n                if (2023392333 == spaceid) {\n                   var img = new Image();\n                   img.src = \"/p.gif?beaconType=apv&sp=\" + spaceid + \"&device=desktop&intl=fr&pixel_pos=\" + apvObj.pixel_pos + \"&scroll_dir=\" + apvObj.scroll_dir;\n                }\n            } catch (e) {}\n            if (window.sdaAvpCallback) {\n                window.sdaAvpCallback();\n            }\n        };\n        rapidPageConfig.rapidConfig.apv_callback = avpRapidCallBack;\n        \n        try {\n            if (YAHOO && YAHOO.i13n && YAHOO.i13n.Rapid) {\n                YAHOO.i13n.WEBWORKER_FILE = '/lib/metro/g/myy/rapidworker_1_2_0.0.39.js';\n            }\n        } catch (e) {}\n        </script><script type=\"text/javascript\">\n        if (YAHOO && YAHOO.i13n && YAHOO.i13n.Rapid) {\n            var rapidEarlyConfig = rapidPageConfig.rapidEarlyConfig;\n            YAHOO.i13n.YWA_CF_MAP = rapidPageConfig.ywaCF;\n            YAHOO.i13n.YWA_ACTION_MAP = rapidPageConfig.ywaActionMap;\n            YAHOO.i13n.YWA_OUTCOME_MAP = rapidPageConfig.ywaOutcomeMap;\n            YAHOO.i13n.rapidInstance = new YAHOO.i13n.Rapid(rapidEarlyConfig);\n            if (YAHOO.i13n.rapidInstance && YAHOO.i13n.rapidInstance.getCurrentSID) {\n                // save A_SID so APE can use same session\n                YAHOO.i13n.A_SID = YAHOO.i13n.rapidInstance.getCurrentSID();\n            }\n        }\n        </script><script type=\"text/javascript\">\n     if (YAHOO && YAHOO.i13n && YAHOO.i13n.rapidInstance) {\n            window.rapidInstance = YAHOO.i13n.rapidInstance;\n            window.rapidInstance.addModulesWithViewability({\"applet_p_50000372\":\"hd\",\"applet_p_50000291\":\"featurebar\",\"applet_p_50000287\":\"featurebar\",\"applet_p_50000313\":\"strm\",\"applet_p_50000314\":\"strm\",\"applet_p_50000352\":\"tc-ts\",\"applet_p_50000431\":\"fp-poll\",\"applet_p_50000353\":\"app-wea\",\"applet_p_50000349\":\"storyswarm\",\"applet_p_50000405\":\"ft\",\"applet_p_50000401\":\"card-topic\"});\n     }\n   </script><script type=\"text/javascript\">\n            if (YAHOO) {\n                YAHOO.context = {\"browserName\":\"CH\",\"bucketId\":\"FPMON2001,FRHOT1\",\"device\":\"desktop\",\"intl\":\"fr\",\"isSsl\":1,\"osName\":\"Mac\",\"rid\":\"fs55xZqC\",\"spaceid\":\"2023392333\"};\n            }\n        </script><script type=\"text/javascript\" ></script><script type=\"text/javascript\" ></script><script type=\"text/javascript\">\n    (function(w) {\n        var adsConfig = {\n            clusterGeminiSMAdEnabled: undefined,\n            clusterGeminiSMAdConfig: {},\n            clusterSMAdEnabled: undefined,\n            clusterPositionMeta: undefined,\n            pencilAdSections: {},\n            positions: {\"LDRB\":{\"meta\":{\"clean\":\"sda-LDRB\",\"dest\":\"sda-LDRB-iframe\",\"fdb\":1,\"id\":\"LDRB\",\"metaSize\":true,\"pos\":\"LDRB\",\"supports\":{\"exp-ovr\":1,\"exp-push\":1,\"lyr\":0},\"w\":728,\"h\":90},\"sfoptin\":1},\"LREC\":{\"meta\":{\"clean\":\"sda-LREC\",\"dest\":\"sda-LREC-iframe\",\"fdb\":1,\"id\":\"LREC\",\"metaSize\":true,\"pos\":\"LREC\",\"supports\":{\"exp-ovr\":1,\"exp-push\":1,\"lyr\":0},\"w\":300,\"h\":250},\"sfoptin\":1},\"LREC3\":{\"meta\":{\"clean\":\"sda-LREC3\",\"dest\":\"sda-LREC3-iframe\",\"fdb\":1,\"id\":\"LREC3\",\"metaSize\":true,\"pos\":\"LREC3\",\"supports\":{\"exp-ovr\":1,\"exp-push\":1,\"lyr\":0},\"w\":300,\"h\":250},\"sfoptin\":1},\"LREC4\":{\"meta\":{\"clean\":\"sda-LREC4\",\"dest\":\"sda-LREC4-iframe\",\"fdb\":1,\"id\":\"LREC4\",\"metaSize\":true,\"pos\":\"LREC4\",\"supports\":{\"exp-ovr\":1,\"exp-push\":1,\"lyr\":0},\"w\":300,\"h\":250},\"sfoptin\":1},\"HPSPON\":{\"filtered\":1,\"sfoptin\":0},\"XFPAD\":{\"filtered\":1,\"sfoptin\":0},\"WFPAD\":{\"meta\":{\"clean\":\"sda-WFPAD\",\"dest\":\"sda-WFPAD-iframe\",\"id\":\"WFPAD\",\"metaSize\":true,\"pos\":\"WFPAD\",\"supports\":{\"exp-ovr\":1,\"exp-push\":1,\"lyr\":1,\"resize-to\":1},\"w\":320,\"h\":50},\"sfoptin\":0}},\n            rotation: {\"adboostgrouprotation\":{\"MON2\":{\"extrapositions\":\"LREC3,LREC4\"},\"LREC3\":{\"extrapositions\":\"MON2\",\"inview\":\"LREC4\"},\"LREC4\":{\"extrapositions\":\"MON2\",\"inview\":\"LREC3\"}},\"autoeventrt\":10000,\"autorotate\":true,\"currentpos\":\"LREC3\",\"defaultrt\":10000,\"grouprotation\":{\"MON2\":\"LREC3,LREC4\",\"LREC3\":\"MON2\",\"LREC4\":\"MON2\"},\"ldrbrt\":10000,\"lrec2selectiveenabled\":true,\"lrec4enabled\":true,\"lrec4pos\":\"LREC4\",\"lrecrt\":10000,\"mastrt\":30000,\"mon2enabled\":true,\"mon2pos\":\"MON2\",\"offset\":100,\"tabswitchrotate\":10000},\n            viewerGeminiSMAdEnabled: false,\n            viewerGeminiSMAdConfig: {},\n            viewerSMAdEnabled: false,\n            viewerPositionMeta: {\"positions\":[{\"clean\":\"viewer-FSRVY\",\"dest\":\"viewer-FSRVY-iframe\",\"h\":1,\"id\":\"FSRVY-1\",\"w\":1},{\"clean\":\"viewer-LDRB\",\"dest\":\"viewer-LDRB-iframe\",\"h\":90,\"id\":\"LDRB-1\",\"fdb\":1,\"supports\":{\"exp-ovr\":1},\"w\":728},{\"clean\":\"viewer-LREC\",\"dest\":\"viewer-LREC-iframe\",\"h\":250,\"id\":\"LREC-1\",\"fdb\":1,\"supports\":{\"exp-ovr\":1},\"w\":300},{\"clean\":\"viewer-LREC2\",\"dest\":\"viewer-LREC2-iframe\",\"h\":250,\"id\":\"LREC2-1\",\"fdb\":1,\"supports\":{\"exp-ovr\":1},\"w\":300},{\"clean\":\"viewer-LREC3\",\"dest\":\"viewer-LREC3-iframe\",\"h\":250,\"id\":\"LREC3-1\",\"fdb\":1,\"supports\":{\"exp-ovr\":1},\"w\":300},{\"clean\":\"viewer-LDRB2\",\"dest\":\"viewer-LDRB2-iframe\",\"h\":90,\"id\":\"LDRB2-1\",\"fdb\":1,\"supports\":{\"exp-ovr\":1},\"w\":728},{\"clean\":\"viewer-MON\",\"dest\":\"viewer-MON-iframe\",\"h\":600,\"id\":\"MON-1\",\"fdb\":1,\"supports\":{\"exp-ovr\":1},\"w\":300},{\"clean\":\"viewer-MON2\",\"dest\":\"viewer-MON2-iframe\",\"h\":600,\"id\":\"MON2-1\",\"fdb\":1,\"supports\":{\"exp-ovr\":1},\"w\":300}],\"siteAttributes\":\"LREC='300x250;1x1' LREC2='300x250;1x1' LREC3='300x250;1x1' UBALREC='300x250;1x1' UBALREC2='300x250;1x1' UBALREC3='300x250;1x1' MON='300x600;1x1' ctout=380 megamodal=true\",\"slideshowPositions\":[\"LREC-1\"]},\n            viewerViewportAdFetch: {},\n            viewerWfpadAdEnabled: undefined,\n        };\n\n        // expose adsConfig for homepage-viewer client\n        if (!w.adsConfig) {\n            w.adsConfig = adsConfig;\n        }\n    }(window));\n</script><script type=\"text/javascript\" defer=\"\">\n    document.addEventListener(\"DOMContentLoaded\", function () {\n        window.wafer.ready(function() {\n            window.YAHOO.viewer.init({\n                retainSearchParams: [\"atwKV\",\"debug_vssp\"],\n                context: {\"lang\":\"fr-FR\",\"region\":\"FR\",\"site\":\"fp\"}\n            });\n        }, window);\n    });\n</script><script id=\"wafer-caas-config\" type=\"application/json\">\n    {\n        \"caasUrl\": \"https://www.yahoo.com/caas/content/article/\",\n        \"contextParams\": \"appid=scrappy&device=desktop&lang=fr-FR&region=FR&site=fp&bucket=FPMON2001,FRHOT1&features=contentFeedbackEnabled,enableSlideShowKV,enableVideoDocking\"\n    }\n</script><script id=\"wafer-db-config\" type=\"application/json\">\n    {\n        \"name\": \"scooby\",\n        \"version\": 1\n    }\n</script><script type=\"text/javascript\"  defer=\"\"></script><script type=\"text/javascript\"  defer=\"\"></script><script type=\"text/javascript\"  defer=\"\"></script><script type=\"text/javascript\"  defer=\"\"></script><script type=\"text/javascript\"  defer=\"\"></script><script type=\"text/javascript\"  defer=\"\"></script><script type=\"text/javascript\"  defer=\"\"></script><script type=\"text/javascript\"  defer=\"\"></script><script type=\"text/javascript\"  defer=\"\"></script><script type=\"text/javascript\"  defer=\"\"></script><script type=\"text/javascript\"  defer=\"\"></script><script type=\"text/javascript\"  defer=\"\"></script><script type=\"text/javascript\"  defer=\"\"></script><script type=\"text/javascript\"  defer=\"\"></script><script type=\"text/javascript\"  defer=\"\"></script><script type=\"text/javascript\"  defer=\"\"></script><script type=\"text/javascript\"  defer=\"\"></script><script type=\"text/javascript\"  defer=\"\"></script><script type=\"text/javascript\"  defer=\"\"></script><script type=\"text/javascript\"  defer=\"\"></script><script ></script><script type=\"text/javascript\">                var WIN = window;\n                var beaconer = function(type, source, beaconKeys) {\n                    if (!window.wafer) {\n                        return;\n                    }\n                    var beaconUrl = \"/p.gif?type=\" + type + \"&beaconKeys=\" + escape(JSON.stringify(beaconKeys)) + \"&source=\" + source + \"&rid=fs55xZqC\" + \"&bucket=FPMON2001,FRHOT1\";\n                    window.wafer && window.wafer.utils.fireBeacon(beaconUrl);\n                };\n                var tracker = WIN.YAHOO && WIN.YAHOO.i13n && WIN.YAHOO.i13n.rapidInstance;\n                var helperConfig = {\n                    bucket: \"FPMON2001,FRHOT1\",\n                    churnCheckBackoff: 604800,\n                    enableChurnCheck: 1,\n                    enabled: true,\n                    serviceWorkerUrl: \"/service-worker.js\",\n                    spaceId: 1197806868,\n                    subscriptionService: {\n                        context: {\n                            crumb: \"ftPSKiCxiua\",\n                            lang: \"fr-FR\",\n                            region: \"FR\"\n                        },\n                        host: \"\",\n                        path: \"/_td_api\",\n                        protocol: \"\"\n                    },\n                    supportedBrowsers: {\n                        chrome: {\n                            maxVersion: 0,\n                            minVersion: 54,\n                            os: [\"win\", \"mac\", \"android\"],\n                            useServiceWorker: true\n                        }\n                    },\n                    userAgent: {\n                        browserName: \"chrome\",\n                        browserVersion: \"41\",\n                        osName: \"mac\"\n                    },\n                    useRivendell: 1\n                };\n\n                if (WIN.SubscriptionHelper) {\n                    WIN.subscriptionHelperInstance = new WIN.SubscriptionHelper(helperConfig, beaconer, tracker);\n                    WIN.subscriptionHelperInstance.addPromoButtonDelegator();\n                    WIN.subscriptionHelperInstance.showPushSubscriptionPromos();\n                }</script><script type=\"text/javascript\">\n            (function(w) {\n                w.YAHOO = w.YAHOO || {};\n                w.YAHOO.comscore = w.YAHOO.comscore || {};\n                w.YAHOO.comscore.c14 = -1;\n            })(window)\n        </script><script type=\"text/javascript\">\n            if (window.history) {\n                if ('scrollRestoration' in window.history) {\n                    history.scrollRestoration = 'manual';\n                }\n            }\n        </script><script>\n            var _comscore = _comscore || [];\n            _comscore.push({\"c1\":\"2\",\"c2\":\"7241469\",\"c5\":\"2023392333\",\"c7\":\"https:\\/\\/fr.yahoo.com\\/\",\"c14\":-1});\n            (function() {\n                var s = document.createElement(\"script\"), el = document.getElementsByTagName(\"script\")[0];\n                s.async = true;\n                s.src = \"https://s.yimg.com/aaq/vzm/cs_1.1.2.js\";\n                el.parentNode.insertBefore(s, el);\n            })();\n\t\t</script><noscript><img /></noscript><iframe  width=\"1px\" height=\"1px\" frameborder=\"0\" style=\"display:none\"></iframe><script type=\"text/javascript\"  defer=\"\"> </script><script type=\"text/javascript\"  defer=\"\"> </script><script type=\"text/javascript\"  defer=\"\"> </script><script type=\"text/javascript\"  defer=\"\"> </script><script type=\"text/javascript\">\n            \n\n                        function yaftPreProcess() {\n                // collect ad load times call YAFT.triggerCustomTiming right before the AFT calculation finished\n                var darlaAdTimings = [];\n                var adTiming;\n                var whiteListedAds = {\"LREC\":\"my-adsLREC-base\",\"MAST\":\"my-adsMAST\",\"LDRB\":\"my-adsLDRB\",\"UBALDRB\":\"my-adsUBALDRB\",\"TL1\":\"my-adsTL1\",\"TXTL\":\"my-adsTXTL\",\"LREC-0\":\"hl-ad-LREC-0\",\"MON-0\":\"hl-ad-MON-0\",\"MAST-0\":\"hl-ad-MAST-0\",\"LDRB-0\":\"hl-ad-LDRB-0\",\"SPL2-0\":\"hl-ad-SPL2-0\",\"SPL-0\":\"hl-ad-SPL-0\",\"LDRB-1\":\"viewer-LDRB\",\"MON-1\":\"viewer-MON\",\"LREC-1\":\"viewer-LREC\",\"LREC-2\":\"viewer-LREC2\"};\n                var w = window;\n                var aft2StartRender = w.YAFT.AFT2.getAFT2StartRender() - 800;\n                if (typeof w._adLT !== 'undefined' && w.performance && w.performance.now) {\n                    for (var i = 0; i < w._adLT.length; i++) {\n                        adTiming = w._adLT[i];\n                        var adIdAction = adTiming[0];\n                        var adTime = adTiming[1];\n                        var adAction = adIdAction.indexOf('ADSTART_') > -1 ? 'start' : 'end';\n                        var adId = '';\n\n                        if (adAction === 'start') {\n                            adId = adIdAction.replace('ADSTART_', '');\n                            darlaAdTimings[adId] = {\n                                started: adTime,\n                                loaded: 0\n                            };\n                        } else {\n                            adId = adIdAction.replace('ADEND_', '');\n                            if (typeof darlaAdTimings[adId] !== 'undefined') {\n                                darlaAdTimings[adId].loaded = adTime;\n                            }\n                        }\n                    }\n\n                    for (var adObj in darlaAdTimings) {\n                        if (darlaAdTimings.hasOwnProperty(adObj) && typeof whiteListedAds[adObj] !== undefined) {\n                            var adStartTime = darlaAdTimings[adObj].started;\n                            var adLoadTime = darlaAdTimings[adObj].loaded || w.performance.now();\n                            if (aft2StartRender > adStartTime) {continue;}\n                            w.YAFT.triggerCustomTiming(whiteListedAds[adObj], adStartTime, adLoadTime);\n                        }\n                    }\n                }\n\n                // calculate custom video timing\n                if (typeof w._videoLT !== 'undefined' && w.YAFT && w.YAFT.isInitialized() && w.performance && typeof w.performance.now === 'function') {\n                    Object.getOwnPropertyNames(window._videoLT).forEach(function(key) {\n                        w.YAFT.triggerCustomTiming(key, window._videoLT[key].startTime, window._videoLT[key].loadTime || w.performance.now());\n                    });\n                }\n            }\n\n            function yaftInit(e) {\n                if (window.YAFT !== undefined) {\n                    var __yaftConfig = {\n                        modules: [\"header-wrapper\",\"applet_p_\",\"stream_item_\",\"ad-north-base\",\"fea-\",\"my-adsFPAD-base\",\"my-adsLREC-base\",\"my-adsMAST\",\"my-adsLDRB\",\"my-adsUBALDRB\",\"my-adsTXTL\",\"content-modal-\",\"hl-ad-LREC-\",\"modal-sidekick-\",\"hl-ad-LREC-0\",\"hl-ad-MON-0\",\"hl-ad-MAST-0\",\"hl-ad-LDRB-0\",\"hl-ad-SPL2-0\",\"hl-ad-SPL-0\",\"homepage-viewer-\",\"viewer-LDRB\",\"viewer-MON\",\"viewer-LREC\",\"viewer-LREC2\"],\n                        modulesExclude: [\"UH-Search\",\"UH-ColWrap\",\"my-adsMAST-base\",\"applet_p_50000313\",\"applet_p_50000314\",\"stream_item_title_2\",\"stream_item_title_3\",\"stream_item_title_4\",\"stream_item_title_5\"],\n                        canShowVisualReport: true,\n                        useNormalizeCoverage: true,\n                        includeOnlyAft2: true,\n                        useNativeStartRender : true,\n                        useNativeStartRenderMeaningful : true,\n                        customReportModules: [],\n                        modulesAft2Container: [\"hl-viewer\"],\n                        maxWaitTime: 6000,\n                        preProcess: yaftPreProcess,\n                        preferDataModNameOverId: true\n                    };\n                    __yaftConfig.plugins = [];                __yaftConfig.plugins.push({\n                     name: 'aftnoad',\n                     isPre: true,\n                     config: {\n                         useNormalizeCoverage: true,\n                         adModules:[\"ad-north-base\",\"my-adsFPAD-base\",\"my-adsLREC-base\",\"my-adsTL1\",\"my-adsMAST\",\"my-adsLDRB\",\"my-adsUBALDRB\",\"hl-ad-LREC-0\",\"hl-ad-MAST-0\",\"hl-ad-LDRB-0\",\"hl-ad-SPL2-0\",\"my-adsTXTL\",\"hl-ad-SPL-0\"]\n                     }\n                });\n                    \n                            window.aft2CB = function(data, error) {\n        window.YAFT.updateConfig({modulesAft2Container:'[\"hl-viewer\"]'});\n        if (!error) {\n            var aft2 = Math.round(data.aft);\n            var vic2 = data.visuallyComplete;\n            var srt2 = Math.round(data.startRender);\n\n            var rapidInstance = (YAHOO && YAHOO.i13n && YAHOO.i13n.rapidInstance) || (YMedia && YMedia.My && YMedia.My.App && YMedia.My.App.getRapidTracker && YMedia.My.App.getRapidTracker()) || null;\n            if (rapidInstance) {\n                var afterPageLoad = {\n                    AFT: aft2,\n                    AFT2: aft2,\n                    STR: srt2,\n                    VIC: vic2\n                };\n                var perfData = {\n                    perf_commontime: {afterPageLoad: afterPageLoad}\n                };\n                var pageParamsObject = null;            if (rapidInstance.getRefererSpaceid) {\n                pageParamsObject  = {\n                    ref_sp: rapidInstance.getRefererSpaceid(),\n                    visit_sp: (window.Af && window.Af.config && window.Af.config.spaceid)\n                };\n            }\n                rapidInstance.beaconPerformanceData(perfData, pageParamsObject);\n            }\n        }\n    };\n                    \n                    window.YAFT.init(__yaftConfig, function(data, error) {\n                        var i;\n                        if (!error) {\n                            try {\n                                        var rapidInstance = YAHOO.i13n.rapidInstance ? YAHOO.i13n.rapidInstance : (YMedia.My && YMedia.My.App && YMedia.My.App.getRapidTracker) ? YMedia.My.App.getRapidTracker() : null;\n        if(rapidInstance) {\n            var initialPageLoad = {\n                AFT: Math.round(data.aft),\n                AFT1: Math.round(data.aft),\n                STR: Math.round(data.startRender),\n                VIC: data.visuallyComplete,\n                PLT: data.pageLoadTime,\n                DOMC: data.domElementsCount,\n                HTTPC: data.httpRequests.count,\n                CP: Math.round(data.totalCoveragePercentage),\n                NCP: Math.round(data.normTotalCoveragePercentage)\n            };\n\n            if(data.aftNoAd) {\n                initialPageLoad.AFTNOAD = Math.round(data.aftNoAd);\n            }\n\n            var customPerfData = {},\n                pagePerfData = {},\n                results = [];\n\n            var yaftResults = [0], yaftModule = '', yaftIndex = '';\n            // Find costly resource time\n            for (yaftModule in data.modulesReport) {\n                for (yaftIndex in data.modulesReport[yaftModule].resources) {\n                    yaftResults.push(Math.round(data.modulesReport[yaftModule].resources[yaftIndex].durationFromNStart));\n                }\n            }\n            pagePerfData['COSTLY_RESOURCE'] = Math.max.apply(null, yaftResults);\n            pagePerfData['X_FB1'] = 12;\n            pagePerfData['X_FBN'] = 15;\n\n            if(data.modulesReport) {\n                var num_stream_modules = 6;\n                for(var i=1; i<=num_stream_modules; i++) {\n                    if (data.modulesReport['stream_item_' + i] && data.modulesReport['stream_item_' + i].inViewPort) {\n                        if(i==1) {\n                            pagePerfData['HERO'] = Math.round(data.modulesReport.stream_item_1.loadTime);\n                        }\n                        else {\n                            pagePerfData['STREAM' + (i-1)] = Math.round(data.modulesReport['stream_item_' + i].loadTime);\n                        }\n                    }\n                }\n            }\n\n            // Log ad perf data to rapid perf metric\n            if (window.FPAD_rendered) {\n                pagePerfData['xAFT'] = data.aft;\n                pagePerfData['xPLT'] = data.pageLoadTime;\n                if (window.rtFpadAdStart) {\n                    pagePerfData['ADSTART_FPAD'] = Math.round(window.rtFpadAdStart);\n                    if (window.rtAdStart) {\n                         pagePerfData['ADCSTART_FPAD'] = Math.round(window.rtAdStart);\n                    }\n                    var adEndTime = window.rtAdDone ? window.rtAdDone : (window.performance && window.performance.now && window.performance.now());\n                    pagePerfData['ADEND_FPAD'] = Math.round(adEndTime);\n                }\n            }\n\n            // Track ad metrics\n            if ( window._adLT) {\n                for (var i = 0; i< _adLT.length; i++) {\n                    pagePerfData[_adLT[i][0]]  = _adLT[i][1];\n                }\n            }\n\n            // Track video metrics\n            if (window._videoLT) {\n                Object.getOwnPropertyNames(window._videoLT).forEach(function(key, index) {\n                    var videoStartKey = 'VIDEO_' + (index + 1) + '_START';\n                    var videoEndKey = 'VIDEO_' + (index + 1) + '_END';\n                    pagePerfData[videoStartKey] = Math.round(window._videoLT[key].startTime);\n                    pagePerfData[videoEndKey] = Math.round(window._videoLT[key].loadTime || 99999);\n                });\n            }\n                        var isDarlaJsLoadedFromCache = false;\n\n            if(resourceTimingAssets) {\n                for(i in resourceTimingAssets) {\n                    if (resourceTimingAssets.hasOwnProperty(i)) {\n                        resourceName = window.performance.getEntriesByName(resourceTimingAssets[i]);\n                        if (resourceName && resourceName.length) {\n                            var resourceFinish = resourceName[0].responseEnd;\n                            pagePerfData[i] = Math.round(resourceFinish);\n\n                            if (i === 'darlaJsLoaded' && resourceName[0].duration <= 0) {\n                                isDarlaJsLoadedFromCache = true;\n                            }\n                        }\n                    }\n                }\n            }\n\n            pagePerfData['darlaCaching'] = +isDarlaJsLoadedFromCache;\n\n            // collect applet init timing stats\n            if (window && window.performance && window.performance.getEntriesByType) {\n                var perfMarks = window.performance.getEntriesByType('mark');\n                var _l = perfMarks.length;\n                var startStopRegexp = / (START|STOP)/;\n                for(i = 0; i < _l; i++) {\n                    if (startStopRegexp.test(perfMarks[i].name)) {\n                        pagePerfData[perfMarks[i].name] = Math.round(perfMarks[i].startTime + perfMarks[i].duration);\n                    }\n                }\n\n                var perfMeasures = window.performance.getEntriesByType('measure');\n                _l = perfMeasures.length;\n                var durationRegexp = /aptNew DUR/;\n                for(i = 0; i < _l; i++) {\n                    if (durationRegexp.test(perfMeasures[i].name)) {\n                        pagePerfData[perfMeasures[i].name] = Math.round(perfMeasures[i].duration);\n                    }\n                }\n            }\n\n            // Track user connection type\n            var navConnection = navigator && (navigator.connection || navigator.mozConnection || navigator.webkitConnection) || {};\n            pagePerfData['CONNECTION_TYPE'] = navConnection.effectiveType || 'unknown';\n\n            customPerfData['utm'] = pagePerfData;\n            var perfData = {\n                perf_commontime: {initialPageLoad: initialPageLoad},\n                perf_usertime: customPerfData\n            };\n            rapidInstance.beaconPerformanceData(perfData);\n        }\n                            } catch (e) {}\n                        }\n                   });\n                }\n            }\n            if (window.addEventListener) {\n                window.addEventListener('DOMContentLoaded', yaftInit, false);\n                var _yaftScrollingTimer,\n    _yaftIsScrolling = false,\n    _yaftIsDone = false,\n    _yaftMaxScroll = 5,\n    _yaftScrollingTimerDelay = 66,\n    _yaftScrollCounter = 1,\n    YMedia = YMedia || null,\n    rapidInstance = (YAHOO && YAHOO.i13n && YAHOO.i13n.rapidInstance) || (YMedia && YMedia.My && YMedia.My.App && YMedia.My.App.getRapidTracker && YMedia.My.App.getRapidTracker()) || null;\n\n// Listen for scroll events\nwindow.addEventListener('scroll', function ( event ) {\n    if (_yaftScrollCounter > _yaftMaxScroll) {\n        return;\n    }\n    if (!_yaftIsScrolling) {\n        window.YAFT.FPS.start('FPSIndex');\n        _yaftIsScrolling = true;\n    }\n    // Clear our timeout throughout the scroll\n    window.clearTimeout(_yaftScrollingTimer);\n\n    // Set a timeout to run after scrolling ends\n    _yaftScrollingTimer = setTimeout(function() {\n        _yaftIsScrolling = false;\n        window.YAFT.FPS.stop('FPSIndex', function(err, data) {\n            var payload;\n            if (!err) {\n                payload = {\n                   utm: {\n                       fps_average_index: Math.round(data.avgFps),\n                       fps_lowest_index: Math.round(data.worse)\n                   }\n                };\n                _yaftScrollCounter++;\n                if (rapidInstance) {\n                    rapidInstance.beaconPerformanceData({perf_usertime: payload});\n                }\n            }\n        });\n    }, _yaftScrollingTimerDelay);\n\n}, false);\n            } else if (window.attachEvent) {\n                window.attachEvent('DOMContentLoaded', yaftInit);\n            }\n                        window.addEventListener('load', function() {\n                if (YMedia && YMedia.Af && YMedia.Af.Event && YMedia.Af.Event.on) {\n                    YMedia.Af.Event.on('modal:show', function() {\n                        window.YAFT.updateConfig({modulesAft2Container:[\"hl-viewer\"]});\n                    });\n\n                    YMedia.Af.Event.on('modal:hide', function() {\n                       var self = this, w = window;\n                       w.YAFT.updateConfig({modulesAft2Container:[\"atomic\"]});\n                       w.YAFT.AFT2.start();\n                       setTimeout(function() {\n                           w.YAFT.AFT2.setAFT2StartRender();\n                       }, 100);\n\n                       setTimeout(function() {\n                           w.YAFT.AFT2.end(window.aft2CB.bind(self));\n                       }, 1000);\n                    });\n                }\n            });\n\n      </script><script type=\"text/javascript\">\n    function _daTRK() {\n        var daTrk = '-1';\n        var daFr = 0;\n        var cExpiry = 0;\n        if (window.pageloadNonCollapsedAds && window.pageloadNonCollapsedAds.length > 0) {\n        daTrk = '0';\n        for (i = 0; i < window.pageloadNonCollapsedAds.length; i++) {\n            var daTRKDiv = document.getElementById(\"my-ads\" + pageloadNonCollapsedAds[i]);\n            if (daTRKDiv && daTRKDiv.offsetHeight === 0) {\n                daTrk = '1';\n                cExpiry = 10080;\n                break;\n            }\n        }\n    }\n    else {\n        var daTRKDiv = document.getElementById(\"my-adsFPAD\");\n        if (daTRKDiv) {\n            daTrk = '0';\n            if (daTRKDiv.offsetHeight === 0) {\n                cExpiry = 10080;\n                    daTrk = '1';\n                }\n            }   \n        }\n        if (daFr || '1' === daTrk) {\n            window.thamba = 1;\n        }\n        var expires = new Date();\n        expires.setMinutes(expires.getMinutes() + cExpiry);\n        window.wafer.utils.setCookie('thamba', daTrk, {expires: expires, domain: location.hostname});\n        if (typeof window.thamba != 'undefined') {\n                    var DPba=new function(){this.detect=function(px,callback){var detected=false;var checksRemain=2;var error1=false;var error2=false;if(typeof callback!=\"function\")return;px+=\"?ch=*&rn=*\";function beforeCheck(callback,timeout){if(checksRemain==0|| timeout>1E3)callback(checksRemain==0&&detected);else setTimeout(function(){beforeCheck(callback,timeout*2)},timeout*2)}function checkImages(){if(--checksRemain)return;detected=!error1&&error2}var random=Math.random()*11;var img1=new Image;img1.onload=checkImages;img1.onerror=function(){error1=true;checkImages()};img1.src=px.replace(/\\*/,1).replace(/\\*/,random);var img2=new Image;img2.onload=checkImages;img2.onerror=function(){error2=true;checkImages()};img2.src=px.replace(/\\*/,2).replace(/\\*/,random);beforeCheck(callback,250)}}; \n        DPba.detect(\"/px.gif\", function(usesABP) {\n            if (usesABP) {\n                var expires = new Date();\n                expires.setMinutes(expires.getMinutes() + 10080);\n                window.wafer.utils.setCookie('thamba', '2', {expires: expires, domain: location.hostname});\n            }\n        });\n        }\n    }\n    window.wafer && window.wafer.ready(function () {\n        setTimeout(function() {window._daTRK()}, 300);\n    });\n\n</script><script>var fsbeacon = new Image();\nfsbeacon.src = '//geo.yahoo.com/b?s=1197757129&t=' + new Date().getTime() + '&err_url=' + encodeURIComponent(document.URL) + '&err=&test=fsb';\nvar fsbcn = new Image();\nfsbcn.src = '//fsbcn.fp.yahoo.com/p?s=1197757129&t=' + new Date().getTime() + '&err_url=' + encodeURIComponent(document.URL) + '&err=&test=fsb';</script></body></html>\n"
          },
          "redirectURL": "",
          "headersSize": 289,
          "bodySize": 38409
        },
        "cache": {},
        "timings": {
          "blocked": 0,
          "dns": 0,
          "connect": 0,
          "ssl": 0,
          "send": 0,
          "wait": 10753,
          "receive": 0
        },
        "time": 10753,
        "_securityState": "insecure",
        "serverIPAddress": "127.0.0.1",
        "connection": "8080"
      },
      {
        "pageref": "page_9",
        "startedDateTime": "2020-07-06T13:04:17.556+02:00",
        "request": {
          "bodySize": 0,
          "method": "GET",
          "url": "https://s.yimg.com/rz/p/yahoo_frontpage_en-US_s_f_p_205x58_frontpage_2x.png",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "Host",
              "value": "s.yimg.com"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:77.0) Gecko/20100101 Firefox/77.0"
            },
            {
              "name": "Accept",
              "value": "image/webp,*/*"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8080/uncarbonize/100/0/https%3A%2F%2Ffr.yahoo.com%2F%3Fp%3Dus"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "TE",
              "value": "Trailers"
            }
          ],
          "cookies": [],
          "queryString": [],
          "headersSize": 431
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "x-amz-id-2",
              "value": "8gZvq1QJkT4i36kuXs6iVr5ixXyrlBT2URFa4j1k19T4gPoLmcldEM61ispwbxFL4Gm7Ko/gLsc="
            },
            {
              "name": "x-amz-request-id",
              "value": "D5414D3F51422BA5"
            },
            {
              "name": "date",
              "value": "Mon, 06 Jul 2020 06:14:00 GMT"
            },
            {
              "name": "last-modified",
              "value": "Sun, 05 Jul 2020 21:33:49 GMT"
            },
            {
              "name": "x-amz-server-side-encryption",
              "value": "AES256"
            },
            {
              "name": "cache-control",
              "value": "public,max-age=86400"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "content-type",
              "value": "image/png"
            },
            {
              "name": "content-length",
              "value": "2255"
            },
            {
              "name": "server",
              "value": "ATS"
            },
            {
              "name": "referrer-policy",
              "value": "no-referrer-when-downgrade"
            },
            {
              "name": "vary",
              "value": "Origin"
            },
            {
              "name": "etag",
              "value": "\"d798d33d3961f3d8fe0410ede7e6dc77\""
            },
            {
              "name": "expires",
              "value": "Mon, 06 Jul 2020 23:00:00 GMT"
            },
            {
              "name": "age",
              "value": "17419"
            },
            {
              "name": "ats-carp-promotion",
              "value": "1"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=15552000"
            },
            {
              "name": "expect-ct",
              "value": "max-age=31536000, report-uri=\"http://csp.yahoo.com/beacon/csp?src=yahoocom-expect-ct-report-only\""
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "X-Firefox-Spdy",
              "value": "h2"
            }
          ],
          "cookies": [],
          "content": {
            "mimeType": "image/png",
            "size": 2255,
            "encoding": "base64",
            "text": "iVBORw0KGgoAAAANSUhEUgAAAZoAAAB0CAMAAACL4QQXAAAAJ1BMVEVHcExgAdNoDNpiBdRgAdNgAdJgAdNhA9NhAtNgAdJtHOBgAdJgAdKDYO6sAAAADHRSTlMAlxMudda2TV30CeetQppRAAAIS0lEQVR42u1dbXPuKAgVEXz9/793Z2+709k2gkRzzXQ8029pEuUAQU7M494HTFfw7jciph6KeyGgXSH+SmZaD+QONVvBrYdwqNkK33rI/lCzFaH1AO5QsxOlth7wUHOKgEONrQhIh5qtwNZDLoearQChCDjU7ETJrQc81GxFaj2wO9RsBbUe0qHmpUVALYealxYBwR1qdsLn1oM/1Ly0fcbuUPPSIiAeak777FBj1NAONUdDO9RcoEga2qHmaGiHGlP7jNyh5mhoh5qXa2ilLKemeMs1lXPXX+X9GlqJgSn/8QeCgEuoKfh5zUoMsdhGA1w/hlOJQ/T3nD7B56RaJoaAT2loAa7hBES4RPg2hPQ9p1bAz9nBFcoANQj/n1jmNMYOBmo/QIBWX+P6Mw1x8k9oaHCjlcPiQvbLhhcA38+2XqWmXB2jqFs0UeugBtms4py+wHG9hubtDVDUF7K+O4kc7lMTa2esqKzwapMwGDqRmwRKyzU0NssGoJKZJFsQ3qOmQOshS8ZNtSnIUHSLctNAuFhDi9Y+W6nKM6wos6h4ixqWjBu7JqU2gKrlo5DbAKCs1dCoM1pjQ5vGjZGTnZoETUTHtqljCZtVPbcxVFyqoQVjIcDyMwxrU5Ht1JB2SS9mDx3Uz+CxtmGklRpayZZCoHh5IYtDbipTo0AdrphZ7R4fTVMKKzU00P1QDzKQY2aeGrtNCrW2gJvUbICFGhqa+BeLgEJtGzXZd2Jmjpto95GFGhobQiyK6QTaPmpakGZlf97cT9Bhtn2mOwZai4DUdlJDauK1P7D8rQSN6zS0OsyklxaymLdS06KWpe0Oz+0Oql+moYVh+SBIM+K2lxq2lgB687fdAyzT0HwePYGECaW2mZo8b9NGgl0MiMs0NFDHqRcBhXZT09Dw8Jb9d3YotExDw8GHEwg+ktp2apLFpnr/F9t9pGX70GiITZ8FF6H91IBUrNiNCu0+aNk+tKS4kF4ERLVv9jw1JNjUblTfZhDN7TNjxZ0GLp69Yg6C6J0rPkKdo6ZCigmof9x9QHADDhExJs76EyvIA8GYAgk3Mmhot5rVPHBxkBMpJUFwtFCTgyaOZaW3kv+ozUVR2EDzcsYRhc0vegW9+IEbgOBlcVAI8XyXmox690Q2AvuhgqkW0cvzp6tpIkiwaWhT72IUqQiA4X4wqNTouTWJl8iDalkSM1oY7IF6khPO/D60qObBJJmMxmOVb1HDw0tfFC4w3dvI6Ab7bFlohhlfTCXtRBIWssXgEL7eoSaOGBX7x6gMLwJZyBHJudHuNNo0NHv9zFoRIB0UxCmBGr2VUaT7gUyt/gCo/RmRoZmSlu1DK1nWeECyfjL1H0ihRo+/IgyGDL4J3ZFEhWCdYVi3Dw1EVkuWTBZMWTRo1OgsCzkkG3wTO5fpjLFaaii2ts/MjTSSiwDh1lm4k5WaMCQxYddB0RLAqTcMsDwMaOE+NJZOZrGAY1tVmKepIRs11ZQqknDgEqhQ40MKnb+p3ewghFQQqBFilR6MGjSVQdC7GRsytOoO86j94giEqspODT8YNWgK4GCiBi1pIP+FL6ekbrJktyFq3khNe4oaXY+J0jrQ/qypJ6EZIK9dWFmAsckepf3tMiAXS2pNAmeXiGPTL+s354LXFrJgaqnGJ6kpliVWyb1/BkseCOo/f+xAzZUDLt3SXkFbyAbTKzzw5LrGVcvbkd3LJEvwkXLLSKYdjvPvXoN2HumPtPVR43j6neLSJS0YCA5djYr93OdTdKCaCZMeNOupgfGGSOx7lFcShT6Y2N8LRjhTP+sgvadVvWqP9QktyY6kq2Ag3IHHbeYFyaDiqk91GZreqkqCtT0bNb6JbqJv80hit9e4g9JXwTA2sPldOmkimbzCzHpqHI1Jx56bonPomVH/PxYOG4GmIkA/rUZh3+vyhCa/+BGK+1Y1Se4uvFDzBQ+yrhxXfvqMbEWArn1zLNJXL9ZHDfYjPeCnRZMuO/b/A2JRv79RFWtmfqx+ZsNm48whpRA4t/YwNbp3EQMwyePQDZGJgbmqSSU24+4AXYjWEe8mwmcT2vzuOB5aSGhGyqg6bJxopEmot+qHx6NGMqo5UYd5guW4MgPvbSVN76HGhUmbzjOM+lKEVzXS9M4lvSKhzW6SR4O3qRGBq6mJTQULp+2MmumxwBJvq35gGORugO5tv+b91JgemPoiHfPE9qm1USOlap1wX7cnNKU9Zna5MBF6GjUwLUQb1L64PWo0hzfPi6dCr4g3mxCi7aul8B5qXJx70NwvKCqOMYsTQrQ9FAtvTmhT1Tw7JwsHQ8g45qt1Soi28+1pb9TMxDCX6/16dJ8Zh1o+syPdLS087aVGaHMrAOOUxpQHWP8bj3WgNLztZPx4QrN/mjEIc4Lbn+0qPitGtCOoGtr95w3js1Gjy2VWsT7l2/wmMUYX18+g0pqVzPE8NV9IdcVXgJFv8wtG/VkHSM+EiYnk8Oj+mp/woEex0xGpyajBuTJoSZ5hpuBUfyGSsHf/0ai5JCerxMySQ6EMp8MMbg40pwBF7vw0w7PUXKMk7lkU3TgQakfFlY3iQfIFO8LsSsknztc/SVL8FcSDXz4p/Zc4GvhG5633j+MPGZ0glmFbZMs97Z/fsABjAGAACNG77fCYAgAzQJgYT8EY4L9ZYRk86d/zsDgL7D+FcrAZ0Kt8D176g/joDjYj9DS0g92gXufnYDNiV0M72Aw+RcBLge0UAXth/xHBg80o9RQBW2H/IPcpAt5aOQd38NIi4LTPtoNPEfBS+K6GdnDaZwfXqKcIeCni0dBO++zgtM9+CeAUAW9FvMYJmoODT/wD1RhTp++BsoYAAAAASUVORK5CYII="
          },
          "redirectURL": "",
          "headersSize": 800,
          "bodySize": 3055
        },
        "cache": {},
        "timings": {
          "blocked": 0,
          "dns": 0,
          "connect": 0,
          "ssl": 0,
          "send": 0,
          "wait": 13,
          "receive": 0
        },
        "time": 13,
        "_securityState": "secure",
        "serverIPAddress": "77.238.180.12",
        "connection": "443"
      },
      {
        "pageref": "page_9",
        "startedDateTime": "2020-07-06T13:04:17.557+02:00",
        "request": {
          "bodySize": 0,
          "method": "GET",
          "url": "https://s.yimg.com/uu/api/res/1.2/Etfh.sXwjl2QvtUqZbHAXg--~B/Zmk9c3RyaW07aD0zODg7cT05NTt3PTcyMDthcHBpZD15dGFjaHlvbg--/https://s.yimg.com/os/creatr-uploaded-images/2020-07/223d7230-bf07-11ea-bddf-4c116a864c50.cf.jpg",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "Host",
              "value": "s.yimg.com"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:77.0) Gecko/20100101 Firefox/77.0"
            },
            {
              "name": "Accept",
              "value": "image/webp,*/*"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8080/uncarbonize/100/0/https%3A%2F%2Ffr.yahoo.com%2F%3Fp%3Dus"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "TE",
              "value": "Trailers"
            }
          ],
          "cookies": [],
          "queryString": [],
          "headersSize": 570
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "date",
              "value": "Sun, 05 Jul 2020 21:42:16 GMT"
            },
            {
              "name": "p3p",
              "value": "policyref=\"https://policies.yahoo.com/w3c/p3p.xml\", CP=\"CAO DSP COR CUR ADM DEV TAI PSA PSD IVAi IVDi CONi TELo OTPi OUR DELi SAMi OTRi UNRi PUBi IND PHY ONL UNI PUR FIN COM NAV INT DEM CNT STA POL HEA PRE LOC GOV\""
            },
            {
              "name": "x-server-time-fetchimage",
              "value": "64148"
            },
            {
              "name": "content-disposition",
              "value": "inline; filename=223d7230-bf07-11ea-bddf-4c116a864c50.cf.jpg"
            },
            {
              "name": "cache-control",
              "value": "public, max-age=604800"
            },
            {
              "name": "etag",
              "value": "\"daa7f7b3918c8b8f9bb697fc7132fe88\""
            },
            {
              "name": "last-modified",
              "value": "Sun, 05 Jul 2020 21:33:15 GMT"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "x-server-processor",
              "value": "opencv"
            },
            {
              "name": "x-server-time-process",
              "value": "597492"
            },
            {
              "name": "x-server-time-total",
              "value": "661934"
            },
            {
              "name": "content-length",
              "value": "114338"
            },
            {
              "name": "x-image-width",
              "value": "720"
            },
            {
              "name": "x-image-height",
              "value": "388"
            },
            {
              "name": "content-type",
              "value": "image/jpeg"
            },
            {
              "name": "age",
              "value": "48121"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=15552000"
            },
            {
              "name": "server",
              "value": "ATS"
            },
            {
              "name": "referrer-policy",
              "value": "no-referrer-when-downgrade"
            },
            {
              "name": "ats-carp-promotion",
              "value": "1"
            },
            {
              "name": "expect-ct",
              "value": "max-age=31536000, report-uri=\"http://csp.yahoo.com/beacon/csp?src=yahoocom-expect-ct-report-only\""
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "X-Firefox-Spdy",
              "value": "h2"
            }
          ],
          "cookies": [],
          "content": {
            "mimeType": "image/jpeg",
            "size": 114338,
            "encoding": "base64",
            "text": ""
          },
          "redirectURL": "",
          "headersSize": 1063,
          "bodySize": 115401
        },
        "cache": {},
        "timings": {
          "blocked": 0,
          "dns": 0,
          "connect": 0,
          "ssl": 0,
          "send": 0,
          "wait": 13,
          "receive": 23
        },
        "time": 36,
        "_securityState": "secure",
        "serverIPAddress": "77.238.180.12",
        "connection": "443"
      },
      {
        "pageref": "page_9",
        "startedDateTime": "2020-07-06T13:04:17.557+02:00",
        "request": {
          "bodySize": 0,
          "method": "GET",
          "url": "https://s.yimg.com/uu/api/res/1.2/u5_0Cqum3nsg0fHXXUbabg--~B/Zmk9c3RyaW07aD0xNjA7cT04MDt3PTM0MDthcHBpZD15dGFjaHlvbg--/https://s.yimg.com/os/creatr-uploaded-images/2020-07/1a073fb0-bf6b-11ea-bf7f-5bed266388d9.cf.jpg",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "Host",
              "value": "s.yimg.com"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:77.0) Gecko/20100101 Firefox/77.0"
            },
            {
              "name": "Accept",
              "value": "image/webp,*/*"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8080/uncarbonize/100/0/https%3A%2F%2Ffr.yahoo.com%2F%3Fp%3Dus"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "TE",
              "value": "Trailers"
            }
          ],
          "cookies": [],
          "queryString": [],
          "headersSize": 570
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "date",
              "value": "Mon, 06 Jul 2020 09:37:22 GMT"
            },
            {
              "name": "p3p",
              "value": "policyref=\"https://policies.yahoo.com/w3c/p3p.xml\", CP=\"CAO DSP COR CUR ADM DEV TAI PSA PSD IVAi IVDi CONi TELo OTPi OUR DELi SAMi OTRi UNRi PUBi IND PHY ONL UNI PUR FIN COM NAV INT DEM CNT STA POL HEA PRE LOC GOV\""
            },
            {
              "name": "x-server-time-fetchimage",
              "value": "57351"
            },
            {
              "name": "content-disposition",
              "value": "inline; filename=1a073fb0-bf6b-11ea-bf7f-5bed266388d9.cf.jpg"
            },
            {
              "name": "cache-control",
              "value": "public, max-age=604800"
            },
            {
              "name": "etag",
              "value": "\"ad11dbb36ffcc5e8ab9575104033af01\""
            },
            {
              "name": "last-modified",
              "value": "Mon, 06 Jul 2020 09:29:04 GMT"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "x-server-processor",
              "value": "opencv"
            },
            {
              "name": "x-server-time-process",
              "value": "745520"
            },
            {
              "name": "x-server-time-total",
              "value": "803329"
            },
            {
              "name": "content-length",
              "value": "11297"
            },
            {
              "name": "x-image-width",
              "value": "340"
            },
            {
              "name": "x-image-height",
              "value": "160"
            },
            {
              "name": "content-type",
              "value": "image/jpeg"
            },
            {
              "name": "age",
              "value": "5217"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=15552000"
            },
            {
              "name": "server",
              "value": "ATS"
            },
            {
              "name": "referrer-policy",
              "value": "no-referrer-when-downgrade"
            },
            {
              "name": "expect-ct",
              "value": "max-age=31536000, report-uri=\"http://csp.yahoo.com/beacon/csp?src=yahoocom-expect-ct-report-only\""
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "X-Firefox-Spdy",
              "value": "h2"
            }
          ],
          "cookies": [],
          "content": {
            "mimeType": "image/jpeg",
            "size": 11297,
            "encoding": "base64",
            "text": ""
          },
          "redirectURL": "",
          "headersSize": 1038,
          "bodySize": 12335
        },
        "cache": {},
        "timings": {
          "blocked": 0,
          "dns": 0,
          "connect": 0,
          "ssl": 0,
          "send": 0,
          "wait": 36,
          "receive": 0
        },
        "time": 36,
        "_securityState": "secure",
        "serverIPAddress": "77.238.180.12",
        "connection": "443"
      },
      {
        "pageref": "page_9",
        "startedDateTime": "2020-07-06T13:04:17.558+02:00",
        "request": {
          "bodySize": 0,
          "method": "GET",
          "url": "https://s.yimg.com/uu/api/res/1.2/2lcdhwypbdDkG6gJ9WHLBA--~B/Zmk9c3RyaW07aD0xNjA7cT04MDt3PTM0MDthcHBpZD15dGFjaHlvbg--/https://s.yimg.com/os/creatr-uploaded-images/2020-07/c56ada80-bf73-11ea-a6fb-00254fa87025.cf.jpg",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "Host",
              "value": "s.yimg.com"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:77.0) Gecko/20100101 Firefox/77.0"
            },
            {
              "name": "Accept",
              "value": "image/webp,*/*"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8080/uncarbonize/100/0/https%3A%2F%2Ffr.yahoo.com%2F%3Fp%3Dus"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "TE",
              "value": "Trailers"
            }
          ],
          "cookies": [],
          "queryString": [],
          "headersSize": 570
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "date",
              "value": "Mon, 06 Jul 2020 10:36:01 GMT"
            },
            {
              "name": "p3p",
              "value": "policyref=\"https://policies.yahoo.com/w3c/p3p.xml\", CP=\"CAO DSP COR CUR ADM DEV TAI PSA PSD IVAi IVDi CONi TELo OTPi OUR DELi SAMi OTRi UNRi PUBi IND PHY ONL UNI PUR FIN COM NAV INT DEM CNT STA POL HEA PRE LOC GOV\""
            },
            {
              "name": "x-server-time-fetchimage",
              "value": "30012"
            },
            {
              "name": "content-disposition",
              "value": "inline; filename=c56ada80-bf73-11ea-a6fb-00254fa87025.cf.jpg"
            },
            {
              "name": "cache-control",
              "value": "public, max-age=604800"
            },
            {
              "name": "etag",
              "value": "\"9631253d5415a01bb9239ddbf0b4363b\""
            },
            {
              "name": "last-modified",
              "value": "Mon, 06 Jul 2020 10:30:55 GMT"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "x-server-processor",
              "value": "opencv"
            },
            {
              "name": "x-server-time-process",
              "value": "281839"
            },
            {
              "name": "x-server-time-total",
              "value": "312465"
            },
            {
              "name": "content-length",
              "value": "9544"
            },
            {
              "name": "x-image-width",
              "value": "340"
            },
            {
              "name": "x-image-height",
              "value": "160"
            },
            {
              "name": "content-type",
              "value": "image/jpeg"
            },
            {
              "name": "age",
              "value": "1696"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=15552000"
            },
            {
              "name": "server",
              "value": "ATS"
            },
            {
              "name": "referrer-policy",
              "value": "no-referrer-when-downgrade"
            },
            {
              "name": "expect-ct",
              "value": "max-age=31536000, report-uri=\"http://csp.yahoo.com/beacon/csp?src=yahoocom-expect-ct-report-only\""
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "X-Firefox-Spdy",
              "value": "h2"
            }
          ],
          "cookies": [],
          "content": {
            "mimeType": "image/jpeg",
            "size": 9544,
            "encoding": "base64",
            "text": ""
          },
          "redirectURL": "",
          "headersSize": 1037,
          "bodySize": 10581
        },
        "cache": {},
        "timings": {
          "blocked": 0,
          "dns": 0,
          "connect": 0,
          "ssl": 0,
          "send": 0,
          "wait": 36,
          "receive": 0
        },
        "time": 36,
        "_securityState": "secure",
        "serverIPAddress": "77.238.180.12",
        "connection": "443"
      },
      {
        "pageref": "page_9",
        "startedDateTime": "2020-07-06T13:04:17.558+02:00",
        "request": {
          "bodySize": 0,
          "method": "GET",
          "url": "https://s.yimg.com/uu/api/res/1.2/Y8tc1.miOyKAnCNpazUvZA--~B/Zmk9c3RyaW07aD0xNjA7cT04MDt3PTM0MDthcHBpZD15dGFjaHlvbg--/https://s.yimg.com/os/creatr-uploaded-images/2020-07/0f445e00-bf02-11ea-bfff-a2b722f24cdd.cf.jpg",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "Host",
              "value": "s.yimg.com"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:77.0) Gecko/20100101 Firefox/77.0"
            },
            {
              "name": "Accept",
              "value": "image/webp,*/*"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8080/uncarbonize/100/0/https%3A%2F%2Ffr.yahoo.com%2F%3Fp%3Dus"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "TE",
              "value": "Trailers"
            }
          ],
          "cookies": [],
          "queryString": [],
          "headersSize": 570
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "date",
              "value": "Sun, 05 Jul 2020 21:11:55 GMT"
            },
            {
              "name": "p3p",
              "value": "policyref=\"https://policies.yahoo.com/w3c/p3p.xml\", CP=\"CAO DSP COR CUR ADM DEV TAI PSA PSD IVAi IVDi CONi TELo OTPi OUR DELi SAMi OTRi UNRi PUBi IND PHY ONL UNI PUR FIN COM NAV INT DEM CNT STA POL HEA PRE LOC GOV\""
            },
            {
              "name": "x-server-time-fetchimage",
              "value": "83706"
            },
            {
              "name": "content-disposition",
              "value": "inline; filename=0f445e00-bf02-11ea-bfff-a2b722f24cdd.cf.jpg"
            },
            {
              "name": "cache-control",
              "value": "public, max-age=604800"
            },
            {
              "name": "etag",
              "value": "\"7d23fd4af31a2fdb4365cfa95ff3bb97\""
            },
            {
              "name": "last-modified",
              "value": "Sun, 05 Jul 2020 20:56:56 GMT"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "x-server-processor",
              "value": "opencv"
            },
            {
              "name": "x-server-time-process",
              "value": "651582"
            },
            {
              "name": "x-server-time-total",
              "value": "735694"
            },
            {
              "name": "content-length",
              "value": "12636"
            },
            {
              "name": "x-image-width",
              "value": "340"
            },
            {
              "name": "x-image-height",
              "value": "160"
            },
            {
              "name": "content-type",
              "value": "image/jpeg"
            },
            {
              "name": "age",
              "value": "49944"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=15552000"
            },
            {
              "name": "server",
              "value": "ATS"
            },
            {
              "name": "referrer-policy",
              "value": "no-referrer-when-downgrade"
            },
            {
              "name": "expect-ct",
              "value": "max-age=31536000, report-uri=\"http://csp.yahoo.com/beacon/csp?src=yahoocom-expect-ct-report-only\""
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "X-Firefox-Spdy",
              "value": "h2"
            }
          ],
          "cookies": [],
          "content": {
            "mimeType": "image/jpeg",
            "size": 12636,
            "encoding": "base64",
            "text": ""
          },
          "redirectURL": "",
          "headersSize": 1039,
          "bodySize": 13675
        },
        "cache": {},
        "timings": {
          "blocked": 0,
          "dns": 0,
          "connect": 0,
          "ssl": 0,
          "send": 0,
          "wait": 36,
          "receive": 0
        },
        "time": 36,
        "_securityState": "secure",
        "serverIPAddress": "77.238.180.12",
        "connection": "443"
      },
      {
        "pageref": "page_9",
        "startedDateTime": "2020-07-06T13:04:17.558+02:00",
        "request": {
          "bodySize": 0,
          "method": "GET",
          "url": "https://s.yimg.com/uu/api/res/1.2/p.j5h0UJK836M8KbmF4xcQ--~B/Zmk9c3RyaW07aD0yNDY7cT04MDt3PTQ0MDthcHBpZD15dGFjaHlvbg--/https://media.zenfs.com/fr/voici.fr/3003eea0a2f2d091a3bb698eb69d4413.cf.jpg",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "Host",
              "value": "s.yimg.com"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:77.0) Gecko/20100101 Firefox/77.0"
            },
            {
              "name": "Accept",
              "value": "image/webp,*/*"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8080/uncarbonize/100/0/https%3A%2F%2Ffr.yahoo.com%2F%3Fp%3Dus"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "TE",
              "value": "Trailers"
            }
          ],
          "cookies": [],
          "queryString": [],
          "headersSize": 549
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "date",
              "value": "Sun, 05 Jul 2020 10:36:23 GMT"
            },
            {
              "name": "p3p",
              "value": "policyref=\"https://policies.yahoo.com/w3c/p3p.xml\", CP=\"CAO DSP COR CUR ADM DEV TAI PSA PSD IVAi IVDi CONi TELo OTPi OUR DELi SAMi OTRi UNRi PUBi IND PHY ONL UNI PUR FIN COM NAV INT DEM CNT STA POL HEA PRE LOC GOV\""
            },
            {
              "name": "x-server-time-fetchimage",
              "value": "27895"
            },
            {
              "name": "content-disposition",
              "value": "inline; filename=3003eea0a2f2d091a3bb698eb69d4413.cf.jpg"
            },
            {
              "name": "cache-control",
              "value": "max-age=2592000, no-transform, public"
            },
            {
              "name": "etag",
              "value": "\"de75fc790ab6ceab72c5343239366b23\""
            },
            {
              "name": "last-modified",
              "value": "Sun, 05 Jul 2020 10:32:05 GMT"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "x-server-processor",
              "value": "opencv"
            },
            {
              "name": "x-server-time-process",
              "value": "426625"
            },
            {
              "name": "x-server-time-total",
              "value": "454923"
            },
            {
              "name": "content-length",
              "value": "14998"
            },
            {
              "name": "x-image-width",
              "value": "440"
            },
            {
              "name": "x-image-height",
              "value": "246"
            },
            {
              "name": "content-type",
              "value": "image/jpeg"
            },
            {
              "name": "age",
              "value": "88074"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=15552000"
            },
            {
              "name": "server",
              "value": "ATS"
            },
            {
              "name": "referrer-policy",
              "value": "no-referrer-when-downgrade"
            },
            {
              "name": "expect-ct",
              "value": "max-age=31536000, report-uri=\"http://csp.yahoo.com/beacon/csp?src=yahoocom-expect-ct-report-only\""
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "X-Firefox-Spdy",
              "value": "h2"
            }
          ],
          "cookies": [],
          "content": {
            "mimeType": "image/jpeg",
            "size": 14998,
            "encoding": "base64",
            "text": ""
          },
          "redirectURL": "",
          "headersSize": 1050,
          "bodySize": 16048
        },
        "cache": {},
        "timings": {
          "blocked": 0,
          "dns": 0,
          "connect": 0,
          "ssl": 0,
          "send": 0,
          "wait": 35,
          "receive": 0
        },
        "time": 35,
        "_securityState": "secure",
        "serverIPAddress": "77.238.180.12",
        "connection": "443"
      },
      {
        "pageref": "page_9",
        "startedDateTime": "2020-07-06T13:04:17.559+02:00",
        "request": {
          "bodySize": 0,
          "method": "GET",
          "url": "https://s.yimg.com/g/images/spaceball.gif",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "Host",
              "value": "s.yimg.com"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:77.0) Gecko/20100101 Firefox/77.0"
            },
            {
              "name": "Accept",
              "value": "image/webp,*/*"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8080/uncarbonize/100/0/https%3A%2F%2Ffr.yahoo.com%2F%3Fp%3Dus"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "TE",
              "value": "Trailers"
            }
          ],
          "cookies": [],
          "queryString": [],
          "headersSize": 397
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "date",
              "value": "Sun, 15 Mar 2020 17:43:16 GMT"
            },
            {
              "name": "content-type",
              "value": "image/gif"
            },
            {
              "name": "content-length",
              "value": "43"
            },
            {
              "name": "server",
              "value": "ATS"
            },
            {
              "name": "last-modified",
              "value": "Fri, 13 Mar 2020 21:54:39 GMT"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "expires",
              "value": "Mon, 28 Jul 2014 23:30:00 GMT"
            },
            {
              "name": "cache-control",
              "value": "max-age=315360000"
            },
            {
              "name": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "name": "referrer-policy",
              "value": "no-referrer-when-downgrade"
            },
            {
              "name": "age",
              "value": "9739261"
            },
            {
              "name": "ats-carp-promotion",
              "value": "1"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=15552000"
            },
            {
              "name": "expect-ct",
              "value": "max-age=31536000, report-uri=\"http://csp.yahoo.com/beacon/csp?src=yahoocom-expect-ct-report-only\""
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "X-Firefox-Spdy",
              "value": "h2"
            }
          ],
          "cookies": [],
          "content": {
            "mimeType": "image/gif",
            "size": 43,
            "encoding": "base64",
            "text": "R0lGODlhAQABAIAAAP///wAAACH5BAEAAAAALAAAAAABAAEAAAICRAEAOw=="
          },
          "redirectURL": "",
          "headersSize": 606,
          "bodySize": 649
        },
        "cache": {},
        "timings": {
          "blocked": 0,
          "dns": 0,
          "connect": 0,
          "ssl": 0,
          "send": 0,
          "wait": 35,
          "receive": 0
        },
        "time": 35,
        "_securityState": "secure",
        "serverIPAddress": "77.238.180.12",
        "connection": "443"
      },
      {
        "pageref": "page_9",
        "startedDateTime": "2020-07-06T13:04:18.205+02:00",
        "request": {
          "bodySize": 0,
          "method": "GET",
          "url": "https://s.yimg.com/aaq/vzm/cs_1.1.2.js",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "Host",
              "value": "s.yimg.com"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:77.0) Gecko/20100101 Firefox/77.0"
            },
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8080/uncarbonize/100/0/https%3A%2F%2Ffr.yahoo.com%2F%3Fp%3Dus"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "TE",
              "value": "Trailers"
            }
          ],
          "cookies": [],
          "queryString": [],
          "headersSize": 383
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "x-amz-id-2",
              "value": "pTvkWeEia4SxHqlMHW40ZqefacNTfVFv2o4pnN9OvIHasBPk973eow0ykJ88Qh1I6cjO27yn4N4="
            },
            {
              "name": "x-amz-request-id",
              "value": "3469BBC56469CC95"
            },
            {
              "name": "date",
              "value": "Fri, 15 May 2020 14:55:45 GMT"
            },
            {
              "name": "last-modified",
              "value": "Thu, 14 May 2020 17:11:38 GMT"
            },
            {
              "name": "etag",
              "value": "\"03f92d05a5b026da865c734b85035c2b-df\""
            },
            {
              "name": "x-amz-server-side-encryption",
              "value": "AES256"
            },
            {
              "name": "cache-control",
              "value": "public,max-age=315360000"
            },
            {
              "name": "x-amz-version-id",
              "value": "OiDvqe7R5DJnuII0DVI8tvJJMw.I5l_w"
            },
            {
              "name": "accept-ranges",
              "value": "bytes"
            },
            {
              "name": "content-type",
              "value": "application/javascript"
            },
            {
              "name": "server",
              "value": "ATS"
            },
            {
              "name": "referrer-policy",
              "value": "no-referrer-when-downgrade"
            },
            {
              "name": "vary",
              "value": "Origin, Accept-Encoding"
            },
            {
              "name": "age",
              "value": "4478915"
            },
            {
              "name": "ats-carp-promotion",
              "value": "1"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "content-length",
              "value": "721"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=15552000"
            },
            {
              "name": "expect-ct",
              "value": "max-age=31536000, report-uri=\"http://csp.yahoo.com/beacon/csp?src=yahoocom-expect-ct-report-only\""
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "X-Firefox-Spdy",
              "value": "h2"
            }
          ],
          "cookies": [],
          "content": {
            "mimeType": "application/javascript",
            "size": 1211,
            "text": "!function(){\"use strict\";var n=window,e=n.document;function o(e,o,t,r){if(!e||!o||\"function\"!=typeof n[e])return r();try{n[e](o,t,(function(n,e){r(n,e)}))}catch(n){r()}}n.COMSCORE={_version:\"1.1.2\",beacon:function(n){o(\"__uspapi\",\"getDoNotSell\",1,(function(t,r){o(\"__tcfapi\",\"getTCData\",2,(function(c,s){o(\"__cmp\",s?\"\":\"getVendorConsents\",1,(function(o,i){var p=JSON.parse(JSON.stringify(n||{})),f=c&&c.gdprApplies||o&&o.gdprApplies||!1;if((i||r||s)&&(p.gdpr=f?1:0,p.gdpr_consent=\"\"),f){if(s&&c)p.gdpr_consent=c.tcString||\"\";else if(i&&o&&o.vendorConsents){var a=o.purposeConsents||{};p.cs_ucfr=a[1]&&a[4]&&o.vendorConsents[77]?1:0}}else r&&t&&\"boolean\"==typeof t.doNotSell&&(p.cs_ucfr=t.doNotSell?0:1);p.c7=p.c7||e.location.href,p.c8=p.c8||e.title||\"\",p.c9=p.c9||e.referrer||\"\",p.ns_c=\"UTF-8\",p.ns__t=(new Date).getTime();var u=[];for(var g in p)if(p.hasOwnProperty(g)){var _=p[g],d=typeof _;\"string\"===d||\"number\"===d?u.push(g+\"=\"+encodeURIComponent(_)):\"options\"===g&&_&&\"string\"==typeof _.url_append&&u.push(_.url_append)}(new Image).src=\"https://sb.scorecardresearch.com/p?\"+u.join(\"&\")}))}))}))},purge:function(){for(var e=n._comscore||[];e.length>0;)n.COMSCORE.beacon(e.shift())}},n.COMSCORE.purge()}();\n"
          },
          "redirectURL": "",
          "headersSize": 874,
          "bodySize": 1595
        },
        "cache": {},
        "timings": {
          "blocked": 0,
          "dns": 0,
          "connect": 0,
          "ssl": 0,
          "send": 0,
          "wait": 9,
          "receive": 0
        },
        "time": 9,
        "_securityState": "secure",
        "serverIPAddress": "77.238.180.12",
        "connection": "443"
      },
      {
        "pageref": "page_9",
        "startedDateTime": "2020-07-06T13:04:18.205+02:00",
        "request": {
          "bodySize": 0,
          "method": "GET",
          "url": "https://fsbcn.fp.yahoo.com/p?s=1197757129&t=1594033457546&err_url=http%3A%2F%2F127.0.0.1%3A8080%2Funcarbonize%2F100%2F0%2Fhttps%253A%252F%252Ffr.yahoo.com%252F%253Fp%253Dus&err=&test=fsb",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "Host",
              "value": "fsbcn.fp.yahoo.com"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:77.0) Gecko/20100101 Firefox/77.0"
            },
            {
              "name": "Accept",
              "value": "image/webp,*/*"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8080/uncarbonize/100/0/https%3A%2F%2Ffr.yahoo.com%2F%3Fp%3Dus"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Cookie",
              "value": "B=ejinrldegefmi&b=3&s=t2; A3=d=AQABBAkH-l4CEN-N1EA-vwlunInk3zxBZjMFEgABAQFU-143X-Uzb2UB_iMAAAcI0j4HXav7yuk&S=AQAAArOOARMiNTISzmn0vKo3gZM; GUC=AQABAQFe-1RfN0IlfQVW"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            }
          ],
          "cookies": [
            {
              "name": "B",
              "value": "ejinrldegefmi&b=3&s=t2"
            },
            {
              "name": "A3",
              "value": "d=AQABBAkH-l4CEN-N1EA-vwlunInk3zxBZjMFEgABAQFU-143X-Uzb2UB_iMAAAcI0j4HXav7yuk&S=AQAAArOOARMiNTISzmn0vKo3gZM"
            },
            {
              "name": "GUC",
              "value": "AQABAQFe-1RfN0IlfQVW"
            }
          ],
          "queryString": [
            {
              "name": "s",
              "value": "1197757129"
            },
            {
              "name": "t",
              "value": "1594033457546"
            },
            {
              "name": "err_url",
              "value": "http://127.0.0.1:8080/uncarbonize/100/0/https%3A%2F%2Ffr.yahoo.com%2F%3Fp%3Dus"
            },
            {
              "name": "err",
              "value": ""
            },
            {
              "name": "test",
              "value": "fsb"
            }
          ],
          "headersSize": 714
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "date",
              "value": "Mon, 06 Jul 2020 11:04:18 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "content-length",
              "value": "4"
            },
            {
              "name": "x-amzn-requestid",
              "value": "0529cdb0-ed12-4355-9e0f-02d3e817f8e5"
            },
            {
              "name": "x-amz-apigw-id",
              "value": "PP2_4GbEDoEFrbg="
            },
            {
              "name": "x-amzn-trace-id",
              "value": "Root=1-5f030532-44a3aba47b2075010c85fd57;Sampled=0"
            },
            {
              "name": "X-Firefox-Spdy",
              "value": "h2"
            }
          ],
          "cookies": [],
          "content": {
            "mimeType": "application/json",
            "size": 4,
            "text": "\"OK\""
          },
          "redirectURL": "",
          "headersSize": 284,
          "bodySize": 288
        },
        "cache": {},
        "timings": {
          "blocked": 0,
          "dns": 2,
          "connect": 26,
          "ssl": 109,
          "send": 0,
          "wait": 39,
          "receive": 0
        },
        "time": 176,
        "_securityState": "secure",
        "serverIPAddress": "52.211.88.86",
        "connection": "443"
      },
      {
        "pageref": "page_9",
        "startedDateTime": "2020-07-06T13:04:18.217+02:00",
        "request": {
          "bodySize": 0,
          "method": "GET",
          "url": "https://fr.yahoo.com/tdv2_fp/api/resource/NotificationHistory.getHistory;count=6;imageTag=img%3A40x40%7C2%7C80;lastUpdate=1594033457;lang=fr-FR;region=FR",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "Host",
              "value": "fr.yahoo.com"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:77.0) Gecko/20100101 Firefox/77.0"
            },
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8080/uncarbonize/100/0/https%3A%2F%2Ffr.yahoo.com%2F%3Fp%3Dus"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8080"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "TE",
              "value": "Trailers"
            }
          ],
          "cookies": [],
          "queryString": [],
          "headersSize": 529
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "expect-ct",
              "value": "max-age=31536000, report-uri=\"http://csp.yahoo.com/beacon/csp?src=yahoocom-expect-ct-report-only\""
            },
            {
              "name": "referrer-policy",
              "value": "no-referrer-when-downgrade"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "name": "content-length",
              "value": "1009"
            },
            {
              "name": "etag",
              "value": "W/\"3f1-pzDeVsNcTzqxchRAYw0T00BgeEs\""
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "content-security-policy-report-only",
              "value": "default-src 'self'; report-uri https://csp.yahoo.com/beacon/csp?src=fendr_tdv2-app-fp.fp.yahoo.com"
            },
            {
              "name": "date",
              "value": "Mon, 06 Jul 2020 11:04:17 GMT"
            },
            {
              "name": "x-envoy-upstream-service-time",
              "value": "11"
            },
            {
              "name": "server",
              "value": "ATS"
            },
            {
              "name": "age",
              "value": "1"
            },
            {
              "name": "content-security-policy",
              "value": "frame-ancestors 'self' https://*.techcrunch.com https://*.yahoo.com https://*.aol.com https://*.huffingtonpost.com https://*.oath.com https://*.verizonmedia.com https://*.publishing.oath.com; sandbox allow-forms allow-same-origin allow-scripts allow-popups allow-popups-to-escape-sandbox allow-presentation; report-uri https://csp.yahoo.com/beacon/csp?src=ats&site=frontpage&region=FR&lang=fr-FR&device=desktop&yrid=f8h82tdfg619i&partner=;"
            },
            {
              "name": "set-cookie",
              "value": "B=8kbnk3lfg619i&b=3&s=b0; Max-Age=31557600; Domain=.yahoo.com; Path=/"
            },
            {
              "name": "set-cookie",
              "value": "B=8kbnk3lfg619i&b=3&s=b0; expires=Tue, 06-Jul-2021 11:04:18 GMT; path=/; domain=.yahoo.com"
            },
            {
              "name": "X-Firefox-Spdy",
              "value": "h2"
            }
          ],
          "cookies": [
            {
              "name": "B",
              "value": "8kbnk3lfg619i&b=3&s=b0"
            },
            {
              "name": "B",
              "value": "8kbnk3lfg619i&b=3&s=b0"
            }
          ],
          "content": {
            "mimeType": "application/json; charset=utf-8",
            "size": 0,
            "text": ""
          },
          "redirectURL": "",
          "headersSize": 1337,
          "bodySize": 1337
        },
        "cache": {},
        "timings": {
          "blocked": 0,
          "dns": 0,
          "connect": 0,
          "ssl": 0,
          "send": 0,
          "wait": 74,
          "receive": 0
        },
        "time": 74,
        "_securityState": "secure",
        "serverIPAddress": "87.248.98.7",
        "connection": "443"
      },
      {
        "pageref": "page_9",
        "startedDateTime": "2020-07-06T13:04:18.473+02:00",
        "request": {
          "bodySize": 0,
          "method": "GET",
          "url": "http://127.0.0.1:8080/favicon.ico",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "Host",
              "value": "127.0.0.1:8080"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:77.0) Gecko/20100101 Firefox/77.0"
            },
            {
              "name": "Accept",
              "value": "image/webp,*/*"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Cookie",
              "value": "enwikimwuser-sessionId=b98b31759155513c977d; pv_number=1"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            }
          ],
          "cookies": [
            {
              "name": "enwikimwuser-sessionId",
              "value": "b98b31759155513c977d"
            },
            {
              "name": "pv_number",
              "value": "1"
            }
          ],
          "queryString": [],
          "headersSize": 363
        },
        "response": {
          "status": 404,
          "statusText": "Not Found",
          "httpVersion": "HTTP/1.1",
          "headers": [
            {
              "name": "X-Powered-By",
              "value": "Express"
            },
            {
              "name": "Content-Security-Policy",
              "value": "default-src 'none'"
            },
            {
              "name": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "name": "Content-Type",
              "value": "text/html; charset=utf-8"
            },
            {
              "name": "Content-Length",
              "value": "150"
            },
            {
              "name": "Date",
              "value": "Mon, 06 Jul 2020 11:04:18 GMT"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            }
          ],
          "cookies": [],
          "content": {
            "mimeType": "text/html; charset=utf-8",
            "size": 150,
            "text": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot GET /favicon.ico</pre>\n</body>\n</html>\n"
          },
          "redirectURL": "",
          "headersSize": 249,
          "bodySize": 399
        },
        "cache": {},
        "timings": {
          "blocked": 0,
          "dns": 0,
          "connect": 0,
          "ssl": 0,
          "send": 0,
          "wait": 485,
          "receive": 0
        },
        "time": 485,
        "_securityState": "insecure",
        "serverIPAddress": "127.0.0.1",
        "connection": "8080"
      },
      {
        "pageref": "page_9",
        "startedDateTime": "2020-07-06T13:04:19.362+02:00",
        "request": {
          "bodySize": 0,
          "method": "GET",
          "url": "https://fr.yahoo.com/tdv2_fp/api/resource/NotificationHistory.getHistory;count=6;imageTag=img%3A40x40%7C2%7C80;lastUpdate=1594033457;lang=fr-FR;region=FR",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "Host",
              "value": "fr.yahoo.com"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:77.0) Gecko/20100101 Firefox/77.0"
            },
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8080/uncarbonize/100/0/https%3A%2F%2Ffr.yahoo.com%2F%3Fp%3Dus"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8080"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "TE",
              "value": "Trailers"
            }
          ],
          "cookies": [],
          "queryString": [],
          "headersSize": 529
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "expect-ct",
              "value": "max-age=31536000, report-uri=\"http://csp.yahoo.com/beacon/csp?src=yahoocom-expect-ct-report-only\""
            },
            {
              "name": "referrer-policy",
              "value": "no-referrer-when-downgrade"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "name": "content-length",
              "value": "1009"
            },
            {
              "name": "etag",
              "value": "W/\"3f1-pzDeVsNcTzqxchRAYw0T00BgeEs\""
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "content-security-policy-report-only",
              "value": "default-src 'self'; report-uri https://csp.yahoo.com/beacon/csp?src=fendr_tdv2-app-fp.fp.yahoo.com"
            },
            {
              "name": "date",
              "value": "Mon, 06 Jul 2020 11:04:19 GMT"
            },
            {
              "name": "x-envoy-upstream-service-time",
              "value": "17"
            },
            {
              "name": "server",
              "value": "ATS"
            },
            {
              "name": "age",
              "value": "0"
            },
            {
              "name": "content-security-policy",
              "value": "frame-ancestors 'self' https://*.techcrunch.com https://*.yahoo.com https://*.aol.com https://*.huffingtonpost.com https://*.oath.com https://*.verizonmedia.com https://*.publishing.oath.com; sandbox allow-forms allow-same-origin allow-scripts allow-popups allow-popups-to-escape-sandbox allow-presentation; report-uri https://csp.yahoo.com/beacon/csp?src=ats&site=frontpage&region=FR&lang=fr-FR&device=desktop&yrid=96d78c1fg619j&partner=;"
            },
            {
              "name": "set-cookie",
              "value": "B=4fpm381fg619j&b=3&s=oj; Max-Age=31557600; Domain=.yahoo.com; Path=/"
            },
            {
              "name": "set-cookie",
              "value": "B=4fpm381fg619j&b=3&s=oj; expires=Tue, 06-Jul-2021 11:04:19 GMT; path=/; domain=.yahoo.com"
            },
            {
              "name": "X-Firefox-Spdy",
              "value": "h2"
            }
          ],
          "cookies": [
            {
              "name": "B",
              "value": "4fpm381fg619j&b=3&s=oj"
            },
            {
              "name": "B",
              "value": "4fpm381fg619j&b=3&s=oj"
            }
          ],
          "content": {
            "mimeType": "application/json; charset=utf-8",
            "size": 0,
            "text": ""
          },
          "redirectURL": "",
          "headersSize": 1337,
          "bodySize": 1337
        },
        "cache": {},
        "timings": {
          "blocked": 0,
          "dns": 0,
          "connect": 0,
          "ssl": 0,
          "send": 0,
          "wait": 50,
          "receive": 0
        },
        "time": 50,
        "_securityState": "secure",
        "serverIPAddress": "87.248.98.7",
        "connection": "443"
      },
      {
        "pageref": "page_9",
        "startedDateTime": "2020-07-06T13:04:20.478+02:00",
        "request": {
          "bodySize": 0,
          "method": "GET",
          "url": "https://fr.yahoo.com/tdv2_fp/api/resource/NotificationHistory.getHistory;count=6;imageTag=img%3A40x40%7C2%7C80;lastUpdate=1594033457;lang=fr-FR;region=FR",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "Host",
              "value": "fr.yahoo.com"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:77.0) Gecko/20100101 Firefox/77.0"
            },
            {
              "name": "Accept",
              "value": "*/*"
            },
            {
              "name": "Accept-Language",
              "value": "en-US,en;q=0.5"
            },
            {
              "name": "Accept-Encoding",
              "value": "gzip, deflate, br"
            },
            {
              "name": "Referer",
              "value": "http://127.0.0.1:8080/uncarbonize/100/0/https%3A%2F%2Ffr.yahoo.com%2F%3Fp%3Dus"
            },
            {
              "name": "Origin",
              "value": "http://127.0.0.1:8080"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Pragma",
              "value": "no-cache"
            },
            {
              "name": "Cache-Control",
              "value": "no-cache"
            },
            {
              "name": "TE",
              "value": "Trailers"
            }
          ],
          "cookies": [],
          "queryString": [],
          "headersSize": 529
        },
        "response": {
          "status": 200,
          "statusText": "OK",
          "httpVersion": "HTTP/2",
          "headers": [
            {
              "name": "expect-ct",
              "value": "max-age=31536000, report-uri=\"http://csp.yahoo.com/beacon/csp?src=yahoocom-expect-ct-report-only\""
            },
            {
              "name": "referrer-policy",
              "value": "no-referrer-when-downgrade"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "name": "content-length",
              "value": "1009"
            },
            {
              "name": "etag",
              "value": "W/\"3f1-pzDeVsNcTzqxchRAYw0T00BgeEs\""
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "content-security-policy-report-only",
              "value": "default-src 'self'; report-uri https://csp.yahoo.com/beacon/csp?src=fendr_tdv2-app-fp.fp.yahoo.com"
            },
            {
              "name": "date",
              "value": "Mon, 06 Jul 2020 11:04:20 GMT"
            },
            {
              "name": "x-envoy-upstream-service-time",
              "value": "11"
            },
            {
              "name": "server",
              "value": "ATS"
            },
            {
              "name": "age",
              "value": "0"
            },
            {
              "name": "content-security-policy",
              "value": "frame-ancestors 'self' https://*.techcrunch.com https://*.yahoo.com https://*.aol.com https://*.huffingtonpost.com https://*.oath.com https://*.verizonmedia.com https://*.publishing.oath.com; sandbox allow-forms allow-same-origin allow-scripts allow-popups allow-popups-to-escape-sandbox allow-presentation; report-uri https://csp.yahoo.com/beacon/csp?src=ats&site=frontpage&region=FR&lang=fr-FR&device=desktop&yrid=a3bnqc5fg619k&partner=;"
            },
            {
              "name": "set-cookie",
              "value": "B=apmlg8tfg619k&b=3&s=te; Max-Age=31557600; Domain=.yahoo.com; Path=/"
            },
            {
              "name": "set-cookie",
              "value": "B=apmlg8tfg619k&b=3&s=te; expires=Tue, 06-Jul-2021 11:04:20 GMT; path=/; domain=.yahoo.com"
            },
            {
              "name": "X-Firefox-Spdy",
              "value": "h2"
            }
          ],
          "cookies": [
            {
              "name": "B",
              "value": "apmlg8tfg619k&b=3&s=te"
            },
            {
              "name": "B",
              "value": "apmlg8tfg619k&b=3&s=te"
            }
          ],
          "content": {
            "mimeType": "application/json; charset=utf-8",
            "size": 0,
            "text": ""
          },
          "redirectURL": "",
          "headersSize": 1337,
          "bodySize": 1337
        },
        "cache": {},
        "timings": {
          "blocked": 0,
          "dns": 0,
          "connect": 0,
          "ssl": 0,
          "send": 0,
          "wait": 44,
          "receive": 0
        },
        "time": 44,
        "_securityState": "secure",
        "serverIPAddress": "87.248.98.7",
        "connection": "443"
      }
    ]
  }
}